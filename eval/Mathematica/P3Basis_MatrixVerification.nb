(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1066272,      21124]
NotebookOptionsPosition[   1061939,      20990]
NotebookOutlinePosition[   1062682,      21017]
CellTagsIndexPosition[   1062639,      21014]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["P", "3"], " ", "ansatz", " ", "functions", " ", "on", " ", 
     "the", " ", "standard", " ", "2"}], "-", "simplex"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "0"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "u", "-", "v"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"3", "*", "u"}], "-", 
        RowBox[{"3", "*", "v"}]}], ")"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"3", "*", "u"}], "-", 
         RowBox[{"3", "*", "v"}]}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "1"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", "u"}], "-", "1"}], ")"}], "*", "u", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "u"}], "-", "2"}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "2"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", "*", "v"}], "-", "1"}], ")"}], "*", "v", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "v"}], "-", "2"}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "3"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"9", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "u", "-", "v"}], ")"}], "*", "u", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"3", "*", "u"}], "-", 
         RowBox[{"3", "*", "v"}]}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "4"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"9", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "u", "-", "v"}], ")"}], "*", "u", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "u"}], "-", "1"}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "5"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"9", "*", "u", "*", "v", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "u"}], "-", "1"}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "6"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"9", "*", "u", "*", "v", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "v"}], "-", "1"}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "7"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"9", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "u", "-", "v"}], ")"}], "*", "v", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", "v"}], "-", "1"}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "8"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"9", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "u", "-", "v"}], ")"}], "*", "v", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"3", "*", "u"}], "-", 
         RowBox[{"3", "*", "v"}]}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["f", "9"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"54", "*", "u", "*", "v", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "u", "-", "v"}], ")"}], "/", "2"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6767858091939363`*^9, 3.6767858842659693`*^9}, {
  3.676785916137505*^9, 3.676785937297802*^9}, {3.6767859775551767`*^9, 
  3.6767861612388563`*^9}, {3.677216265951652*^9, 3.677216286134706*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Gradients", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "0"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "0"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "1"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "1"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "2"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "2"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "3"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "3"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "4"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "4"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "5"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "5"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "6"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "6"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "7"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "7"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "8"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "8"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["df", "9"], "[", 
      RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
     RowBox[{"Grad", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["f", "9"], "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"u", ",", "v"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.676786237678103*^9, 3.6767862838329973`*^9}, {
  3.67721629197539*^9, 3.677216306175386*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Function", " ", "mapping", " ", "u"}], ",", 
    RowBox[{
     RowBox[{"v", " ", "on", " ", 
      RowBox[{"std", ".", " ", "2"}]}], "-", 
     RowBox[{
     "simplex", " ", "into", " ", "an", " ", "arbitrary", " ", "triangle", 
      " ", "with", " ", "vertices", " ", 
      SubscriptBox["x", "1"]}]}], ",", 
    SubscriptBox["x", "2"], ",", 
    SubscriptBox["x", "3"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"matrix", " ", "to", " ", "obtain", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "y"}], ",", "x"}], ")"}], " ", "from", " ", 
    RowBox[{"(", 
     RowBox[{"x", ",", "y"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{
      "u_", ",", "v_", ",", " ", "w_", ",", " ", "k_", ",", " ", "s_"}], 
      "]"}], ":=", 
     RowBox[{"J", ".", 
      RowBox[{"(", 
       RowBox[{"w", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "-", "w"}], ")"}], "*", "u"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"s", "-", "w"}], ")"}], "*", "v"}]}], ")"}]}]}], 
    ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Triangle", " ", "vertices"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "3"], "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "4"], "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"jacobians", " ", "for", " ", "the", " ", "transformations"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["J", "1"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", "2"], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", 
      RowBox[{"1", ",", "inv"}]], "=", 
     RowBox[{"Inverse", "[", 
      SubscriptBox["J", "1"], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["J", 
      RowBox[{"2", ",", "inv"}]], "=", 
     RowBox[{"Inverse", "[", 
      SubscriptBox["J", "2"], "]"}]}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Contributions", " ", "to", " ", "the", " ", "mass", " ", "matrix"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["f", "k"], "[", 
          RowBox[{"x", ",", "y"}], "]"}], "*", 
         RowBox[{
          SubscriptBox["f", "j"], "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.6767866747278147`*^9, 3.676786708695825*^9}, {
   3.6767867911128283`*^9, 3.676786793418013*^9}, {3.6767869323970547`*^9, 
   3.676786933445166*^9}, {3.677168702197494*^9, 3.67716870306936*^9}, 
   3.677217605805401*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Contributions", " ", "to", " ", "the", " ", "stiffness", " ", "matrix", 
    " ", "require", " ", "transposed", " ", "inverse", " ", "jacobians"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"A1", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             SubscriptBox["J", 
              RowBox[{"1", ",", "inv"}]], "]"}], ".", 
            RowBox[{
             SubscriptBox["df", "k"], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             SubscriptBox["J", 
              RowBox[{"1", ",", "inv"}]], "]"}], ".", 
            RowBox[{
             SubscriptBox["df", "j"], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", 
           RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"A2", "=", 
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             SubscriptBox["J", 
              RowBox[{"2", ",", "inv"}]], "]"}], ".", 
            RowBox[{
             SubscriptBox["df", "k"], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             SubscriptBox["J", 
              RowBox[{"2", ",", "inv"}]], "]"}], ".", 
            RowBox[{
             SubscriptBox["df", "j"], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", 
           RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.676786834062091*^9, 3.6767869772131767`*^9}, {
  3.677168705238645*^9, 3.677168709125498*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "set", " ", "up", " ", "the", " ", "mass", " ", "matrix", " ", 
     "element"}], "-", 
    RowBox[{
    "wise", " ", "using", " ", "the", " ", "natural", " ", "assignment", " ", 
     "of", " ", "the", " ", "local", " ", "basis", " ", "functions", " ", 
     "to", " ", "global", " ", "basis", " ", 
     RowBox[{"functions", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"upper", " ", "triangle"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Mmat1", " ", "=", " ", 
    RowBox[{"SparseArray", "[", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "7"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "5"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "6"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "7"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "5"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "6"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "7"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "5"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "6"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "7"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "6"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "7"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"6", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "7"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"7", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"7", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "8"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", "9"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"9", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "10"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"10", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15", ",", "15"}], "}"}], "->", 
        SubscriptBox["B", 
         RowBox[{"\[LeftDoubleBracket]", 
          RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], "]"}]}],
    ";"}]}]], "Input",
 CellChangeTimes->{{3.676787216814516*^9, 3.676787238392939*^9}, {
  3.676795562120513*^9, 3.676795569769273*^9}, {3.6767956178581343`*^9, 
  3.676795625889948*^9}, {3.676795663505808*^9, 3.676795676946604*^9}, {
  3.676795821581193*^9, 3.676796067369862*^9}, {3.6767961160344677`*^9, 
  3.676796465955655*^9}, {3.676796514332181*^9, 3.676796664325864*^9}, {
  3.676797574190598*^9, 3.676797575072466*^9}, {3.6767979680401497`*^9, 
  3.676797971647296*^9}, {3.6767985844031363`*^9, 3.676798591547311*^9}, {
  3.6772165117486877`*^9, 3.677216541763921*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mmat2", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "12"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "11"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "12"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "11"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "12"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "11"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "12"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "11"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "12"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "12"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "13"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "14"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "16"}], "}"}], "->", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
       SubscriptBox["B", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676797583118086*^9, 3.676797643654579*^9}, {
  3.676797753185541*^9, 3.67679794490178*^9}, {3.676798005222478*^9, 
  3.676798405428977*^9}, {3.677216875077528*^9, 3.67721687835641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MmatNatural", "=", 
   RowBox[{"Mmat1", "+", 
    RowBox[{"Transpose", "[", "Mmat1", "]"}], "-", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Diagonal", "[", "Mmat1", "]"}], "]"}], "+", "Mmat2", "+", 
    RowBox[{"Transpose", "[", "Mmat2", "]"}], "-", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Diagonal", "[", "Mmat2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6767986042552023`*^9, 3.6767986213284817`*^9}, {
  3.6772163296888113`*^9, 3.677216358847622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "MmatNatural", "]"}], "\[Equal]", 
  "MmatNatural"}]], "Input",
 CellChangeTimes->{{3.6767986236845407`*^9, 3.676798632320858*^9}, {
  3.677216334815298*^9, 3.6772163384951963`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.676798632996216*^9, 3.676798851139449*^9, 
  3.6769750099132557`*^9, 3.677159468612775*^9, 3.677168519248425*^9, 
  3.6772182590393143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "set", " ", "up", " ", "the", " ", "mass", " ", "matrix", " ", 
     "element"}], "-", 
    RowBox[{
    "wise", " ", "using", " ", "the", " ", "ALGORITHMIC", " ", "assignment", 
     " ", "of", " ", "the", " ", "local", " ", "basis", " ", "functions", " ",
      "to", " ", "global", " ", "basis", " ", 
     RowBox[{"functions", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mmat1", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "5"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "9"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Mmat2", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "11"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "11"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "12"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "7"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "12"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "11"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "12"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "11"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "12"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "12"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "13"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "14"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "16"}], "}"}], "->", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
         SubscriptBox["B", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MmatAlg", "=", 
     RowBox[{"Mmat1", "+", 
      RowBox[{"Transpose", "[", "Mmat1", "]"}], "-", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Diagonal", "[", "Mmat1", "]"}], "]"}], "+", "Mmat2", "+", 
      RowBox[{"Transpose", "[", "Mmat2", "]"}], "-", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Diagonal", "[", "Mmat2", "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"check", " ", "symmetry"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "[", "MmatAlg", "]"}], "\[Equal]", 
    "MmatAlg"}]}]}]], "Input",
 CellChangeTimes->{{3.6772165502761917`*^9, 3.6772165753087797`*^9}, {
  3.677216609687158*^9, 3.6772166509581747`*^9}, {3.677216684488381*^9, 
  3.677216862068239*^9}, {3.6772169366764708`*^9, 3.677217024556656*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.677218259104834*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Constructing", " ", "the", " ", "stiffness", " ", "matrix", " ", 
    "according", " ", "to", " ", "the", " ", "proper", " ", 
    RowBox[{"derivation", ".", " ", 
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
       RowBox[{
       "no", " ", "scaling", " ", "required", " ", "as", " ", "the", " ", 
        "triangles", " ", "are", " ", "congruent", " ", "to", " ", "the", " ",
         "standard", " ", "2"}], "-", 
       RowBox[{"simplex", "."}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Smat1", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smat2", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "7"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.676798916782488*^9, 3.676798992103634*^9}, {
  3.6767990790972157`*^9, 3.6767991993089933`*^9}, {3.6767992748570623`*^9, 
  3.676799372177781*^9}, {3.67721637531033*^9, 3.677216377773604*^9}, {
  3.677217434288732*^9, 3.677217437112863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SmatNatural", " ", "=", " ", 
   RowBox[{"Smat1", "+", 
    RowBox[{"Transpose", "[", "Smat1", "]"}], "-", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Diagonal", "[", "Smat1", "]"}], "]"}], "+", "Smat2", "+", 
    RowBox[{"Transpose", "[", "Smat2", "]"}], "-", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"Diagonal", "[", "Smat2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6767995649843283`*^9, 3.676799632979321*^9}, {
  3.677167427399868*^9, 3.677167427872251*^9}, {3.677216379337311*^9, 
  3.677216396793126*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "SmatNatural", "]"}], "\[Equal]", 
  "SmatNatural"}]], "Input",
 CellChangeTimes->{{3.676799649767682*^9, 3.676799657314783*^9}, 
   3.676799712797236*^9, {3.677216398880869*^9, 3.67721640640872*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6767996581373377`*^9, 3.676799713345231*^9, 
  3.676975010813052*^9, 3.6771594695055923`*^9, 3.677168519894765*^9, 
  3.677218259295484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "set", " ", "up", " ", "the", " ", "mass", " ", "matrix", " ", 
     "element"}], "-", 
    RowBox[{
    "wise", " ", "using", " ", "the", " ", "ALGORITHMIC", " ", "assignment", 
     " ", "of", " ", "the", " ", "local", " ", "basis", " ", "functions", " ",
      "to", " ", "global", " ", "basis", " ", 
     RowBox[{"functions", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Smat1", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "9"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}], "->", 
         SubscriptBox["A1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Smat2", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "7"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "11"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "12"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "13"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "14"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "16"}], "}"}], "->", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
         SubscriptBox["A2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SmatAlg", " ", "=", " ", 
     RowBox[{"Smat1", "+", 
      RowBox[{"Transpose", "[", "Smat1", "]"}], "-", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Diagonal", "[", "Smat1", "]"}], "]"}], "+", "Smat2", "+", 
      RowBox[{"Transpose", "[", "Smat2", "]"}], "-", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"Diagonal", "[", "Smat2", "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Transpose", "[", "SmatAlg", "]"}], "\[Equal]", 
    "SmatAlg"}]}]}]], "Input",
 CellChangeTimes->{{3.6772174277537622`*^9, 3.677217464747973*^9}, {
  3.677217544316424*^9, 3.677217571448709*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.677218259400132*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Computing", " ", "the", " ", "damping", " ", "matrix", " ", "element"}], 
    "-", "wise"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"We", "'"}], "ll", " ", "only", " ", "require", " ", "the", " ", 
    "upper", " ", "triangle"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.676801159371426*^9, 3.67680119136695*^9}, {
  3.6768013282991657`*^9, 3.676801341881551*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Element", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"C1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["f", "k"], "[", 
          RowBox[{"x", ",", "y"}], "]"}], "*", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"x", ",", "y", ",", " ", 
            SubscriptBox["x", "2"], ",", 
            SubscriptBox["x", "3"], ",", " ", 
            SubscriptBox["x", "1"]}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             SubscriptBox["J", 
              RowBox[{"1", ",", "inv"}]], "]"}], ".", 
            RowBox[{
             SubscriptBox["df", "j"], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.676801180119191*^9, 3.6768012318806877`*^9}, {
  3.676801304482424*^9, 3.676801317690495*^9}, {3.676801365274522*^9, 
  3.676801367410934*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Element", " ", "2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.676801346553103*^9, 3.676801350314348*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"C2", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "k"], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "*", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"x", ",", "y", ",", " ", 
           SubscriptBox["x", "3"], ",", 
           SubscriptBox["x", "4"], ",", " ", 
           SubscriptBox["x", "1"]}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            SubscriptBox["J", 
             RowBox[{"2", ",", "inv"}]], "]"}], ".", 
           RowBox[{
            SubscriptBox["df", "j"], "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676801373754784*^9, 3.676801373946609*^9}, {
  3.676801416523119*^9, 3.6768014172375097`*^9}, {3.677168690629199*^9, 
  3.6771686916774817`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up", " ", "the", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Cmat1", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "5"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "6"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "5"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "7"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "5"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "6"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "7"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "7"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "9"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"9", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "10"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"10", ",", "15"}], "}"}], "->", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}], "\[Rule]", 
         SubscriptBox["C1", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Cmat2", " ", "=", " ", 
     RowBox[{"SparseArray", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "7"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "8"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "11"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "12"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "7"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "8"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "11"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "12"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "7"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "8"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "11"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "12"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "8"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "11"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "12"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"7", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "11"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "12"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"8", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "12"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"11", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "13"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"12", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "14"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"13", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"14", ",", "16"}], "}"}], "->", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
         SubscriptBox["C2", 
          RowBox[{"\[LeftDoubleBracket]", 
           RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.676801437467473*^9, 3.676801510926237*^9}, {
  3.6771587338612843`*^9, 3.677158736985298*^9}, {3.677217475321124*^9, 
  3.677217477768235*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CmatNatural", " ", "=", " ", 
   RowBox[{"Cmat1", "-", 
    RowBox[{"Transpose", "[", "Cmat1", "]"}], "+", 
    RowBox[{"(", 
     RowBox[{"Cmat2", "-", 
      RowBox[{"Transpose", "[", "Cmat2", "]"}]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.67680154702265*^9, 3.676801581886592*^9}, {
  3.677216418592606*^9, 3.677216424217165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cmat1", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cmat2", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CmatAlg", " ", "=", " ", 
   RowBox[{"Cmat1", "-", 
    RowBox[{"Transpose", "[", "Cmat1", "]"}], "+", 
    RowBox[{"(", 
     RowBox[{"Cmat2", "-", 
      RowBox[{"Transpose", "[", "Cmat2", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Transpose", "[", "CmatAlg", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "1"}], "*", "CmatAlg"}]}]}], "Input",
 CellChangeTimes->{{3.6772175025376062`*^9, 3.677217522829733*^9}, {
  3.677217578753006*^9, 3.677217604656928*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.677218725686159*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "CmatNatural", "]"}], "\[Equal]", 
  RowBox[{
   RowBox[{"-", "1"}], "*", "CmatNatural"}]}]], "Input",
 CellChangeTimes->{{3.6768018336858597`*^9, 3.676801840427055*^9}, {
  3.677216434505911*^9, 3.677216437659924*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.676801841511195*^9, 3.67697541643917*^9, 
  3.677160746816903*^9, 3.677168987312839*^9, 3.677218725808606*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "MmatNatural", "]"}]], "Input",
 CellChangeTimes->{{3.676974324361766*^9, 3.676974328145767*^9}, {
  3.6772164408897133`*^9, 3.677216441795204*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["19", "1680"], 
      FractionBox["11", "13440"], 
      FractionBox["11", "6720"], 
      FractionBox["11", "13440"], 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "1120"], "0", 
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"]},
     {
      FractionBox["11", "13440"], 
      FractionBox["19", "3360"], 
      FractionBox["11", "13440"], "0", 
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], "0", "0", "0", "0", 
      FractionBox["3", "1120"], "0"},
     {
      FractionBox["11", "6720"], 
      FractionBox["11", "13440"], 
      FractionBox["19", "1680"], 
      FractionBox["11", "13440"], "0", 
      FractionBox["3", "2240"], "0", 
      FractionBox["3", "1120"], 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"]},
     {
      FractionBox["11", "13440"], "0", 
      FractionBox["11", "13440"], 
      FractionBox["19", "3360"], "0", "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], "0", "0", "0", 
      FractionBox["3", "2240"], "0", 
      FractionBox["3", "2240"], "0", 
      FractionBox["3", "1120"]},
     {
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", "0", 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], "0", 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {
      FractionBox["3", "1120"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["9", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["9", "320"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"]},
     {"0", 
      FractionBox["9", "4480"], 
      FractionBox["3", "1120"], 
      FractionBox["9", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "320"]}], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {"0", 
      FractionBox["3", "2240"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], "0", "0", 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", 
      FractionBox["27", "2240"]},
     {
      FractionBox["9", "4480"], "0", "0", 
      FractionBox["3", "2240"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], "0", 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], "0", "0", "0", 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], "0", 
      FractionBox["27", "2240"]},
     {"0", "0", 
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], "0", 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"], "0", 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], "0", "0", "0", "0", 
      FractionBox["81", "560"], "0"},
     {
      FractionBox["3", "1120"], "0", 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"], "0", "0", 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], "0", "0", 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], "0", 
      FractionBox["81", "560"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 13, 21, 34, 42, 51, 60, 75, 90, 99, 108, 117, 126, 135, 144, 154,
        164}, {{1}, {3}, {4}, {7}, {11}, {12}, {13}, {16}, {2}, {5}, {6}, {
       9}, {15}, {2}, {1}, {3}, {5}, {7}, {8}, {10}, {15}, {1}, {3}, {2}, {
       4}, {8}, {11}, {13}, {14}, {16}, {6}, {9}, {10}, {15}, {1}, {3}, {4}, {
       7}, {8}, {12}, {14}, {16}, {5}, {1}, {2}, {6}, {7}, {8}, {9}, {10}, {
       15}, {6}, {1}, {3}, {5}, {7}, {8}, {9}, {10}, {15}, {1}, {4}, {7}, {
       2}, {5}, {6}, {8}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {15}, {
       3}, {4}, {7}, {8}, {2}, {5}, {6}, {11}, {12}, {13}, {14}, {16}, {9}, {
       10}, {15}, {9}, {1}, {3}, {5}, {6}, {7}, {8}, {10}, {15}, {10}, {2}, {
       3}, {5}, {6}, {7}, {8}, {9}, {15}, {1}, {3}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {
       1}, {3}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {3}, {4}, {7}, {8}, {
       11}, {12}, {13}, {14}, {16}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
       9}, {10}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}}}, {
      Rational[19, 1680], Rational[11, 6720], Rational[11, 13440], Rational[
       3, 1120], Rational[9, 4480], Rational[9, 4480], Rational[3, 2240], 
       Rational[3, 1120], Rational[11, 13440], Rational[9, 4480], Rational[
       9, 4480], Rational[3, 2240], Rational[3, 1120], Rational[19, 3360], 
       Rational[11, 13440], Rational[11, 13440], Rational[3, 2240], Rational[
       9, 4480], Rational[9, 4480], Rational[3, 2240], Rational[3, 1120], 
       Rational[11, 6720], Rational[19, 1680], Rational[11, 13440], Rational[
       11, 13440], Rational[3, 1120], Rational[3, 2240], Rational[9, 4480], 
       Rational[9, 4480], Rational[3, 1120], Rational[3, 2240], Rational[
       9, 4480], Rational[9, 4480], Rational[3, 1120], Rational[11, 13440], 
       Rational[11, 13440], Rational[19, 3360], Rational[9, 4480], Rational[
       9, 4480], Rational[3, 2240], Rational[3, 2240], Rational[3, 1120], 
       Rational[9, 224], Rational[9, 4480], Rational[3, 2240], 
       Rational[-9, 640], Rational[-9, 2240], Rational[-9, 896], 
       Rational[-9, 896], Rational[9, 448], Rational[27, 2240], Rational[
       9, 224], Rational[9, 4480], Rational[3, 2240], Rational[-9, 640], 
       Rational[-9, 896], Rational[9, 448], Rational[-9, 2240], 
       Rational[-9, 896], Rational[27, 2240], Rational[3, 1120], Rational[
       9, 4480], Rational[9, 112], Rational[9, 4480], Rational[-9, 2240], 
       Rational[-9, 896], Rational[-9, 320], Rational[-9, 896], 
       Rational[-9, 2240], Rational[9, 448], Rational[-9, 896], Rational[
       27, 2240], Rational[9, 448], Rational[-9, 896], Rational[27, 2240], 
       Rational[3, 1120], Rational[9, 4480], Rational[-9, 320], Rational[
       9, 112], Rational[9, 4480], Rational[-9, 896], Rational[9, 448], 
       Rational[9, 448], Rational[-9, 896], Rational[-9, 896], 
       Rational[-9, 2240], Rational[27, 2240], Rational[-9, 896], 
       Rational[-9, 2240], Rational[27, 2240], Rational[9, 224], Rational[
       3, 2240], Rational[9, 4480], Rational[-9, 896], Rational[-9, 2240], 
       Rational[9, 448], Rational[-9, 896], Rational[-9, 640], Rational[
       27, 2240], Rational[9, 224], Rational[3, 2240], Rational[9, 4480], 
       Rational[9, 448], Rational[-9, 896], Rational[-9, 896], 
       Rational[-9, 2240], Rational[-9, 640], Rational[27, 2240], Rational[
       9, 4480], Rational[3, 2240], Rational[-9, 896], Rational[9, 448], 
       Rational[9, 224], Rational[-9, 640], Rational[-9, 2240], 
       Rational[-9, 896], Rational[27, 2240], Rational[9, 4480], Rational[
       3, 2240], Rational[-9, 2240], Rational[-9, 896], Rational[-9, 640], 
       Rational[9, 224], Rational[-9, 896], Rational[9, 448], Rational[
       27, 2240], Rational[3, 2240], Rational[9, 4480], Rational[9, 448], 
       Rational[-9, 896], Rational[-9, 2240], Rational[-9, 896], Rational[
       9, 224], Rational[-9, 640], Rational[27, 2240], Rational[9, 4480], 
       Rational[3, 2240], Rational[-9, 896], Rational[-9, 2240], 
       Rational[-9, 896], Rational[9, 448], Rational[-9, 640], Rational[
       9, 224], Rational[27, 2240], Rational[81, 560], Rational[3, 1120], 
       Rational[3, 1120], Rational[3, 1120], Rational[27, 2240], Rational[
       27, 2240], Rational[27, 2240], Rational[27, 2240], Rational[27, 2240], 
       Rational[27, 2240], Rational[3, 1120], Rational[3, 1120], Rational[
       3, 1120], Rational[27, 2240], Rational[27, 2240], Rational[27, 2240], 
       Rational[27, 2240], Rational[27, 2240], Rational[27, 2240], Rational[
       81, 560]}}]]]]], "Output",
 CellChangeTimes->{3.676975416550316*^9, 3.67716074707548*^9, 
  3.677168987395783*^9, 3.677218725929981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "SmatNatural", "]"}]], "Input",
 CellChangeTimes->{{3.676974330866991*^9, 3.6769743387127647`*^9}, {
  3.67721644497735*^9, 3.6772164473560658`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["17", "20"], 
      RowBox[{"-", 
       FractionBox["7", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["3", "40"], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["27", "80"], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["17", "20"], 
      RowBox[{"-", 
       FractionBox["7", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["17", "20"], 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["3", "40"], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["7", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["17", "20"], "0", "0", 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], "0", "0", 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      FractionBox["27", "80"], "0", 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      FractionBox["27", "4"], 
      RowBox[{"-", 
       FractionBox["27", "20"]}], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      RowBox[{"-", 
       FractionBox["27", "20"]}], 
      FractionBox["27", "4"], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", "0", "0", 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["3", "8"], "0", "0", 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0", 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      RowBox[{"-", 
       FractionBox["27", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["3", "8"], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], "0", "0", "0", "0", 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0"},
     {
      FractionBox["27", "80"], "0", 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0", 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", "0", "0", "0", 
      FractionBox["81", "10"], "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", 
      FractionBox["81", "10"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 13, 22, 35, 44, 52, 59, 75, 91, 98, 106, 113, 121, 128, 136, 141,
        146}, {{1}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {2}, {5}, {6}, {
       9}, {10}, {2}, {1}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {3}, {2}, {
       4}, {7}, {8}, {11}, {12}, {13}, {14}, {5}, {6}, {9}, {10}, {1}, {3}, {
       4}, {7}, {8}, {11}, {12}, {13}, {14}, {5}, {1}, {2}, {3}, {6}, {7}, {
       8}, {15}, {6}, {1}, {2}, {3}, {5}, {7}, {8}, {1}, {3}, {4}, {7}, {2}, {
       5}, {6}, {8}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {15}, {1}, {
       3}, {4}, {7}, {8}, {2}, {5}, {6}, {11}, {12}, {13}, {14}, {16}, {9}, {
       10}, {15}, {9}, {1}, {2}, {3}, {7}, {8}, {10}, {10}, {1}, {2}, {3}, {
       7}, {8}, {9}, {15}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {1}, {3}, {
       4}, {7}, {8}, {11}, {12}, {16}, {1}, {3}, {4}, {7}, {8}, {13}, {14}, {
       1}, {3}, {4}, {7}, {8}, {13}, {14}, {16}, {15}, {5}, {7}, {8}, {10}, {
       7}, {8}, {12}, {14}, {16}}}, {
      Rational[17, 20], Rational[-7, 80], Rational[3, 40], Rational[3, 40], 
       Rational[-3, 80], Rational[-3, 80], Rational[-27, 40], Rational[
       27, 80], Rational[-7, 80], Rational[-3, 80], Rational[-3, 80], 
       Rational[-27, 40], Rational[27, 80], Rational[17, 20], 
       Rational[-7, 80], Rational[-7, 80], Rational[-51, 80], Rational[3, 8], 
       Rational[-3, 40], Rational[-3, 40], Rational[3, 8], Rational[-51, 80], 
       Rational[17, 20], Rational[-7, 80], Rational[-7, 80], Rational[3, 40], 
       Rational[3, 40], Rational[-27, 40], Rational[27, 80], Rational[-3, 80],
        Rational[-3, 80], Rational[27, 80], Rational[-27, 40], 
       Rational[-3, 80], Rational[-3, 80], Rational[-7, 80], Rational[-7, 80],
        Rational[17, 20], Rational[-3, 40], Rational[-3, 40], Rational[3, 8], 
       Rational[-51, 80], Rational[3, 8], Rational[-51, 80], Rational[27, 8], 
       Rational[-3, 80], Rational[-51, 80], Rational[27, 80], 
       Rational[-27, 16], Rational[27, 80], Rational[27, 80], 
       Rational[-81, 40], Rational[27, 8], Rational[-3, 80], Rational[3, 8], 
       Rational[-27, 40], Rational[-27, 16], Rational[27, 80], 
       Rational[-27, 16], Rational[3, 40], Rational[3, 40], Rational[-3, 40], 
       Rational[27, 4], Rational[-3, 40], Rational[27, 80], Rational[27, 80], 
       Rational[-27, 20], Rational[27, 80], Rational[27, 80], 
       Rational[-27, 16], Rational[27, 80], Rational[-81, 40], 
       Rational[-27, 16], Rational[27, 80], Rational[-81, 40], Rational[
       3, 40], Rational[3, 40], Rational[-3, 40], Rational[-27, 20], Rational[
       27, 4], Rational[-3, 40], Rational[27, 80], Rational[-27, 16], 
       Rational[-27, 16], Rational[27, 80], Rational[27, 80], Rational[
       27, 80], Rational[-81, 40], Rational[27, 80], Rational[27, 80], 
       Rational[-81, 40], Rational[27, 8], Rational[-27, 40], Rational[3, 8], 
       Rational[-3, 80], Rational[-27, 16], Rational[27, 80], 
       Rational[-27, 16], Rational[27, 8], Rational[27, 80], 
       Rational[-51, 80], Rational[-3, 80], Rational[27, 80], Rational[
       27, 80], Rational[-27, 16], Rational[-81, 40], Rational[-3, 80], 
       Rational[-27, 40], Rational[3, 8], Rational[27, 80], Rational[-27, 16],
        Rational[27, 8], Rational[-27, 16], Rational[-3, 80], Rational[
       27, 80], Rational[-51, 80], Rational[27, 80], Rational[27, 80], 
       Rational[-27, 16], Rational[27, 8], Rational[-81, 40], 
       Rational[-27, 40], Rational[-3, 80], Rational[3, 8], Rational[-27, 16],
        Rational[27, 80], Rational[27, 8], Rational[-27, 16], Rational[
       27, 80], Rational[-3, 80], Rational[-51, 80], Rational[27, 80], 
       Rational[27, 80], Rational[-27, 16], Rational[27, 8], 
       Rational[-81, 40], Rational[81, 10], Rational[-81, 40], 
       Rational[-81, 40], Rational[-81, 40], Rational[-81, 40], 
       Rational[-81, 40], Rational[-81, 40], Rational[-81, 40], 
       Rational[-81, 40], Rational[81, 10]}}]]]]], "Output",
 CellChangeTimes->{3.6769754166548567`*^9, 3.677160747341611*^9, 
  3.677168987452846*^9, 3.677218726045882*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "CmatNatural", "]"}]], "Input",
 CellChangeTimes->{{3.676974340271966*^9, 3.6769743441059637`*^9}, {
  3.677216450177628*^9, 3.677216452410363*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox["29", "4480"]}], "0", 
      FractionBox["29", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["51", "4480"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["3", "448"]}], 
      RowBox[{"-", 
       FractionBox["3", "4480"]}], 
      FractionBox["51", "4480"], 
      FractionBox["9", "2240"], 
      FractionBox["3", "448"], 
      FractionBox["3", "4480"], 
      FractionBox["3", "320"], 
      RowBox[{"-", 
       FractionBox["3", "320"]}]},
     {
      FractionBox["29", "4480"], "0", 
      FractionBox["47", "4480"], "0", 
      FractionBox["141", "2240"], 
      RowBox[{"-", 
       FractionBox["99", "2240"]}], 
      FractionBox["27", "4480"], 
      FractionBox["93", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["3", "2240"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "560"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["47", "4480"]}], "0", 
      FractionBox["31", "1920"], 
      FractionBox["51", "896"], 
      RowBox[{"-", 
       FractionBox["51", "448"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      RowBox[{"-", 
       FractionBox["3", "320"]}], 
      FractionBox["51", "448"], 
      RowBox[{"-", 
       FractionBox["51", "896"]}], 
      FractionBox["9", "4480"], 
      FractionBox["3", "320"], 
      FractionBox["3", "448"], 
      RowBox[{"-", 
       FractionBox["3", "448"]}]},
     {
      RowBox[{"-", 
       FractionBox["29", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["31", "1920"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], 
      RowBox[{"-", 
       FractionBox["93", "4480"]}], "0", "0", 
      FractionBox["99", "2240"], 
      RowBox[{"-", 
       FractionBox["141", "2240"]}], 
      FractionBox["9", "2240"], 
      RowBox[{"-", 
       FractionBox["3", "2240"]}], "0", 
      FractionBox["9", "560"]},
     {
      FractionBox["9", "2240"], 
      RowBox[{"-", 
       FractionBox["141", "2240"]}], 
      RowBox[{"-", 
       FractionBox["51", "896"]}], "0", "0", 
      FractionBox["621", "4480"], 
      RowBox[{"-", 
       FractionBox["117", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "160"]}], "0", "0", "0", "0", 
      FractionBox["81", "448"], "0"},
     {
      FractionBox["51", "4480"], 
      FractionBox["99", "2240"], 
      FractionBox["51", "448"], "0", 
      RowBox[{"-", 
       FractionBox["621", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["279", "4480"]}], 
      FractionBox["117", "560"], 
      FractionBox["9", "2240"], 
      FractionBox["99", "4480"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "2240"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], "0", 
      FractionBox["27", "4480"], 
      FractionBox["117", "4480"], 
      FractionBox["279", "4480"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["279", "4480"]}], 
      RowBox[{"-", 
       FractionBox["117", "4480"]}], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["9", "224"]}], 
      RowBox[{"-", 
       FractionBox["27", "280"]}], 
      FractionBox["27", "280"]},
     {"0", 
      RowBox[{"-", 
       FractionBox["93", "4480"]}], "0", 
      FractionBox["93", "4480"], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["117", "560"]}], "0", "0", 
      FractionBox["153", "4480"], 
      FractionBox["207", "4480"], 
      FractionBox["117", "560"], 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      RowBox[{"-", 
       FractionBox["153", "4480"]}], 
      RowBox[{"-", 
       FractionBox["207", "4480"]}], 
      RowBox[{"-", 
       FractionBox["27", "112"]}], 
      FractionBox["27", "112"]},
     {
      FractionBox["3", "448"], 
      FractionBox["9", "2240"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["9", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["153", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "2240"]}], "0"},
     {
      FractionBox["3", "4480"], 
      RowBox[{"-", 
       FractionBox["3", "2240"]}], 
      FractionBox["3", "320"], "0", 
      FractionBox["9", "160"], 
      RowBox[{"-", 
       FractionBox["99", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "224"]}], 
      RowBox[{"-", 
       FractionBox["207", "4480"]}], 
      FractionBox["27", "4480"], "0", "0", "0", "0", "0", 
      FractionBox["459", "2240"], "0"},
     {
      RowBox[{"-", 
       FractionBox["51", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["51", "448"]}], 
      RowBox[{"-", 
       FractionBox["99", "2240"]}], "0", "0", 
      FractionBox["279", "4480"], 
      RowBox[{"-", 
       FractionBox["117", "560"]}], "0", "0", "0", 
      FractionBox["513", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["99", "4480"]}], "0", 
      FractionBox["81", "2240"]},
     {
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", 
      FractionBox["51", "896"], 
      FractionBox["141", "2240"], "0", "0", 
      FractionBox["117", "4480"], 
      FractionBox["9", "112"], "0", "0", 
      RowBox[{"-", 
       FractionBox["513", "4480"]}], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "160"], "0", 
      RowBox[{"-", 
       FractionBox["81", "448"]}]},
     {
      RowBox[{"-", 
       FractionBox["3", "448"]}], "0", 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      FractionBox["153", "4480"], "0", "0", 
      FractionBox["9", "2240"], 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], "0", 
      FractionBox["27", "4480"], "0", 
      FractionBox["27", "2240"]},
     {
      RowBox[{"-", 
       FractionBox["3", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["3", "320"]}], 
      FractionBox["3", "2240"], "0", "0", 
      FractionBox["9", "224"], 
      FractionBox["207", "4480"], "0", "0", 
      FractionBox["99", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "160"]}], 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["459", "2240"]}]},
     {
      RowBox[{"-", 
       FractionBox["3", "320"]}], 
      FractionBox["9", "560"], 
      RowBox[{"-", 
       FractionBox["3", "448"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "448"]}], 
      FractionBox["81", "2240"], 
      FractionBox["27", "280"], 
      FractionBox["27", "112"], 
      FractionBox["27", "2240"], 
      RowBox[{"-", 
       FractionBox["459", "2240"]}], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["3", "320"], "0", 
      FractionBox["3", "448"], 
      RowBox[{"-", 
       FractionBox["9", "560"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "280"]}], 
      RowBox[{"-", 
       FractionBox["27", "112"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "2240"]}], 
      FractionBox["81", "448"], 
      RowBox[{"-", 
       FractionBox["27", "2240"]}], 
      FractionBox["459", "2240"], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 16, 26, 42, 52, 62, 72, 88, 104, 114, 124, 134, 144, 154, 164, 
       173, 182}, {{1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {
       2}, {5}, {6}, {9}, {10}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
       9}, {10}, {15}, {1}, {2}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {
       16}, {5}, {6}, {9}, {10}, {15}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {
       1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {2}, {3}, {
       5}, {6}, {7}, {4}, {8}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {
       15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {4}, {11}, {12}, {13}, {14}, {
       16}, {9}, {10}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {
       15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {3}, {
       4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {
       11}, {12}, {13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {
       16}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {3}, {4}, {
       7}, {8}, {11}, {12}, {13}, {14}}}, {
      0, 0, Rational[29, 4480], 0, 0, Rational[51, 4480], Rational[9, 2240], 
       Rational[3, 448], Rational[3, 4480], Rational[-3, 320], 
       Rational[-29, 4480], Rational[-9, 2240], Rational[-51, 4480], 
       Rational[-3, 448], Rational[-3, 4480], Rational[3, 320], Rational[
       29, 4480], 0, Rational[47, 4480], Rational[141, 2240], 
       Rational[-99, 2240], Rational[27, 4480], Rational[93, 4480], 
       Rational[-9, 2240], Rational[3, 2240], Rational[-9, 560], 0, 
       Rational[-47, 4480], 0, Rational[31, 1920], 0, 0, Rational[51, 448], 
       Rational[-51, 896], Rational[9, 4480], Rational[3, 320], 
       Rational[-3, 448], Rational[51, 896], Rational[-51, 448], 
       Rational[-9, 4480], Rational[-3, 320], Rational[3, 448], 
       Rational[-29, 4480], Rational[-31, 1920], 0, Rational[-27, 4480], 
       Rational[-93, 4480], Rational[99, 2240], Rational[-141, 2240], 
       Rational[9, 2240], Rational[-3, 2240], Rational[9, 560], Rational[
       9, 2240], Rational[-141, 2240], Rational[-51, 896], 0, Rational[
       621, 4480], Rational[-117, 4480], Rational[-9, 112], 
       Rational[-9, 4480], Rational[-9, 160], Rational[81, 448], Rational[
       51, 4480], Rational[99, 2240], Rational[51, 448], Rational[-621, 4480],
        0, Rational[-279, 4480], Rational[117, 560], Rational[9, 2240], 
       Rational[99, 4480], Rational[-81, 2240], 0, Rational[-27, 4480], 0, 
       Rational[117, 4480], Rational[279, 4480], 0, Rational[27, 4480], 0, 
       Rational[-279, 4480], Rational[-117, 4480], Rational[9, 112], 
       Rational[-9, 224], Rational[27, 280], Rational[-9, 112], Rational[
       9, 224], Rational[-27, 280], 0, Rational[-93, 4480], 0, Rational[
       9, 112], Rational[-117, 560], 0, 0, Rational[93, 4480], Rational[
       117, 560], Rational[-9, 112], Rational[-153, 4480], 
       Rational[-207, 4480], Rational[27, 112], Rational[153, 4480], Rational[
       207, 4480], Rational[-27, 112], Rational[3, 448], Rational[9, 2240], 
       Rational[9, 4480], Rational[9, 4480], Rational[-9, 2240], Rational[
       9, 112], Rational[-153, 4480], 0, Rational[-27, 4480], 
       Rational[-27, 2240], Rational[3, 4480], Rational[-3, 2240], Rational[
       3, 320], Rational[9, 160], Rational[-99, 4480], Rational[-9, 224], 
       Rational[-207, 4480], Rational[27, 4480], 0, Rational[459, 2240], 
       Rational[-51, 4480], Rational[-51, 448], Rational[-99, 2240], Rational[
       279, 4480], Rational[-117, 560], 0, Rational[513, 4480], 
       Rational[-9, 2240], Rational[-99, 4480], Rational[81, 2240], 
       Rational[-9, 2240], Rational[51, 896], Rational[141, 2240], Rational[
       117, 4480], Rational[9, 112], Rational[-513, 4480], 0, Rational[
       9, 4480], Rational[9, 160], Rational[-81, 448], Rational[-3, 448], 
       Rational[-9, 4480], Rational[-9, 2240], Rational[-9, 112], Rational[
       153, 4480], Rational[9, 2240], Rational[-9, 4480], 0, Rational[
       27, 4480], Rational[27, 2240], Rational[-3, 4480], Rational[-3, 320], 
       Rational[3, 2240], Rational[9, 224], Rational[207, 4480], Rational[
       99, 4480], Rational[-9, 160], Rational[-27, 4480], 0, 
       Rational[-459, 2240], Rational[-3, 320], Rational[9, 560], 
       Rational[-3, 448], Rational[-81, 448], Rational[81, 2240], Rational[
       27, 280], Rational[27, 112], Rational[27, 2240], Rational[-459, 2240], 
       Rational[3, 320], Rational[3, 448], Rational[-9, 560], 
       Rational[-27, 280], Rational[-27, 112], Rational[-81, 2240], Rational[
       81, 448], Rational[-27, 2240], Rational[459, 2240]}}]]]]], "Output",
 CellChangeTimes->{3.676975416757841*^9, 3.677160747579165*^9, 
  3.677168987507691*^9, 3.677218726155941*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{"\"\<MassMatrixNatural.csv\>\"", ",", " ", "MmatNatural"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<StiffnesMatrixNatural.csv\>\"", ",", " ", "SmatNatural"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<DampingMatrixNatural.csv\>\"", ",", " ", "CmatNatural"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.677158392433813*^9, 3.67715843576388*^9}, {
  3.677216456681984*^9, 3.677216485602298*^9}, {3.6772176364800167`*^9, 
  3.677217651255578*^9}}],

Cell[BoxData["\<\"MassMatrixNatural.csv\"\>"], "Output",
 CellChangeTimes->{3.6771607479058313`*^9, 3.677168987621517*^9, 
  3.677218727182068*^9}],

Cell[BoxData["\<\"StiffnesMatrixNatural.csv\"\>"], "Output",
 CellChangeTimes->{3.6771607479058313`*^9, 3.677168987621517*^9, 
  3.677218727189937*^9}],

Cell[BoxData["\<\"DampingMatrixNatural.csv\"\>"], "Output",
 CellChangeTimes->{3.6771607479058313`*^9, 3.677168987621517*^9, 
  3.67721872724769*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "MmatAlg", "]"}]], "Input",
 CellChangeTimes->{{3.677217657108555*^9, 3.67721766217601*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["19", "1680"], 
      FractionBox["11", "13440"], 
      FractionBox["11", "6720"], 
      FractionBox["11", "13440"], 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "1120"], 
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"]},
     {
      FractionBox["11", "13440"], 
      FractionBox["19", "3360"], 
      FractionBox["11", "13440"], "0", 
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], "0", "0", "0", "0", 
      FractionBox["3", "1120"], "0"},
     {
      FractionBox["11", "6720"], 
      FractionBox["11", "13440"], 
      FractionBox["19", "1680"], 
      FractionBox["11", "13440"], "0", 
      FractionBox["3", "2240"], 
      FractionBox["3", "1120"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"]},
     {
      FractionBox["11", "13440"], "0", 
      FractionBox["11", "13440"], 
      FractionBox["19", "3360"], "0", "0", 
      FractionBox["9", "4480"], 
      FractionBox["9", "4480"], "0", "0", "0", 
      FractionBox["3", "2240"], 
      FractionBox["3", "2240"], "0", "0", 
      FractionBox["3", "1120"]},
     {
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", "0", 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], "0", 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {"0", 
      FractionBox["9", "4480"], 
      FractionBox["3", "1120"], 
      FractionBox["9", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["9", "320"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "1120"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["9", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "320"]}], 
      FractionBox["9", "112"], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {"0", 
      FractionBox["3", "2240"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], "0", "0", "0", "0", 
      FractionBox["27", "2240"], "0"},
     {
      FractionBox["9", "4480"], "0", 
      FractionBox["3", "2240"], "0", "0", "0", 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", "0", 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", 
      FractionBox["27", "2240"]},
     {
      FractionBox["9", "4480"], "0", "0", 
      FractionBox["3", "2240"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], 
      FractionBox["9", "448"], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", 
      FractionBox["27", "2240"]},
     {"0", "0", 
      FractionBox["9", "4480"], 
      FractionBox["3", "2240"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], "0", 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "2240"], "0", 
      FractionBox["9", "4480"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      FractionBox["9", "448"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["9", "896"]}], 
      RowBox[{"-", 
       FractionBox["9", "640"]}], 
      FractionBox["9", "224"], "0", 
      FractionBox["27", "2240"]},
     {
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"], "0", 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], "0", "0", "0", "0", 
      FractionBox["81", "560"], "0"},
     {
      FractionBox["3", "1120"], "0", 
      FractionBox["3", "1120"], 
      FractionBox["3", "1120"], "0", "0", 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], "0", "0", 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], 
      FractionBox["27", "2240"], "0", 
      FractionBox["81", "560"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 13, 21, 34, 42, 51, 60, 75, 90, 99, 108, 117, 126, 135, 144, 154,
        164}, {{1}, {3}, {4}, {8}, {11}, {12}, {14}, {16}, {2}, {5}, {6}, {
       9}, {15}, {2}, {1}, {3}, {5}, {7}, {8}, {10}, {15}, {1}, {3}, {2}, {
       4}, {7}, {11}, {13}, {14}, {16}, {6}, {9}, {10}, {15}, {1}, {3}, {4}, {
       7}, {8}, {12}, {13}, {16}, {5}, {1}, {2}, {6}, {7}, {8}, {9}, {10}, {
       15}, {6}, {1}, {3}, {5}, {7}, {8}, {9}, {10}, {15}, {3}, {4}, {7}, {
       2}, {5}, {6}, {8}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {15}, {
       1}, {4}, {7}, {8}, {2}, {5}, {6}, {11}, {12}, {13}, {14}, {16}, {9}, {
       10}, {15}, {9}, {1}, {3}, {5}, {6}, {7}, {8}, {10}, {15}, {10}, {2}, {
       3}, {5}, {6}, {7}, {8}, {9}, {15}, {1}, {3}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {
       3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {1}, {3}, {7}, {8}, {
       11}, {12}, {13}, {14}, {16}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
       9}, {10}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}}}, {
      Rational[19, 1680], Rational[11, 6720], Rational[11, 13440], Rational[
       3, 1120], Rational[9, 4480], Rational[9, 4480], Rational[3, 2240], 
       Rational[3, 1120], Rational[11, 13440], Rational[9, 4480], Rational[
       9, 4480], Rational[3, 2240], Rational[3, 1120], Rational[19, 3360], 
       Rational[11, 13440], Rational[11, 13440], Rational[3, 2240], Rational[
       9, 4480], Rational[9, 4480], Rational[3, 2240], Rational[3, 1120], 
       Rational[11, 6720], Rational[19, 1680], Rational[11, 13440], Rational[
       11, 13440], Rational[3, 1120], Rational[3, 2240], Rational[9, 4480], 
       Rational[9, 4480], Rational[3, 1120], Rational[3, 2240], Rational[
       9, 4480], Rational[9, 4480], Rational[3, 1120], Rational[11, 13440], 
       Rational[11, 13440], Rational[19, 3360], Rational[9, 4480], Rational[
       9, 4480], Rational[3, 2240], Rational[3, 2240], Rational[3, 1120], 
       Rational[9, 224], Rational[9, 4480], Rational[3, 2240], 
       Rational[-9, 640], Rational[-9, 896], Rational[-9, 2240], 
       Rational[-9, 896], Rational[9, 448], Rational[27, 2240], Rational[
       9, 224], Rational[9, 4480], Rational[3, 2240], Rational[-9, 640], 
       Rational[9, 448], Rational[-9, 896], Rational[-9, 2240], 
       Rational[-9, 896], Rational[27, 2240], Rational[3, 1120], Rational[
       9, 4480], Rational[9, 112], Rational[9, 4480], Rational[-9, 896], 
       Rational[9, 448], Rational[-9, 320], Rational[9, 448], 
       Rational[-9, 896], Rational[-9, 2240], Rational[-9, 896], Rational[
       27, 2240], Rational[-9, 896], Rational[-9, 2240], Rational[27, 2240], 
       Rational[3, 1120], Rational[9, 4480], Rational[-9, 320], Rational[
       9, 112], Rational[9, 4480], Rational[-9, 2240], Rational[-9, 896], 
       Rational[-9, 896], Rational[-9, 2240], Rational[-9, 896], Rational[
       9, 448], Rational[27, 2240], Rational[9, 448], Rational[-9, 896], 
       Rational[27, 2240], Rational[9, 224], Rational[3, 2240], Rational[
       9, 4480], Rational[-9, 896], Rational[-9, 2240], Rational[-9, 896], 
       Rational[9, 448], Rational[-9, 640], Rational[27, 2240], Rational[
       9, 224], Rational[3, 2240], Rational[9, 4480], Rational[9, 448], 
       Rational[-9, 896], Rational[-9, 2240], Rational[-9, 896], 
       Rational[-9, 640], Rational[27, 2240], Rational[9, 4480], Rational[
       3, 2240], Rational[9, 448], Rational[-9, 896], Rational[9, 224], 
       Rational[-9, 640], Rational[-9, 896], Rational[-9, 2240], Rational[
       27, 2240], Rational[9, 4480], Rational[3, 2240], Rational[-9, 896], 
       Rational[-9, 2240], Rational[-9, 640], Rational[9, 224], Rational[
       9, 448], Rational[-9, 896], Rational[27, 2240], Rational[9, 4480], 
       Rational[3, 2240], Rational[-9, 2240], Rational[-9, 896], 
       Rational[-9, 896], Rational[9, 448], Rational[9, 224], 
       Rational[-9, 640], Rational[27, 2240], Rational[3, 2240], Rational[
       9, 4480], Rational[-9, 896], Rational[9, 448], Rational[-9, 2240], 
       Rational[-9, 896], Rational[-9, 640], Rational[9, 224], Rational[
       27, 2240], Rational[81, 560], Rational[3, 1120], Rational[3, 1120], 
       Rational[3, 1120], Rational[27, 2240], Rational[27, 2240], Rational[
       27, 2240], Rational[27, 2240], Rational[27, 2240], Rational[27, 2240], 
       Rational[3, 1120], Rational[3, 1120], Rational[3, 1120], Rational[
       27, 2240], Rational[27, 2240], Rational[27, 2240], Rational[27, 2240], 
       Rational[27, 2240], Rational[27, 2240], Rational[
       81, 560]}}]]]]], "Output",
 CellChangeTimes->{3.677218727461808*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "SmatAlg", "]"}]], "Input",
 CellChangeTimes->{{3.677217667439554*^9, 3.6772176722960463`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["17", "20"], 
      RowBox[{"-", 
       FractionBox["7", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["3", "40"], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["17", "20"], 
      RowBox[{"-", 
       FractionBox["7", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["17", "20"], 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["3", "40"], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["7", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["7", "80"]}], 
      FractionBox["17", "20"], "0", "0", 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], "0", "0", 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      FractionBox["3", "8"], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      FractionBox["27", "80"], "0", 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["27", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], "0", "0", "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "4"], 
      RowBox[{"-", 
       FractionBox["27", "20"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["3", "40"], 
      RowBox[{"-", 
       FractionBox["3", "40"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "20"]}], 
      FractionBox["27", "4"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["3", "8"], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", "0", "0", 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], 
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", "0", "0", 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", 
      RowBox[{"-", 
       FractionBox["27", "40"]}], 
      FractionBox["3", "8"], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "80"], "0", "0", 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", "0", "0"},
     {
      RowBox[{"-", 
       FractionBox["3", "80"]}], "0", 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0", 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      FractionBox["27", "80"], "0", 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      RowBox[{"-", 
       FractionBox["51", "80"]}], "0", "0", 
      FractionBox["27", "80"], 
      FractionBox["27", "80"], "0", "0", "0", "0", 
      FractionBox["27", "8"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}]},
     {
      RowBox[{"-", 
       FractionBox["27", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["3", "80"]}], 
      FractionBox["3", "8"], "0", "0", 
      FractionBox["27", "80"], 
      RowBox[{"-", 
       FractionBox["27", "16"]}], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "16"]}], 
      FractionBox["27", "8"], "0", "0"},
     {"0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", "0", "0", "0", 
      FractionBox["81", "10"], "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "40"]}], 
      RowBox[{"-", 
       FractionBox["81", "40"]}], "0", "0", 
      FractionBox["81", "10"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 13, 22, 35, 44, 52, 59, 75, 91, 98, 106, 113, 121, 129, 136, 141,
        146}, {{1}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {2}, {5}, {6}, {
       9}, {10}, {2}, {1}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {3}, {2}, {
       4}, {7}, {8}, {11}, {12}, {13}, {14}, {5}, {6}, {9}, {10}, {1}, {3}, {
       4}, {7}, {8}, {11}, {12}, {13}, {14}, {5}, {1}, {2}, {3}, {6}, {7}, {
       8}, {15}, {6}, {1}, {2}, {3}, {5}, {7}, {8}, {1}, {3}, {4}, {7}, {2}, {
       5}, {6}, {8}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {15}, {1}, {
       3}, {4}, {7}, {8}, {2}, {5}, {6}, {11}, {12}, {13}, {14}, {16}, {9}, {
       10}, {15}, {9}, {1}, {2}, {3}, {7}, {8}, {10}, {10}, {1}, {2}, {3}, {
       7}, {8}, {9}, {15}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {1}, {3}, {
       4}, {7}, {8}, {11}, {12}, {16}, {1}, {3}, {4}, {7}, {8}, {13}, {14}, {
       16}, {1}, {3}, {4}, {7}, {8}, {13}, {14}, {15}, {5}, {7}, {8}, {10}, {
       7}, {8}, {12}, {13}, {16}}}, {
      Rational[17, 20], Rational[-7, 80], Rational[3, 40], Rational[3, 40], 
       Rational[-3, 80], Rational[-3, 80], Rational[27, 80], 
       Rational[-27, 40], Rational[-7, 80], Rational[-3, 80], 
       Rational[-3, 80], Rational[-27, 40], Rational[27, 80], Rational[
       17, 20], Rational[-7, 80], Rational[-7, 80], Rational[-51, 80], 
       Rational[3, 8], Rational[-3, 40], Rational[-3, 40], Rational[3, 8], 
       Rational[-51, 80], Rational[17, 20], Rational[-7, 80], 
       Rational[-7, 80], Rational[3, 40], Rational[3, 40], Rational[-27, 40], 
       Rational[27, 80], Rational[-3, 80], Rational[-3, 80], Rational[27, 80],
        Rational[-27, 40], Rational[-3, 80], Rational[-3, 80], 
       Rational[-7, 80], Rational[-7, 80], Rational[17, 20], Rational[-3, 40],
        Rational[-3, 40], Rational[3, 8], Rational[-51, 80], 
       Rational[-51, 80], Rational[3, 8], Rational[27, 8], Rational[-3, 80], 
       Rational[-51, 80], Rational[27, 80], Rational[-27, 16], Rational[
       27, 80], Rational[27, 80], Rational[-81, 40], Rational[27, 8], 
       Rational[-3, 80], Rational[3, 8], Rational[-27, 40], Rational[-27, 16],
        Rational[-27, 16], Rational[27, 80], Rational[3, 40], Rational[3, 40],
        Rational[-3, 40], Rational[27, 4], Rational[-3, 40], Rational[27, 80],
        Rational[-27, 16], Rational[-27, 20], Rational[-27, 16], Rational[
       27, 80], Rational[27, 80], Rational[27, 80], Rational[-81, 40], 
       Rational[27, 80], Rational[27, 80], Rational[-81, 40], Rational[3, 40],
        Rational[3, 40], Rational[-3, 40], Rational[-27, 20], Rational[27, 4],
        Rational[-3, 40], Rational[27, 80], Rational[27, 80], Rational[
       27, 80], Rational[27, 80], Rational[27, 80], Rational[-27, 16], 
       Rational[-81, 40], Rational[-27, 16], Rational[27, 80], 
       Rational[-81, 40], Rational[27, 8], Rational[-27, 40], Rational[3, 8], 
       Rational[-3, 80], Rational[27, 80], Rational[-27, 16], 
       Rational[-27, 16], Rational[27, 8], Rational[27, 80], 
       Rational[-51, 80], Rational[-3, 80], Rational[27, 80], Rational[
       27, 80], Rational[-27, 16], Rational[-81, 40], Rational[-3, 80], 
       Rational[-27, 40], Rational[3, 8], Rational[-27, 16], Rational[27, 80],
        Rational[27, 8], Rational[-27, 16], Rational[-3, 80], Rational[
       27, 80], Rational[-51, 80], Rational[27, 80], Rational[27, 80], 
       Rational[-27, 16], Rational[27, 8], Rational[-81, 40], Rational[
       27, 80], Rational[-3, 80], Rational[-51, 80], Rational[27, 80], 
       Rational[27, 80], Rational[27, 8], Rational[-27, 16], 
       Rational[-81, 40], Rational[-27, 40], Rational[-3, 80], Rational[3, 8],
        Rational[27, 80], Rational[-27, 16], Rational[-27, 16], Rational[
       27, 8], Rational[81, 10], Rational[-81, 40], Rational[-81, 40], 
       Rational[-81, 40], Rational[-81, 40], Rational[-81, 40], 
       Rational[-81, 40], Rational[-81, 40], Rational[-81, 40], Rational[
       81, 10]}}]]]]], "Output",
 CellChangeTimes->{3.677218727585166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "CmatAlg", "]"}]], "Input",
 CellChangeTimes->{{3.6772176737735558`*^9, 3.6772176775842123`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox["29", "4480"]}], "0", 
      FractionBox["29", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["51", "4480"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["3", "448"]}], 
      RowBox[{"-", 
       FractionBox["3", "4480"]}], 
      FractionBox["51", "4480"], 
      FractionBox["9", "2240"], 
      FractionBox["3", "4480"], 
      FractionBox["3", "448"], 
      FractionBox["3", "320"], 
      RowBox[{"-", 
       FractionBox["3", "320"]}]},
     {
      FractionBox["29", "4480"], "0", 
      FractionBox["47", "4480"], "0", 
      FractionBox["141", "2240"], 
      RowBox[{"-", 
       FractionBox["99", "2240"]}], 
      FractionBox["93", "4480"], 
      FractionBox["27", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      FractionBox["3", "2240"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "560"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["47", "4480"]}], "0", 
      FractionBox["31", "1920"], 
      FractionBox["51", "896"], 
      RowBox[{"-", 
       FractionBox["51", "448"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      RowBox[{"-", 
       FractionBox["3", "320"]}], 
      FractionBox["51", "448"], 
      RowBox[{"-", 
       FractionBox["51", "896"]}], 
      FractionBox["3", "320"], 
      FractionBox["9", "4480"], 
      FractionBox["3", "448"], 
      RowBox[{"-", 
       FractionBox["3", "448"]}]},
     {
      RowBox[{"-", 
       FractionBox["29", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["31", "1920"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["93", "4480"]}], 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], "0", "0", 
      FractionBox["99", "2240"], 
      RowBox[{"-", 
       FractionBox["141", "2240"]}], 
      RowBox[{"-", 
       FractionBox["3", "2240"]}], 
      FractionBox["9", "2240"], "0", 
      FractionBox["9", "560"]},
     {
      FractionBox["9", "2240"], 
      RowBox[{"-", 
       FractionBox["141", "2240"]}], 
      RowBox[{"-", 
       FractionBox["51", "896"]}], "0", "0", 
      FractionBox["621", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      RowBox[{"-", 
       FractionBox["117", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "160"]}], "0", "0", "0", "0", 
      FractionBox["81", "448"], "0"},
     {
      FractionBox["51", "4480"], 
      FractionBox["99", "2240"], 
      FractionBox["51", "448"], "0", 
      RowBox[{"-", 
       FractionBox["621", "4480"]}], "0", 
      FractionBox["117", "560"], 
      RowBox[{"-", 
       FractionBox["279", "4480"]}], 
      FractionBox["9", "2240"], 
      FractionBox["99", "4480"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "2240"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["93", "4480"]}], "0", 
      FractionBox["93", "4480"], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["117", "560"]}], "0", "0", 
      FractionBox["153", "4480"], 
      FractionBox["207", "4480"], 
      FractionBox["117", "560"], 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      RowBox[{"-", 
       FractionBox["207", "4480"]}], 
      RowBox[{"-", 
       FractionBox["153", "4480"]}], 
      RowBox[{"-", 
       FractionBox["27", "112"]}], 
      FractionBox["27", "112"]},
     {"0", 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], "0", 
      FractionBox["27", "4480"], 
      FractionBox["117", "4480"], 
      FractionBox["279", "4480"], "0", "0", 
      RowBox[{"-", 
       FractionBox["9", "112"]}], 
      FractionBox["9", "224"], 
      RowBox[{"-", 
       FractionBox["279", "4480"]}], 
      RowBox[{"-", 
       FractionBox["117", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "224"]}], 
      FractionBox["9", "112"], 
      RowBox[{"-", 
       FractionBox["27", "280"]}], 
      FractionBox["27", "280"]},
     {
      FractionBox["3", "448"], 
      FractionBox["9", "2240"], 
      FractionBox["9", "4480"], "0", 
      FractionBox["9", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["153", "4480"]}], 
      FractionBox["9", "112"], "0", 
      RowBox[{"-", 
       FractionBox["27", "4480"]}], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "2240"]}], "0"},
     {
      FractionBox["3", "4480"], 
      RowBox[{"-", 
       FractionBox["3", "2240"]}], 
      FractionBox["3", "320"], "0", 
      FractionBox["9", "160"], 
      RowBox[{"-", 
       FractionBox["99", "4480"]}], 
      RowBox[{"-", 
       FractionBox["207", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "224"]}], 
      FractionBox["27", "4480"], "0", "0", "0", "0", "0", 
      FractionBox["459", "2240"], "0"},
     {
      RowBox[{"-", 
       FractionBox["51", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["51", "448"]}], 
      RowBox[{"-", 
       FractionBox["99", "2240"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["117", "560"]}], 
      FractionBox["279", "4480"], "0", "0", "0", 
      FractionBox["513", "4480"], 
      RowBox[{"-", 
       FractionBox["99", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", 
      FractionBox["81", "2240"]},
     {
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", 
      FractionBox["51", "896"], 
      FractionBox["141", "2240"], "0", "0", 
      FractionBox["9", "112"], 
      FractionBox["117", "4480"], "0", "0", 
      RowBox[{"-", 
       FractionBox["513", "4480"]}], "0", 
      FractionBox["9", "160"], 
      FractionBox["9", "4480"], "0", 
      RowBox[{"-", 
       FractionBox["81", "448"]}]},
     {
      RowBox[{"-", 
       FractionBox["3", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["3", "320"]}], 
      FractionBox["3", "2240"], "0", "0", 
      FractionBox["207", "4480"], 
      FractionBox["9", "224"], "0", "0", 
      FractionBox["99", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "160"]}], "0", 
      RowBox[{"-", 
       FractionBox["27", "896"]}], "0", 
      RowBox[{"-", 
       FractionBox["459", "2240"]}]},
     {
      RowBox[{"-", 
       FractionBox["3", "448"]}], "0", 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", "0", 
      FractionBox["153", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "112"]}], "0", "0", 
      FractionBox["9", "2240"], 
      RowBox[{"-", 
       FractionBox["9", "4480"]}], 
      FractionBox["27", "896"], "0", "0", 
      FractionBox["27", "2240"]},
     {
      RowBox[{"-", 
       FractionBox["3", "320"]}], 
      FractionBox["9", "560"], 
      RowBox[{"-", 
       FractionBox["3", "448"]}], "0", 
      RowBox[{"-", 
       FractionBox["81", "448"]}], 
      FractionBox["81", "2240"], 
      FractionBox["27", "112"], 
      FractionBox["27", "280"], 
      FractionBox["27", "2240"], 
      RowBox[{"-", 
       FractionBox["459", "2240"]}], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["3", "320"], "0", 
      FractionBox["3", "448"], 
      RowBox[{"-", 
       FractionBox["9", "560"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "112"]}], 
      RowBox[{"-", 
       FractionBox["27", "280"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "2240"]}], 
      FractionBox["81", "448"], 
      FractionBox["459", "2240"], 
      RowBox[{"-", 
       FractionBox["27", "2240"]}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 16, 26, 42, 52, 62, 72, 87, 102, 112, 122, 132, 142, 152, 162, 
       171, 180}, {{1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {
       2}, {5}, {6}, {9}, {10}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
       9}, {10}, {15}, {1}, {2}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {
       16}, {5}, {6}, {9}, {10}, {15}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {
       1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {2}, {3}, {
       5}, {6}, {7}, {4}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {15}, {
       1}, {2}, {3}, {5}, {6}, {8}, {4}, {11}, {12}, {13}, {14}, {16}, {9}, {
       10}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {
       2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {3}, {4}, {7}, {
       8}, {11}, {12}, {13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {
       12}, {13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {
       14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {
       1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {3}, {4}, {7}, {8}, {
       11}, {12}, {13}, {14}}}, {
      0, 0, Rational[29, 4480], 0, 0, Rational[51, 4480], Rational[9, 2240], 
       Rational[3, 4480], Rational[3, 448], Rational[-3, 320], 
       Rational[-29, 4480], Rational[-9, 2240], Rational[-51, 4480], 
       Rational[-3, 448], Rational[-3, 4480], Rational[3, 320], Rational[
       29, 4480], 0, Rational[47, 4480], Rational[141, 2240], 
       Rational[-99, 2240], Rational[93, 4480], Rational[27, 4480], 
       Rational[-9, 2240], Rational[3, 2240], Rational[-9, 560], 0, 
       Rational[-47, 4480], 0, Rational[31, 1920], 0, 0, Rational[51, 448], 
       Rational[-51, 896], Rational[3, 320], Rational[9, 4480], 
       Rational[-3, 448], Rational[51, 896], Rational[-51, 448], 
       Rational[-9, 4480], Rational[-3, 320], Rational[3, 448], 
       Rational[-29, 4480], Rational[-31, 1920], 0, Rational[-93, 4480], 
       Rational[-27, 4480], Rational[99, 2240], Rational[-141, 2240], 
       Rational[-3, 2240], Rational[9, 2240], Rational[9, 560], Rational[
       9, 2240], Rational[-141, 2240], Rational[-51, 896], 0, Rational[
       621, 4480], Rational[-9, 112], Rational[-117, 4480], 
       Rational[-9, 4480], Rational[-9, 160], Rational[81, 448], Rational[
       51, 4480], Rational[99, 2240], Rational[51, 448], Rational[-621, 4480],
        0, Rational[117, 560], Rational[-279, 4480], Rational[9, 2240], 
       Rational[99, 4480], Rational[-81, 2240], 0, Rational[-93, 4480], 0, 
       Rational[9, 112], Rational[-117, 560], 0, Rational[93, 4480], Rational[
       117, 560], Rational[-9, 112], Rational[-207, 4480], 
       Rational[-153, 4480], Rational[27, 112], Rational[153, 4480], Rational[
       207, 4480], Rational[-27, 112], 0, Rational[-27, 4480], 0, Rational[
       117, 4480], Rational[279, 4480], 0, Rational[27, 4480], 
       Rational[-279, 4480], Rational[-117, 4480], Rational[-9, 224], 
       Rational[9, 112], Rational[27, 280], Rational[-9, 112], Rational[
       9, 224], Rational[-27, 280], Rational[3, 448], Rational[9, 2240], 
       Rational[9, 4480], Rational[9, 4480], Rational[-9, 2240], 
       Rational[-153, 4480], Rational[9, 112], 0, Rational[-27, 4480], 
       Rational[-27, 2240], Rational[3, 4480], Rational[-3, 2240], Rational[
       3, 320], Rational[9, 160], Rational[-99, 4480], Rational[-207, 4480], 
       Rational[-9, 224], Rational[27, 4480], 0, Rational[459, 2240], 
       Rational[-51, 4480], Rational[-51, 448], Rational[-99, 2240], 
       Rational[-117, 560], Rational[279, 4480], 0, Rational[513, 4480], 
       Rational[-99, 4480], Rational[-9, 2240], Rational[81, 2240], 
       Rational[-9, 2240], Rational[51, 896], Rational[141, 2240], Rational[
       9, 112], Rational[117, 4480], Rational[-513, 4480], 0, Rational[
       9, 160], Rational[9, 4480], Rational[-81, 448], Rational[-3, 4480], 
       Rational[-3, 320], Rational[3, 2240], Rational[207, 4480], Rational[
       9, 224], Rational[99, 4480], Rational[-9, 160], 0, Rational[-27, 896], 
       Rational[-459, 2240], Rational[-3, 448], Rational[-9, 4480], 
       Rational[-9, 2240], Rational[153, 4480], Rational[-9, 112], Rational[
       9, 2240], Rational[-9, 4480], Rational[27, 896], 0, Rational[27, 2240],
        Rational[-3, 320], Rational[9, 560], Rational[-3, 448], 
       Rational[-81, 448], Rational[81, 2240], Rational[27, 112], Rational[
       27, 280], Rational[27, 2240], Rational[-459, 2240], Rational[3, 320], 
       Rational[3, 448], Rational[-9, 560], Rational[-27, 112], 
       Rational[-27, 280], Rational[-81, 2240], Rational[81, 448], Rational[
       459, 2240], Rational[-27, 2240]}}]]]]], "Output",
 CellChangeTimes->{3.6772187276546288`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{"\"\<MassMatrixAlg.csv\>\"", ",", " ", "MmatAlg"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<StiffnesMatrixAlg.csv\>\"", ",", " ", "SmatAlg"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<DampingMatrixAlg.csv\>\"", ",", " ", "CmatAlg"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6772176925134277`*^9, 3.6772177199773293`*^9}}],

Cell[BoxData["\<\"MassMatrixAlg.csv\"\>"], "Output",
 CellChangeTimes->{3.6772187278095093`*^9}],

Cell[BoxData["\<\"StiffnesMatrixAlg.csv\"\>"], "Output",
 CellChangeTimes->{3.677218727889556*^9}],

Cell[BoxData["\<\"DampingMatrixAlg.csv\"\>"], "Output",
 CellChangeTimes->{3.677218727891107*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"Triangle", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6771666902925777`*^9, 3.677166701513693*^9}, {
  3.6771667533699102`*^9, 3.677166772275289*^9}, {3.6771668638053923`*^9, 
  3.6771668660607023`*^9}, {3.677217684266021*^9, 3.677217690007654*^9}, {
  3.677217725459866*^9, 3.67721772610504*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "3"], "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["f", "8"], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}], "&&", 
       RowBox[{"y", "\[LessEqual]", 
        RowBox[{"1", "-", "x"}]}]}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677166621858469*^9, 3.677166652864933*^9}, {
  3.677166706714095*^9, 3.677166742858433*^9}, {3.6771668300689163`*^9, 
  3.677166833867641*^9}, {3.677166883254644*^9, 3.677166962486919*^9}, {
  3.6771688467283583`*^9, 3.677168857648188*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
f+DuNi/H3WuRSvSw0z3PP089GxJN9MAtt5d3Uc1rokdcsryalrK/dgDxRRzz
ntm31ldTeX8ccc30asm/3VR5JuRHvAgQrj/r3uYq4fDnNZ2mGo4fbUL1Fvit
b+eWtovt60D8getmNhlRw9ZOmLkoYmDNbBfW8sOIXvMUFeyBVd+zkdbB+phf
8E8r7x6dZbrTi+YX8Fupna2vpngKlgHnDA0ViWx12dZ4pXER63R/bTPr5+40
v+AXfWuGXcl494DmF/Ckqf1fdyt6IFx1zV2lpRXJAhxGLc9Squbpy7PpHvr3
qF9YpyY10fv9dZEt2T/woTeuDjLOPUPzBfjyqX/btamQ6yrw9w/t95f2aHOV
5jXwSxP/7B005Arxx7rZ7Yvx7+0qTtE8Rf0kf9rRSauenKW6OurudXsbfH7Q
ZmkA/ADm79OH7TeXm5kSf+ANl5V0qW17WMhvWWPwNC139n1i7VoNtCrY0HwP
vi8P+TGOy4ybd7N7a0fyA19X3PamTg8HwqGPjiujAp5fkNfJsIvO7hZtfMqz
af7DrseZBG/pZRhC9MDnz9TZHur2gnDMv8DeJ+pPjYgnHPnOwXrtHt9rEUo4
7D9oV6rd8hNKwpG/3fme6bp0riPJDT13Xbb495q252U9t21skKV8zx7pN9xX
/rN3APw+xufC/rizhi3keA3c/rfxb50XJlPcB35t9Php6Yokir+wu32mzddo
HQ2nOA78r61HPOs6JhJ/4O08zN5+aZlIcRnxZ5XRQj2f8hDiDzx71v6vielx
xB/477PXNu/fL47iNeLhxPW2DU2WBxF/4G6Rn0/bbI8m/sB/H5sye/OAaOKD
+Hz4D9OOS+pGEB/gA/tOunBnYATFfTzn+Fc87mAXQnyA92/9JDZ/UCjFfXzf
Xc9owquhgcQHeP9avRp2HRpE8R3tv1uVcFfc7wAf4AvzfrP22+pP9OjfQr+m
zYZvV1J8h/4W2Hw457bLnerJmH9Lqm5/M5iXTHkd5lPmnmzbTSmJlL/Bbz1N
72va6H485Wnwi95h190NXWMoH0Ne4+XZ8P1fjyIp70J+5GF/6LdQtzDKr/D0
OlduVMMzmPIo/N2Gv/0XHN4sUL6EdtbE3Ur6us2X6sCYBxGfncdO7plE5zrQ
3+drDyUPS5D7BbzD4f7dTJZHk90CH576bf61Mpke8+JrzcOjdHokkt5A36ep
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
NcwgPUt+wJV9ME8aHre8iMZx8u6+G02yXJiv9uhfz7JRl0xn0yYn/Oqtyt9G
P783N+w18GzWapd4gfJxtjS3p6eV7huyt7XqONJKI66Zno0cUkMlT+zGfrUS
lgRSnKqdJF6A7so+HXTp2DbsGsm/j+stiAXcuv51WakcX/CMnzgwZYl9Hsnf
/M8ztmI+eeH4gcODlhaS/H/wfinZBPumYz87ynF5XpJXlXh/ZfnpmuzcniyS
/57a/1tqxItBbexjRXk27tceMG6EO81f5eT1tvx3xKbWDhF/vxXyv3fas1HX
MJoNa1+8dfPDeJLn2tnZG8V8W7/or6nieW+021Xtn100/PldLk80mzHL+nSn
i+HU7kAuTxQbuj7rp3heFO0O47/rncQSrnYZPfpWOOnHn9t/Itv5NOe9YAt9
pjJL7pfiWe33aUfvPJbjZqzar77V8MPNuJ6T2JtFM0ZXuch+eP6nMnNxvXxu
xIrPmwZEkzyVXA9p7GpDt7bz2wSSPGZ8fF8wvX/OxBo1i6B2Lf+H/5TkSWPH
fEZ8D08JpXYH97loy+83bp847+xnpZyfNGx51Dgrky3IuWW8f5438Z+k9ocB
Gv6wNvfDmazG2Pl/KOY5E5/Nu91tlcav2IHo146tF96R8xzOP5dtzS47lTP7
NvVL6m8u08n+HODpupfafQd/GLiwmj9UVLhkiPnioX2OmbnK08QnjfuB16zX
qYfDTbVdNPRZyCYZ/zPduPFx8g8SnwJmM/3f7E+OjuRnJHtQ4V02b9uZ7k58
Zi2e9LeBopi17aI4bqCwIT4S/2JWlFq758bXLhr6LGFPtZOtZP/mzrQDXzdS
6L5jTzMrNh7SsyK8aI9+gGBczn7r1W3Ezf3b1XgZO2D59Np21Xx8WmEZNbkF
9F/K/npwuqu1MowtEGw7zD71iHBv8Tp2VT/m+LX6Ob9TS7V+SlhiM5/dJlUJ
TKttfOTsVzUon8m0teLrlbVh+lvLC3G/XDHL4ngq+3U/9dP9Sc3I/2RzPJ3Z
1LqgK97nI+GpzDlr/0Fn4yK29ujL/j1nIy6ksgo+jsVs6M1r88aX/FLfw5bI
Rg4/OSdLtT7SOurX+qRhXgDwck5fwnIWjK3nUvebPsZFwkuZ9uakhuI9S9C/
hJexfyqG1dpXr1QfemvP/a2Cme/P1DOg88ZlbKzanx8e8n21vN9URvn840aN
1sQ1Did9OjttqrLW9WXxzZe7zmwfT3hntf+s/8+istKJ0YQjHx7n/LLmsgdB
pOdLfJ6GM8Vzz33ivVvA+x7oH9pxRwzbkV1z4I0jzwj/kR1uLvo3uxceQkPK
M4uZldr/tD3RpJbZqHDCP7POf4t12sbfzoevLLtH830b/z0u1fowsGL1+tZl
av3kq8c3m+kvNV0l3uMk4dmUn4wrd1BYNcS9LnlqPeexLr7/mZ+kqv1SAfva
6vFC8/Y+NO7S73cUMGeDrRf0h3kTjrwiPX7147qWWE8lquddEYtqVj4qtq87
4RKfIqbk/kfGkVd41EvTa7hSzhMk+jfsHNfzPcK7/Mx+KNZRHEPMw53GnKH5
K9G/Zd6cvwPhWRsOhIv1dq0+pZ4DVqaq9ebO/Ebund5Ctc4rGfCqwbHISDVe
wXY2MG7la+jE3nfsFPnaGnpTrdvF68NruLPr30K6d7uA9XsFu9L6xK+dqvyh
avGH6acbe5Ad4h5x7eYWWRMPuhEuzetA1udB2UU/ul+xjNlsbl3M43yzmND4
gI/6sB/ca56e5ia4k72VEm7w3ui35hk3yX7wu22WC0yHL3wWQnYIXGuHsd/4
oZh3hfT7gEcLcgcN2y5QXMC9619WzEr6tfEp2Q9+z2Vvq6EzxPv3YG+4X124
f7hRQ7u7hEt+Q5V3X763229hbbJP6b7612zf7vcGMw7aq+nT6R77Kf/2P39j
zHXCJT6FLHznt1nlhbiHNl39eyIFTMuheM6IH7h3MpV+f+T4Bf/2u/61IHvD
749obdYxGWpeSPaA33Wyt308+/wKC9LnNJ6n3WB1FFonYilulrCT3M84sb2x
lfPFe4EwLsm/ItYFqOi3LWjTtISlEL5anWfOyl85s0t74IVsnjpP+5o5Zfrk
dc+p3Uk8z/FlfWMvTFo5K57aHcz93jM2/Z8jx8V7hzBefTgewlKszl36YOpH
fNpx/xbG/mhi7xPTN5H4jOfthrP2fbWbuf+HH5vB84QY1t1hhmlT8lfZ6vwt
lpVtSmndquQixfc+6vwttFr+ls101PmSc1WbDtMU3iSPxCeRpdU9frb9n0GE
u3C7SmIm48L7zJqAeYe8PYXpn7H//se6OBp3KZ9JYds69tDuWnKR7ERq9wWz
Vv65+oujB8kj5VfJ7PiNKbuTlviS/u/ydl+wZ5ns1TnKowJZXnfPGSK/57yu
hfVvqjqfTGdOc20WiPeHA5fazWBlfBwfkTx49jEZu1M8L43xkvqbwXTMfC/H
3Pemdm9y/WSzBnwd4aHhn3PYX4Fesc9uPqV2E3l+mMuMqsa8lscrT80/hxlV
m6eJaj6vmafi4V/ivWrApfn+mlXwvFdJ/Ntz/5zH6jb8zWbFzeeES+vr1+yA
wZGMiWS3kWo+BWwXnxeyn5fyugJ2+tkO35tkJ4lqPgVsNc97fYiPhBexqdzO
PUg/Ev6GreH08vpUyt9KmOGLAJ34YDmOSL8zVcJacXu+QXykvK6UPdAzcmm0
UkF4KqcvZcu53oBXsDvx4g/iHGdD0la5zfCKIHwtt88brGXh9rt9R8Key9gV
bm9KJng+rGn4H/nedC6/ap7WTHmWmP6c7HMlX+/nsZCvBd/iGysJl+TPY6Gc
jzvZlTQu+az7uZzAZuddCU/m9PlMj/fXlcZL4lPI4rmdu5D+JbyYbeX9dSIc
vz8S0P+xb38za9Ln4ckZ+wvFfb+DLs1/Rh0kvTXq1aqfeO+mVldlrUYOr8mv
6iZIerte987ExHTUgQPZNHVed2xlSH3x3AL4a1dJ/tNAe/9Q0+gywlGPLSht
YDLRHOddEtkGtR9OyLG4J98jpML5+t2JGVbZdpXxVKat9uezpu7/o8NvMj7p
rF/MDpV/HqaMnSXXAQrZGXUdwCPzime9lZ6E4/d55rgX+V17jP3pYsKfHjPs
F7I+mPwq5H9a9emdllYM2QPy1VlGCW/Sb8vvswRXfeDrhcy6LvvE90egB091
HrvPfNcSU235vfdu6rhQ0Ll2G/F+JOCOk3M2PFXhoVY77qwlPJUNVseX3DVt
8jrOLiTcqmRebLYqH96knJjTYCXq1flsrbpu8NBqgV/KKXfCkeeM3/D85fEn
sIdCwscFXW238kkw9WsJ5xPKpvNxyaF+JTpVDMlWxan5xjo/GnTOI/kt1fl2
maWO8J/3Oxmo49d4HhdySP5m6nj3TkffpiIwg/BAXq+IZCZV0/qIv+cl4dnq
+kMI+9LV786U1ZEU19zV+X+PavWQbDUezVpU2Vu/VN4nHHXmJ3/u/PjO2Z70
gzztl09ZcoR1MOkH+HzrA9PF8/bQj6SHOPV4vSD9SP2NZ253fcaaaqeRHvBM
bzXka1VVEn2W4lcik/Zl5Lq6pJ849mRwh6XTvwQQvkRdx8jb1uH2dm0XwlFn
7vp2sLnZ0JOkH+ST9TcaLNLSQr+yiX7LgM01zpjJ9RzQHw1t0MTpmFw/Af5X
txUh4u96S7g75aWnPI3izu0JJj1I/UplnWJ7/fxVFU39leJyKmsbFfRQvNcL
uBRPVfOex1M5juMZ7bPnWaO+cpyV9PCCBfD57kQ46thaa7UmjN+2k/oLOVMv
VdTWdYefTyf6h0caBrU8A38u/z64tm7KCPE+IugH+KNWW+faGUWSHpCHxy0+
9nbz5KekB6lf6azx4sovFaZ+1F8pvmcwszlNoyevsyNc6lcGG8TtWcal9VoO
8wwzdr9B8TRRnc/ksECe192lfkGei5Z2g8X7eKEf1NtXM3+dMT7epB/Q1yjL
7d/8fSjpgX4HLbPtYfGeJfQX64s7bfcHlN91pf5K8uewQm6fV2hcQO+hldzj
2AY/kh/rXxeTAz/Ee8kgP+hrnw1YIL6PBj6gn7ciJK9otxyXQR92sEbeQT3Q
B6rHK0+tz/MkpzTueUzB809H4o/1kWPsodndj8j3eqHOH75uSyfxPjTICfoz
BvbTxXOq4AP6P14233a4xI/kkdrNZ758vFCniqT11H0z09HXyuR8DLj79yle
ct6VSvjj2Ukjzlg9IXqs9zuHPH8k3sOGdqVxLFLnjS6EY/21IzXoR/c2cp4G
/K1tSVWRjpzXYV0WOWRpR5lPJAsyaNJVofuGnX+p3/79XeQzpazx6LntrHWD
2OfhPn5DLWE/Jcyi4bkZPcXftWCXJh/anKDGi9muxzW8xPVLZZO5m7T3YX+z
kBmq1xGOvL4h11c97j1rJK47iiZnfx1HeD4z4PQvWf8m4e3q/B5MeD9uD+ns
ptXRiTXX+5OdG6jnhbJa3TWPOant6rjGOlqif8WO8rqWP+FSfpir6l/TTScG
BWrY82tmzeskTwmX9KzK8917l8p4Krvb32m/WEcdeHTFAb3tboTj9xm/3On0
+6Qe8nphnQ2z5vtBHt2rGv5HfojfH3RaMmPc66L7NF4Yx+VmW036Pb1DOH4f
sFlXnV8N96E+467Ot8vYeq6H44R3Pu/cV7x/Y1CtD77GuQcIRx71qKFOrYQp
2B8PpLwrqv9B3/4hyIsiCe8ffel8/Vjcl5hIeO3+C1f9Z34IfNiS+o3N/wa9
O+UzeZPnFG+uk0btAi98fV3Ykvua2gX+ePzjV3/0k/Mx4Nf1WPZ/5mPAGxm0
+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
nBbvLY4jOmVzJV+qx//9MYvn6X3VXvI+EeKUF+5gkrDP/y/H+h+47T9w+3/g
jv/ApR74AXpxfbnwVxHPSvknFwo/4f+XkyKep7IbpzBel/ofz0teh0H8HijD
0/7j+X/zhLOff+sssx+pB075J3eniPZCnNAAF8mD+QAOgR+h9099hP+M+Otp
hAkbv0vq3p+kepr7hH0Qj/9+xk856gSJ/oN8Ep2InFo5yReD+CKiW5df3otE
/PPIWdl9h+B4tAm8CNNl4LjkF09iuj/iuxA/yfUu8bsQT3ydu2aruGPiuxCv
MpvcwD6h9f8keEb5HB5p9kyCT1Qmy6n18ySwlSdEA/LeHOJLqI4e3qewCtyL
6VeK70XcI4XoNC3X2iUJtpYlBEOntXZJgqWcnwrbhXwXuUc2fO7oQ5dn7RDf
hXwGbTanT5vQQPYTxPtT3hg5HyJentCmLpb5CYgPJPyrIm5vFfjOhaRfdRH1
R/zlnm96VvwcJurPdG+vwWBCz9B4i6gn8iUwHhKHqCfiH4msRD55foH4a0Ib
sFKeIyCenfKQrBH9gernEh2h1xP3XRi3VrwXeauI8xXyRN7fQbwt6eb7w8V7
Ef+d6wtjOchvUe17wnsWJspB/O1GMs9gP7QI3ETnk/OiHOQF6ZSHCLGg3cwC
j6O8CvK+J/KO/FqRMChfEjjeg79I5SCSxHvJvWlyn8v7UMHVS/ecFM8jX4Qf
5d+4qLyX3OdKJvT/fx5Vnn8b8gTCP2199CLHLoHjbzPhJct0n8vO+Q9GU/4r
6T9Q3tVb+6AFlTe0iP6Tj5czkA5YvG/igle8nEFcN4HhKZDEy2lL+TSWifk5
mN/T38zv6WP9GG/GOVhKx+kDUU/8vSImI1He23IyflX380+47hjWJyd/fiol
Dt4l6jOb8wa8pzQ88p4OG79xUJvQbBtynmnP+S3+IaxGJ2T+GP62kc/tdlvU
ZxMv59B9otcs73l15uWgPh2+l/EYXIGfKQG9/t4rQOUjKsv3VuE8HmyevyXe
O4mXE0767U9yXvqVlzOb6yao33sNCvj0DduxT84/yF/xK1kvDHn/uj3nCdlH
+HwWynNJ5BmgvPr1L4j6bODlLya85WaZJzyZl9+O6/9ifdj0cBMOtf6YdXiv
e6I+yP/RnfI4yTwuVs8bsIDwqzSW7+1A57GbYATeXjjvO39tHrsLZjquJY8h
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
PhiXvkVU53NIv+IGj0vTbf0ROb5QN2AaOb/OK8+dmf1PQEEyjCpJPsnxPB41
leuQIh7yf9tR6hrTbd8CfXzpcSGp+xlIdCFD5fO6XifaE8/pfiTnpFY5TvG8
YBZZxy9YRPn4vEGO5e/IfE7E1XiUPHfYps0D6E+upmHaWPE84he5TiU+j+cU
w0k4Z0aswEN4vIU24wT9HOE+fEX06OfGCxzj2EPI+fXkiwJHHauiy90bkkGX
tf58H3KQeJ3nefE8+qU0LtFYj2ulwFTyBc0vafV5CJ3Iuuwv8xmQL5/KgwyS
/Qp1qbJmcy/jRzHv1wn+fN7rTfU1vMX6uJvHbZZSv2WqeO8kPo+NI9tTT8xP
wO89B3SaKXVLlIP+Ujpx5/PIcwrcF5/kum/YH1BnoBn1w8+J5xFn2w/Zn7Hf
kt3XhOEy7ofnRFNIWCJS2g3zPR6QcOMoeZ6L9nxJ1vf18h4Z6nvQ87450p5j
Kf4YmpHt5hfJl87aKx1MZL/fW/Ixst9m7q9uF/4t6nJ4cv0vtFt77lecofIm
+0V7efzfHwekUsPsaBpJdf22NEV8EffT7mlxrfo8jjecta/A83J/tQFJm/JH
/hPXf7xX6nZ50nySbuJ59Cc3cN0uxJM4PljBTaKcfDTP4bLoV///vWbxPA2r
/IT+oZWvayamuyfuEVj5uDgBFajODsbV3Os+t8Mxuo9eKfAo3v/n0/VantcE
8/heOeWcxcH9xmA81xB4AK/nB8X+dqaL6a7PHeIPBx4XeEsef9tNAqO7Twj7
4D6IrL6Tnsn85Fs83kXlfzs/FPh4Hlek28rhUtcEywkm5x0r9LhcDNDjgoky
n83Oy3eQ9asN+m0p3L+KgktEZjxSnhNhOUPIujYB/Wp+ntj+GrTX/IcO3E9O
pgJdmA+D+7Kb4Kucg9jE+rVRwaUOVKS2X/bl/tJ8Jd9P6kBVJHo6H04LHOeZ
BUSm/qp8/hr3c3pxvSfE73C8qYI7+H4/GM5p/SGZ70f2KfsRqeu0meZBdRXl
F+f9xET9yUXi+R68n3SiQtfDRHvhvpX2h0u3RP/HdtlN01FlPBnxriSs0t8Q
/RDxGSSttQ3yzKdBUV4fM1lPH2N8I03Un+m8bxf4PL5eOJV8CQsfF4vgI9Uh
2ivei/tZlk91XPTnyvy9i2j+w12Bt+d2cA/SF3mfY3w1FR7z+kQp8ZlUPk4j
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
RoFafiJc5flp6nc5WZ5/H9mu7Ld7HK+Yf35Hjcf/8n/KX+g4OGBimua/maA8
z/sS/x/L23wr6w9/O/7tTzpa0f071kN8d77DRpttDzT7OGEiz8PE70f7e6yw
d5xV4oXmV6dD5ItC9P6a+r1PiX8SmM3/1b/90p3T6D5XtbMdzvJ75SpO/KUS
9L6YqDd+R6GH67bsTv+Xn/lji+P0npdqBxNsp3kg6F/JcbaIx3OEHXl5NL9X
+HVyHZxFrk0IP1D6FT0VvVS5L1vN8sY13MXyqDPpUGO9JpLm/Zf/6WB5CMLf
zuS3P9976Py9y1q7mFhevb9c7xGfSOufqOFmKE4CarXkORM+346fdwi7c3wE
j8uxv+W67KQJlGhP6YePI8dEwo+SfjhNDxF+lPSrP9cmC+EWzQ5WKEuOqYX/
Jv3AbPycmv0t93Erqc6pjIsh7qnpViPOjqf1/m8HK8ljFH6s9Ftq0/EYruFO
CKcv0PuVk71X+KXS/x+07xevEv/y21Mgg+cTquW4wEWucbzR10ELP6/COJeM
eyzi501q+WaYRc6bhD8m/Yq/eNxJtQPX3RX7KRk3+MTzc9T6mHn+vOTLUP+f
5LNAnIw66S9Jf76O4hfJdb8rz/NUy3fAB6U+0g9cz/MqVTuksjjVv/wrfj4u
/Bm5Dx1EzseF3yL3j334+b5aTxMMVHSuZZzkB37fSi2f6EANKC39Jbn/6km+
9//4RXj+q9rNBnM0fWQsr4u7t0WMWq6NLxPvP8eEXRDHc8n/AaouCE0=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxFnAe01sTTxpNcTeKbmIsFsaCCDRGwd/0r9gr2Lipiwy4KiAUsKKKA2Lti
7713sXdQsFfsihV7/54fz3zHc27ubDabzWazO+WZmbfrnodsfXCWJMlheZK0
iR5aJkl7miQ7FEnyeCtJtlDdMU2SXKTzr1VeQ3RptdlXbS5R+XodV6r+X91/
nco/q7yeaH912lHHNmq3bZ0k+6v+RfW3r+pGq247HY0eOLuOT3Ttdl1bRfR/
VZK8rfv76voo0QV0/RaV++i4U23WUJtTVN9ZY9hKdaep/IDq7tdxrI4FdD5R
dD7Rq9TXASpvp+c/oPOBan+Z6GF6nz1U/5z6u0LnP6jcW/QhrqnNVaIdNM7N
VP5A1+bU+TGin+kdL1Kfu6t8gfrspbF10XGn2s2rNo+qfh7RR0Qf1jFCxx96
xle673M980jdc7ba3q0+5lX/O6j8qdpspvN9RF9Q2yXUX0affBTRO0Rv1zFB
bfZmDkWf0zPm0b278Y6ah51VPlPlhdRuT5Wnq92zeuYyoieKnsDcqTxOx6q6
v4fa/q3xnKDycqq7Rc9tV90ZKv+s9iNUf5TOZ29Pks3VZ67jf+rjuMp93qT2
azE+Hcuqvr/avqTThUX30DGv6nYXvVt9iST7ix6owisqLyq6qu77W22W1nGM
+hymui56Vge9yxqqO1Lnk3WsoPJBouer/lqVJ6l8qO49TeU9dHRT/W6i5/Ht
1PeDOobr6Kl5W0jHbbp2jvrfQXXPiz6gcW+o8iF696N1765c173P6phb5V1F
Z9V9E1SeU8dQnb+m9kswdh0rqu5g0ds0hlt1fKVrN6huJR2LqPy43nNR0aNE
79f1+3TMoWvX6LnLqv5D0bt0TX/Jfvr3svpaUtcHiu6n8S2u+qvU5jrd96Pq
h+gYrvKXUV5eYx4qeoPaX672+6r992r/PvOr8vWiK6jNYLW5VuVjU7ffT9em
6Hxb0Uuo1/ufrT5eEL1U59vzjXTfGVqfe6n92er7XB07sebV/xEaw6ep9/z3
qtsn9bUndW1LeIb6WVxtjki9r67KTdfRMxZR/SHRfozONxJdTnQzPW+a6v9W
uajNJzYS7aP6j1T+R/Ub63x+3d9BdEsdY1R/q8Y1XG1eUf2xon+LXhHr/kCd
zxAtRC9Ru/561tfsKV0/NPX5UzrfSvTUxnxgLT3nRdGF9d0PZ0/p2jS1H6/y
IB1Hq/xFar7wktp2Yx7geapfVMd+rL/a+3Rn0R6if6puIR2/6VhAx8vqczFd
O1Hl6zWu+fSsm1ReR8fWan+j6No6HlH5YR1dVX5Dz1iX/SFa6bhdfcwmeq/m
dl7WsGhX9ZmyD3mu+l1CxYHwCR0LqXy53nUXXR+lfjbh3SrfO0H13RmHyruL
bqc2jY6N1KYS3UD0Hda22vUQXUlthqj+s9Q8dJyO/XXsomtr69lddW1e0WtE
X1X9ATp66B2X0vGe6gbqe/ygullFB+n8E74F/F/3bAsPV//L6lhe/V2nZ/6k
4xO930f6Lj3V5iTWvK7fqPtXUJ83iL5aeN8dyh5Sm0L9ZqKD1G6Q6mrxk1N1
/pnqh4juKTpn5uc9xJpJveefLrxHdxQdkHlN0uYvHZ11vKoxzZ+adzF3fyfm
pZ2D38B32FfL6/7/iR4PL9MYdoUfim6tez9UeWMdO6r/uXRsrLp+Oj5LvBYn
6103Ez1fdGDm9b89sqey/Flb9BnVb66693W+rJ6xJvJF9BnN1TYqb682XXUM
UPlb1S2q8kCVZ6i8tcr3qnybyiM1d7Oon6107xaqf0L1izNOPftF9oWOX3R9
wVi33Hcfe1nHNpXl7D3q5724Rv0/Ou7W0V3HImrTSX1/qm/3iNptyvyobpXY
+/AA+kBm884rVr53QdFG1+5SeXbRpXQ+WeW31cenKn+PfNM3nax5+Bj5omNz
fdfJzK+uv6vjrVirSxWWa0NEn9Z7raryaNH31XZDHW/rfEPNw3sq/642y1Tx
TUU3Vf+1jjXZuzpv6fqHepcxuj4W3s4+1L3TdT0T3TbmjflLK8vYpSuPn3uS
yvdRXlDH6rrna93bJrqDnvNB6vVwZOU9t5rokiGLkck9UssgZEM/tf9Q55vq
6KVrZ6tuDtF27YnndG1H1Z9UWZ/aSHRo5Xu/Fs10vZeuv67zTVR+N/U7nq7z
qTqW0rGm6mfVsQy8tPKa/1z02MrrDt1saV3/V9cXTj1vU+N919H7vK26n9kH
Kr+l8o8qX6Lv15FniA6HB6Rec5/pnkVU3kv0utI8Y0JhWYGMQV6gnyFHprfM
c9CvJiTmu/Bj9LaDde/1Oj9I9AQdd7Fv1M/NOn7V9fVFv9TxnMoLiZ6r68fp
eErnt+j8d9ENkO8ax6fofVpjN4keqTY3ivZTfQe1uVhjmMRaRQ6I3hwyYmJi
+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
lDVUmtcfUto+xMfbjz1emz7bshzAb4gseCezX+m7xPoXehj6VZvWz92Z9UB0
QsrIRbDNh1PrdMhdZDG6FHj2xmFHn6a91At7o9024iZRf3Xoz+Co6HLY5BOD
3hI8efvaMn9f0VabMZwuOh9cujw097fFj4VtMqi0P+v73Drgg5n1QNYB64H6
I1R+LDOGOSDk3Tmquzp1PToiujw+8O1U3qE2faxlfYP3RZeektkvi092t9r9
9Kvtz7kgs0+nX9QjV3tltt3gCXPBO9RHe7vlxoMhUyaKPp5aHkI5B7/4Gl7G
dxd9LOrZp+xfzidpbI8i63QcjkzMfZ320wtjyDwPfyN4NTxiweBRqCDPVvaz
f6B+bszs05wQshrcE3n9T+61QPzFPan7RIfppHtvFX21Mq6K/AevflrXn0lt
V6AnPJL6GvbKvan1SeT/PdEPtssDIVPvjzK2ylchk/dN/rsGxpQWvj62NJbO
+0+urMPC08CCL4wxML5vMs8z63Nq5XmaB90k9ViH6PzDmDfm75mo517WDHjK
3viZM3/jaap/WeebsA9yYyzYaW9Xtnuxf9mQ2HArZbZbwIqwgbF/sYMpI3uQ
Ratk5rfY6Ktlvh/ZhoxbrLCvEH8iz8WWJ54BPo6Ni61Lu85RxuZdrTRus0hh
PIH7RmIHZ7bfJwU/ZGxg79ht2G9glGCM+A3BWOGT62WOi2gT3TCz3DqxMWb2
deN9zX5fId5xo8yYGFgTNi0Y57DKdfhMaYPv543E87BGzAnjQldgbJTBGuDb
u5d+NjY49bwD+AN6xArRHlyVsePneiP6gSfMyDx++Ab+qLYYP5gVFDnM2OsY
/1ql40+6oaeVxmHAmeHt7Zn9HM9m5t3w7W1CN0OW/Za5zWqJfW3gtPjY5tK9
ZWY5AiZGHf63/qXxsbmDx9Mn/tfVU2Mg4LDgY8xTL41z5cq4Lb7H5WqPeQ2V
9yyNuc1TGn97V22Wqo0pZvG+xC+xfhYoPQ/Ug5v0zLzmWEt8t1nju4DvsaYW
CVwOfWNxlVdB1qrN4oXXbBrrtl/MA8/eIDOmh4xcPfpknYM7sW5Zz2As9INe
sVqMgWeAtebR5wu59dDxueX/upl1APSemeNRP8MyxwN8o/OtSpeRN2sX1lOI
t7o2sw8PXQ0cmjLX3socL4Lvbzvds1jmuKx1C+ssxJdhV+Fv4/ygzHY0z0K3
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
NxIq57IsUTmHkd9x4vecwJHwtzyvdfp/Tmi8WQ==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtm3fgVuMbxs8535zzep/j/UqUrEJGiMrMXtk7e2VURrukkpRSRkLJpkIk
svdoGdkrFCKzEhHyM8r4XZ+u54/n+33uZ53znvM8933d132fjc/qeUyPLEmS
5XVJ0kD/R1eSZKkankmTJC2S5A7JG6vve7XdL3mXMknOUv1Y9ddUn5InSTfN
21RjJmjszmo7U/0d1F+ovq3m3KD+cSqtVN+sPkl6aNz9GnOc+tsXnjtE4x9S
/Wq1/aGxicY01ti6kCRjJG6pvh9rSfJV4XvjnsZrzDUa31D159W+usYPlPyj
1p6iOQ01t4XaztW49dRWr75Rut/fVd9Ha7yq+mFcU2MvUvlacp3kb9Q/Tv0z
VD9c5Vr1DVL5Rv2Xaq3P1b+VrnmX5C/Uvzxx2zD1jVPbCtUP1/y3VT9fbcer
/1+1Xa/6iRrfQHMnqn+26ufpnt5VX0fJ66h+uMZ0lnyI5ryr+WdL3kX1/6nt
OtX305grVN9E4xfp93XkGUjeTfKaqh+tNWdp/Jdqu0zy09Uk+Uv1MapvrWfR
U/91+VX3ME71K1S/UkVdydG63jGaP0n1YSpLJA/XmC80v4HWP6rwb+C3PC65
q+qHqnSUfLDGv6Pxr+gdDdL/FpLv1rUbqP88lUkaM1vy9yod6dOYbXTR3bTm
x+rrrPVuK3yP3Gtjta2u3zpb6z2i9uHqP7/mOferf/s6r3Wg6kdp7J7qf0zj
jpZ8geRzJG+r+kS1naDrtdX4+yR30xo3S75Z1/9c9Vkq7VhPczrpeb4o+RzN
2ULzP9P6L0k+T/KWkj+X/KrkXpJ3lPyF5Kt0j6XW3kFyb81/QGvtILmr5Cmq
z9HYKexXXbOn6oeo7SRda2/Jb+oeDpbcQfJekt+QfLfW6K/xbdX+jq51mdbP
6rzHTlF9e5WTNf4zybtr7JWSq+pvLvlFyRM17y6VLdV2o/q2YU9lPkNZ8LNl
P5ygazTnXtV/Cu9P8u/qP15tgyXfzZ7V/bRW/7GS50veVf0jJNdp7dc5D5K3
lnyY+vfQ/J8kXy55NfWvJfkM1afpN5yq37225A/0vKZLPl1yY8kfSl5Dc27X
WkNUgurtNKeL1vta8gHBz+AE3dOQzM9mPb3/W3Rfh6v/CvUdWFrXrKcx/0k+
Uv9RaB3UP0fj3lXbdF1vLOdD8z+oWQfsqv4BqjfVeudoznjNeUH3s67kjzX+
C/XvrfHNJX8keS/Nv1jy7rpeb409U/IKyXO0Rnet10TjJ2n+Rhq/k9abq/6F
6n9P/V3zVeosmaD+nTT/DM3/SvL+6m8j+TjJB2p8A9U/0vi/NP5G9f+p8fdq
4oZ6nm1UJqv+lvrv1v2cof7eqr+pcrvkEyUPrnkMY0/SeveoPlNt3bReY/WP
j+u1Vv+Rkm9T+7yadVZ7dKDqu+keztX9HK/5f+n+Pql5HOMvUf1a9TfS/HMl
76P6Bvq9HbTmyZJHcS+qr6P+3pKnat5Yyf9ovbO0XkvVx/D7Euv65aofo7YL
1X+e+p9T265a8xxsg+Q/dP0j1N9V8umSt1D9WJVBkntLfqGwDkAXcL5v0dxv
qta343XtrN76tZnGb615LSVvyJmQvJ7GrNT6N2iNxegutQ3SmAEVn403JA/k
3tBxkl+T3F/1iyoei86+mLOs+c+rfif2hH3NmcLe8ZtV/1n3MU316Sp9JZ+t
62+usc+rfUtsoea8kllHvK96Z5WZku+R/FbhOcz9QfIyzTmz9Hp91L6F5vfP
rVtYo1/FZ46z97jaN1f/CVoD+/6M/vRiL1Wsa26V3EX1aXpeEzPbSGzl7Zp3
p+RvU5+fc/SOpmS22djuSVrvAcnXxuffHXuV2J4zZtOK3xXniXN1nda4QfUv
U+u7PfXMb0TXMrbe9g15b/Vfqf6rdL2jEz9b3le1tC34Vm0jOC/cR+b9zzm4
SXNuQ1+ktpc3qtzC+Uptj5pq/J7oe2yM6qXWa6L6Dpo7V9daW/JGPF/sv9bv
rDmNEr+DCzR+bWyD5LGcedXree6JbS6293KNvxZ9rOu9ovp+Wvd/ifUVeut0
ldHYYvU/qr7TJI+SnKs0VL2i0ie1zkX3nqwyghemUqv4bA1Q/VeNydFxnP3U
Og5dt7fkX3henBnJl+k3zZPcXvVmen4r1L9A4z9V21DVU7V/L7k770z3e7Pa
embGR5up7ybJ3VRfP/N521zlmMRnkLP4b+GzCUYBqwyQfIDqdZnxx9+FbQk2
DluH/aiqvg44UvezsrCuw+Zh+4bqHlqBPSQfxP5FR6g+Mtpz7N0akpuofRPN
307y1NQ6Gd38T2H9DwYBi2CPPpf8Z+Hf/1dhbHCk+g/gPOe2lftJ3k/ytZKv
V/2L1Pa3e+G++yS/x7tUaaP6PmBGnjfnR/WlavtV4/+X27buq7Z91VdUrJsm
S+6m+moV6zbwDzgIPHiP6men1lGdwBKSJ3E+VO+ktrUSt+2GvtCebJXZpmBb
6irGfjuobVfqmvNuYvwCjtlJ4yuqN1K9icYH/W+u8a3VtovqO/KMVP8LTKK5
/2n8v6n3dFfVd1D/Vpnt1zL2i55ng8xn4EL1N5XcQnJrdEm99x9yT42/CztZ
er+yb7ENk9Eh4HfW4OxqzAeSt5W8s+S1NH5D1bdSfX2Nb1dYfgy8BfYufPbR
AeCVW9D5kjfIbE/Yn+xVbPJRqq+h9ZpG3YNt55xz3h/RevML67+1M79z3v36
3ENmn+Yw6hU/v7c1fkju88/+3VXyyKhPGrKXJF8jeVRhW84aG6hv/8K/dZD6
H1S9oe7nxNSYBeyymuSHUmMMsAb2gv2NDkGXXKXSDjwued2K9ckW6CLNuY96
Yd0B5mofnye6Yk+VvST3zW3b/tH4NcCBut6BmXVC2+D9sjL1HmAv7Kmyu+rb
pdZHZ6lfU5I/JFcr3tPs7TZRf7UovPYuats96kPOfiu1XaJrb1r6XlpL/kHX
W6DxyxLvefwF7p974Zpce3+V9pltJvpzeeF72U1te1S879n/7yTej5uV3j+/
qb6Ont9vwfrslor9xTvU3k/jN86M/5sX/i3safZ2pvIm/pTaVqe/9G/ZVvIS
rfUdmCf1tdfWes3Uv5P6m2nOrGAbga34iHOq/u+0/gWSP9CcpexN9X+aWldw
fxtrfrvM99wqePzL6n8Jfzf3meRscoY5j5to/BzVfy18fXwSzntZsa+yufr3
1/hteF7q20hyW/Q17zz4THG2mqW2H5+orSG6VNdqWG+dge64JrH+ulJrvq/+
W3OfP+zhnNQYqlHpe+ReZ6h8ib9SWv9vVLHTeL7k97XehxFvHSH5jsyY6qpg
TH2Q6pvE83id2pbiS6Bb6o2nsPenpsZfj6v9itSYAewAtu0i+WeN2UP1KzV/
EfpR9X9175XS57lLvB84ha7447nxSl76vGL78Q8479zP0anPawf13w3+Qd9p
7bvVtl2dMTL4+Uj1T8hsAxtzLV33Vn6bxj9VGDeBn7DJ2M9v1TZd9ZUac1Bh
DAwWfpLnJ/lrlaGqT1P5RvWztOYMbKfGnKbrNyjcd6PKLPY4HIz6rpb8DLo+
eH2uU6/f11Hzn838jnnXr6ncj6/FOVb/5YWx/cNgANVfV/8pql+vei36Uuin
17XG+5HfOF3jn0jNZzyg9/eg6nM1fo16+3fPZbZRI1W/uLAvxZh5hW0etg9/
ALxysNoexDdV/2LONjZL/Z+ojJc8UvLCzBgALHCV5O8k7y/5erAoOkPvYlvJ
l0ruWZovGIKd0v0Mrti3mKO2S1S/Tu94+2i7/1L9Jo1vqfmnaf5JqndXmZt5
D7IXO0t+WfLW6Cj91nH4C3V+BteXxv+vqn+B5MvYm5IXZ9bR6Gp8AnyD/SS/
BZ4qzQ110z30Ku1D4Evgr/J88S941tg0bBvvG67qhbgf+mrOV5kx4a+6vyVV
3wtcU6t64w2w5JNsd/CCxr+o8RtJ7qzxv6m/ZWK+BN4EjAfWY889XJgDwVfC
Z4Kf6K35CzJzePeAHYLP3xMaW+h6D0h+Wn0NsTvInEfJAzVmKntZa3yaWcej
6/eJvin2anJhDgou6qzE/NG5eicD4tzV8De0fnf2Ltyb5Lv4DRr7meQG9X7f
7JWT1Naj9PtG34ABwALwk/Alz6bmA//LzV3g7+P3s2/Zm+xR+D7wENhnpNY4
Bf1Y+GxwRuDrLtX198OWqf3vmvHbL6nP4ITCPgq+yieSZ+fGAGABMPbr+Fwa
s7n62knuXxgzgB3mq7ysejO16RLJ+pLPVH0sHGTqPcb+Aa+CX8HAYGFwLniX
PXd5xef3UclHsX9UfyvY//pUc3/V/T6s/dI+Ndb/R3InlZ0lXyB5heqLNf59
je+GrapZf7yJ7Vfb6apvqvamqm+Tegz2GHuIz4Lvgo3H1n+sMhN+Rdebqfoi
jVuz3ngZ+4fPg+/Tr/T5HlHxeTxbpa3639W4P2vmkOCSlkheInmp5I8SP7sf
JJ+h0gJsLvl31bvUzIXBu/J7LwBzqP9vtR2CPlVbS8ldsfuqnw/OUt9WsQ38
DHbHZp5dGLOCXdFJexXGWOxdfMx9Vb+uNJ9xW8V8xSO63h3YS5Wvcutzzu7F
8Xx1UJms61UlH6v6yfo9QfXjVP8t8tfs1XsT8+svFf7949kfqt9Q8bu4GxtQ
Mf/3hO6lE2caLMeZxp9V/4uF9/sY1S9UmSK5T2m+9taK+fCF6v+P86Dyu+qP
6H7Gq/43nJT6n4ID4V1qblXy05JXqP8A9mm99zx7f3RqfuamirHQZMk3V/ze
ef9gIPDBGZq/LrYK30i/t7PKT+A9jfulZruEfdpEbb15xypvgN+iffxQ5YHU
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
AL4SW4FOQbeQD4ItgUN5Wf3/B3yMGwA=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1XmQz3Ucx/FvGrustc0kKTVKmcmQEnJUjgqpMZNMNU2M+75WjnWtHGt1
iFhNEUMSkqSxjlY5ch8RSmJDxIww0uGomZoe77798Zr9vJ6f1/v9+Xy/v8/n
u9W75bYfVCZJkj5UlqbmJEmPckkynS6byM9Okh0VkmTpdUlyMDNJBtMImf7Y
PfKbMpLkV2wCtjIrSVbIHeELaST2ClXRqxu9pV8r/XKxB803pHZ6rFN3mg7p
dQxbqcdu/YtkG1yfJMvUfkRFsS5dkbtKM9VeUVdDrrneLWR+x/vJdKcvjcfR
Xv1K9dtPuWqWYWesc4D/RX0pv5jvbG4P/w3+M1+NVmBV+O/oHP+p7AjsEL+V
Fuu9D+9LedYspEr2cSPdK7dUvzy5+sZb1V6RmyjzBtWVeY7y7X2+zChssvmj
mel7jPc5BpvBfyB3v3dRgn0vu9v8eTyDKlVIecwvjN8OG62uDx235lIaLb9Y
7rzcEX6BzAv2tIufLFdZXdd4x/bS0vusLJsZ+5AdLncT/6NsXeMCbIi5IVhH
et74IlZorgN/m/p68Zvh5/QbwXezxkaZsVTbXvrJFdN6mYROyQ2TmyY3RO0l
uSmmEpk/KMGWy41Re5mfJvsuVhBnK84tv9H+/tanCKtJr+r1OtWO34J6q90m
87j6enFmqTU2ie8ld9Sai2iVHh30e4wKjV+M/ciekZshN4efS7PVrouzEr+J
uvFYMbYH+wn7FnsZO6hHf72mx/ngJ9M+uWNynbG1crlUxXPMV9cV28Dn0xja
lpOy9cYDaCAd5E/J7sxIf4/4XZbzJ/T8Wu9b4rzYcwt+mL+NsKGZab/oOwEf
y08yfkDtRL63nsf4D+MOYc/a85vYOL0elr2AzZLri53ISO9R3Kd91n1Kdo7n
fAdbLfux3PEK6XO2UT8Kyw8m+4VMX7pZ7cKs9Axlyy1P0jNXqn8nWvP/s8Yz
b+IPya4y7pPx35FJ5mWludWxX+pP+/mT+OY481RDbgnfy/6229+E4IrHxXuh
xtbN44fTUL6L+pI487RZvoe6HtiWON8ZaT7qGlGtzLQ22PD4RljnM5ku2K1Y
Z+wAthLbjr2HbcAuYT9gS7Bh2IK4+9Qq7p53dRUviHtArY030yy5EplStZ+r
/QpbhG3BDmNVPedQ/CJ+Ghtp3xf0m6pfGWxgTnrX48435ZvRS3EnZRfos5Pv
GO8A24S9j+3iO8UesbPYb8aP6NdY3zuz07VjD3vx3vEO5QbTQ8ZzqKe5rdac
hF2Lu6b2abV11LajBcZz7XmtuU/0epTqxm9DLdUW8AfVF8vsyEz3Gfu9L+rV
PqHfNXNlsdesUYtvInfeM57EBmB/mT8b9xArj7VRO1vt23E25G/gs6it3kXY
HVh5PpuqG8/EWsZniP8nzinW3Rr19KiG1cdq8jfQarkGfE/rHo5vLM3Dnoz/
HfEdk2muvpnau9VWpLv4tvENwxrzGVSVnyrbBWvI14hvapyp+Gbp96d30hQf
Zv4Z2To0Je4prZIpjnsvtyYrPZdxPuPs1o6zyg+SyzGuSLXkbsea6ZenX3u9
SvDxMuWwavw0vpe5Jvy/0bwb1w==
           "]], 
          
          Polygon3DBox[{{2755, 2754, 3708, 1939, 1940, 3709}, {2789, 1750, 
           1946, 3710, 2754, 2755}}]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNnHXcFcX3xx99dq9317t77cQExEBFpAVBWgQJFUSxsAsD7MJWREwURUSx
OxHF7hbs/JoY2CiK7e/zfj6Hl78/5jXnzs7Ozs7OnPicc+46ow8ZNmbJhoaG
/SoNDY2qP682NFwk4uisoWF7lZ6iH1bbHaoXqtyu8lrR0PCL6tVV/6q6k8qd
6rNK2dCwVdLQMEDtN6v+We23qQzXOJ1V31V128Job60+81VfojJR9MoqF4re
VPevJPrjWkPDl42mn1W9j8Z5UPUXqtdNGxr2UHuq0lP9F6j9OfV/XPSlajtd
9VUxvxfV/qvaxqgkKm31rj/o/g9VmmnOfdS2rfqOUN2gsqvumR/0TNH/at77
MY7q1dS/l9oHxjN/UrlF5bK8oWEbjTtF9Va69oPanq25/lHlJpWNdd83qq9Q
6VCYXll1Z5XvRK+qepPE9NUqzRPfz707iF5SZWfRj6nfhaLHq+6k522u91hf
9QFal8N0/V7VW2ouv6nPUSoHql+muqXqXNdOUp/39S7Pqi1XeUS/91P7oapf
Vfvvajsm8T1HqCylcryunaB6adZWdKn+Z6n+WP3/ok2lrtJO89hY81lP9T6q
/1bbmSo1zecP1SepLFI5NL7do5rT+bSrPkj9/xF9tsp7WrvzNf5s1WPV3jl1
vyfUr6KxR9W1hmqbpLZVVD4rPIcjVd9buv1E0RPUp6IyXb8/13jLqX5K9Ulq
665ymX53Tb1nmqlspntWUz2v5r0J/YLqJ9U+lXdRPVn16ipT1H52Yfop1X00
r6U0VqZ6BN8k9frvWfjb3aN57aW6UeUA9oP6zRD9htbykdgbL6ucq/t6qFzF
81R3U7mS/Vv4G92kub2e+bnHqt5EZUetbzPVJ6tvF5XLde21zGeKs3y+ym+6
d6Tq81QWiR6heojKXNFdVV+m+/qqXKd7jlPdUWWK6IfinLIOK2jOPTmn6v+x
6o9UtlL7Nur7vejf1P6rSlfR56reR/27iJ4oei/RnUSfw/5MfDbhCz0Sz6eL
ylS927aq56r+Xf266dok1Vfo92D2p+q19Kyf1f6Pfl+gMb/jfvUZrPYfRXfn
+4heoPov9VlD9E+i/xZ9hvqvrrU6TfWXavtC5V2178lcVT8PH1P/b2N+80V/
lfodumv9n1DbIs1hocpOGme+6gUqI0V/qfoDjfOZ+vRR3Vr9TxN9n9rv1hiv
aYwb1Pasrp0i+hnV96j9ddE3qv0z0Z+q/Kl79tC1+1V/zntp7H8bvS43FX7v
NzTmmtpPL+neq9X2se77SOUPXfslNU+j37eiv0n9PfZUvZHKGaLvj/PAWThC
be1ULlDb7MQ8F377qp59kX7PVd1Pz+ittsv13BG5ed92aj9E922mcp767a96
E5WzRB+m/sciF9R/3cJ86WbRr+ie5eErql9WmSD6JdV/qM8GuvcD1VvrvR4S
3UL1mnrW0fAJ9Wmla8chRzTOHqyT2k9W+UB0qfpxXRuTuc9Dqvvr/qW0dnvp
vuEq26rPraqP1JiJ2ndXn9GJ6VG656jc55T2Y0RX1X606vcSj3Ngo/kq7VW1
baPx31JbVWMeDy+tmDfC5zLRJ3KOcrcfkrleOvo8UJpHTqi7P/yxxrowB+QI
+1G/K6J3TLx/2M8P6lktVL/d6GcXur6irt3I+6u8qrbrOBdqW17larU9j2xU
uZT5a9w3VH+nff5mjL8b/C1x+40q3TKP8436fB9nqj/rHvRszWGJwnzjRr3H
NLWvoHK9rn2vb9NS929bt/xizNdVXlGZo7KbnvdW6nkz5z66f7Ta/9azXtXv
tdU+WPVaFdPDda1vxb+h70LOiP5I9HqiS9G7xNzWqXiM26P9f2ofovH3ZK1q
Xtc1VXbQ75aq12NtRfdXva7KCNFD4dGq3675+evEc2dqfgNVn67vc6bKXD1j
oOolKh6XMVet+Df04br2t+Z0mOrupe8drDVbpLbf4oxvozH+SH2ubtX4fVSf
n5sP0Kevrn+i+tc4168kHnOg6smZr2+t/n+mHusajT8Inqff26n/KprLP6K3
b3T9b9A7RL9bVM9J3M5vxhmm69P07p9q/BdFb5FZJkL/rfbuet6y6res6jt1
zx0qD+jappnrW5Az6tdO9UDtgc1Vn6n2/6meU/i8jlM9MrccHJ1ZJj8dvKh3
4b2dF9YT0TvRFTdHNqvcibwo3P+PmvcVe6q5xllS7buL/k7tqeg90PNEt008
DroruiVn4S+1t0cWiv5I9Z81j4m+8X5qvehR/T6osH70k9qfrLn/TfqeK6p9
WqP1BOawpvrPQD7qmTPj3i30jstorGVUfwW/1nMGaE02U/0QPLxqvoVMgXf9
Dz6WWvdqqz6PqW0t1Tvp/ora9hVd0/U9E+vB98AXEo/FutzFPlIZprndo/rH
mnXaWcgglU9UPm20/te18O+BepduhWXWoNL1vEbrdssW1sHQxZ5ir4WsXL4w
L0E/X1p0d/QIvde/Nesv7dX2UqP3zLSo+b0rvE/zXy61LjUn+ALr9mhiGr23
XfC3m1WW01j9NP52dZ/5j5FXjeYBrRK3DVB9b6Pf+Z3Uejvv+3bmurXqpdU+
PLFMpY01GVHxPdw7XPQv6ve1+ixUvYKeOwAbqO79Ag/dRX1a6vr78JVGPwe6
VN+OutahYt2ol+77QO09M/Mh+BS8aO3Cdb3w9/wo3mVPfd952DOqd8t9rjnf
P8Hz4Q+Jdd1LEttm3UJf/Ur7Z6PcOuwwZJq+Xydd+07jPx86M/rbl+p3WaN1
xWPV1hjtp6nf5ewLfbcXU59r9MZnC+ubE1S/Ejoh+vPZqrcM+uXQn+lX0XO3
EP2D+o9XncQ48/Xc6ay/5nZwat0CveIS0VWVa/jm6jOGs4k+IPpgzrvop0Tv
zn5g/7POKgfp9zNVy4tr4luhg6J/foJtKLojOlXh73N34QL9mt5xZ3SFxM/A
Pv1Q5T3R+/N9Euso3+n+Hqof1HNmFtZvufdHtX8ien3Vjfqmb4veg32dWndn
P6NrX5zYhuVccj7HwXPU/73UbZ9llsnbaU3mxFlAz59c2A5eQmu5ftzLuW7Q
77bq8yU6hu65lzlrjGUqPgPIw56qlw++83PN/Aq+xfm4M/jzHUHvL/rdzPe1
QX8LHsI8sYOuSLxXnk5tV6LXPRM2BfbXUM2hLrqu+rjC+/EDPXNOZpsUufCo
fp+j9o11fYXM47EHW+W27V5U2xjOaYy/Yem9cTH7tvB6nKN6nK4vEXrps6l5
KfRzqW0SnrdhblvvC43/mJ47ER6ne09QuRieCl+v+lvN0HNHqe87iXWCW/Tc
y9V2hM74l6o7NNo2wZZ5Hj0Cmax1HZJarzgi5D7yv7fat039u3dmXnpgZn1h
7dBD/gl+CF/sq3seS2xnXVIYA0j1/GPiXbCtsP/YS1w7PfYV909MzR/hjWAD
jwU9JbXOh763Ym774ivORWa9ZmW13ad3GCT6UrWtgY1Ysc2wX2pbG119g9L6
/9eaV8vc9vrzmfUBdA50ghbI2IqfsbP6/wwvUN1G/V9AvvJ9Q6fCnlkpdz0/
s36BnvEoOlTQ6CePVF2jI2G7vZhYzxym+g2Vkez/0DPRN5PCuuQK8JvEdh86
053wHvZ5YXsRO7Sv2u8vrO8sYm6ax92if8hs12HfdQoePj/4OLbgNyqfq8zj
rCbmHS9VzXtuRZ6ktgewBXZBHibWFzfILEtOUn2n5ve96iO1r+5Dfqn9hZrH
Y1wwJZ43L8Z/N54N1oa+jC7Oe16ZmkYn/zzswY0zy45nQn58EZgYZ3mqnjVU
9OuBXbCv4Cn3ptb10fMb0L8T89Yv4l15Lu/Nb9aoTcU60MyY7/yYM/Ifm3nx
fL+M/j/r2V+J/inzN2cPDFXdWd/1gcT61UWFdSd0qA/1e7zan+asZbY3twa7
KIypPKU+bQrzjVMKyzRkHzgPugk6CrY3uBr4GDpfHVsSOaBv9XhmWwqba5nM
vOhTMEyNe4zoQzVmofZTRX+o9hr2OLwCHpIZ4zpYdYvcNtyT8I3S9jf4xFXx
XW6A56fWV8BDt8287gNVf4Pdi92sPbB06fM7Rc+tgpEi10UvzTvDP/Xctshc
+K7uu1bXB6jcpHuOTy1bkdel7u0n+ufCuCM2ODoueh/63+iKdWYwVnTdbzVW
C+xgzWG50rziMt17isZ4OLGMRh+Ed4Ff3FvzOhxRWOacq+srxF67K/bbarll
xiyN+3RiWwudZlxu+3pKnHfsjbFqm5kZc90rM//AzhrC+VE5IDHmMir48TWs
Lbqefk9X/VZm3GPXzHtwXpxTbCtsnENzn0HO37U1y3Bk+d76/RzfXvThmfnx
WmFXphXb+9j9e2mMTQMPebDm/XMMGGzINeTbkan1CuTOoaLbh8z6ODPvfCHz
fm8Ze75/Zlylr+q1SvPedqpv1u8lOIOqb1LZlf2jenrNa/Cu6oNz63oXZ7b/
FoUNeGpibBXZNjLOJZjISPaM+vbU9x2k57dWuVXtA6LGLm4dOvD4zG23Rfu5
uXXlHVVvGDY59vhGom9JAmsrvMc3LT1m97iG3oT+hF0Gjo3tg87fU2NME71W
YgwOngzvuzr2M+P3yMw/dlC9sPAen1RYN0MvuxobK/UZQU+ajP4buuI7mfcb
PBAeMiuxXXmy3mFFze2k3LYU7dhTFxS2PR/QmFtVrItzf38wGY25NDIqcBIw
zzdUP5EYx3hVdJ/U+Gy/3PpqjoxVvXXMh/e9NvG5fanwGOeCE6c+p4zD3ka/
nVGzHoscuQp9QP0+FL1MYTn7R9jwW8X6sE7ISmQcsu7PzPjlLqr/yIxr7hyy
hm8FPjok5GDT2oe8Q18dgm6purv2SbPCWNfOqncq7E+4Uveelftcog+NKKxj
g80MpR+8TfQquXHUvzLrPshZ5O2O6DNq20rjr60+R6rtYfin+hycGOe/J/jA
3qq/zXz271b9S2Hd9LzCshXMC7zrRs3pEGS4+szO7IPYPzMuN47zKrqaGWN8
R/xzDd2/r+jdwBp5jsqRjbbpkUFgCx0T24/wsetq/hb7qP/1Ne+9/dAXQk+H
x4HNtgp9ZlhpvvJOzXysReBF4NDg0duIXjs15gpGu2Zg/mD/8MzmurZq7vXA
d8Wa9Il7uWePaN83xkF3O6Fu2YKMAev7DbmVGouocV1tbfH7pNbJecdSv89Q
3R5cqDCe8Kv6vxF6CPrIDqnHGavfa6beU8fX7dcCK2efTU99RtZNPOcW0T/J
bCu8rjXPRJ8o+j3RO6b2G+Ezws7G3h4V47NO4Jb4BsHl2bvNUu/f45BNmuuq
qX0Tb4H/og8U9jWsxvnMjX1yL9d+inkOiHHA58AkZ6f2ebEuQ1PPAZ2Jbwpu
gp6E7ohu1VjYrsXnsXac2+tCPsIPLg+ewDm+Is4yvGFa0MuXvu/Fwvjr1cHf
4HMzgs5S6+jo529m5qXwHHQHdDt+Q6NPMKcBMc4NjV77GbH+w2L++CDBWafG
HH5lP6jeoPB9K8a9nTPbE730rA6Zbe5uolfOrEt+q+/1T2F7ai46dbwDOHa/
GP/aRretFGPStkK0H5UaK5jcaF7Nel0lelJqexab5dSgpzZ6LemDHr9S6XFY
/yx8guhqj6Sm2bu7psb2ebeV1b+/fncpjD/Ak8EUkDO9Ussa7Oge8ayzUuMS
a6h9h9y8ehPOSrSDd2xReF2XAS8p/B35nh0Lj1cXfU7q/cG114PmHS+OOdB+
YfB51gQ5xTyvabRvs0Wc8Z6553ac1r5d4XnVNP46qb8r33RW2OFL5MYKto+9
yjeH5hr7enjqvV2Le8EBz0gtK5kbPGa7eC68GTsWO2j73GsFDnNtyC3ec1rQ
yK+3U+8/vvWMoFmj52McZBA8qnmM37q0bf4RuHpq7AN/48OF7Tb8U/CuhYl1
45nq80ti/AE/FH5h9LMngp6k9h9Tn3POOL4k7NNlgw9z5h8qLKOzOFP4e/E9
nyv6tKDRkx6L/YPsPzLWDn8Na7Mo5FFjZn72ms7CU/Es7JOlSvuLn+FMZN5r
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
70ucCH59fGnYAfh1sAWuiHb0YWyCLjH+F4XHwH+Ozt452g8LmmsnpvbJod+/
GPfyLt8XXg9sgnmF9xh7bX7hvcEe2Tf1t0ffnpo7tnU2+GFmOU+cMr6MAeFr
gJfAX/Czd492/BdcG1Ix9n1k5vGw/7g+KPwfrYOmL/7DDjHnSUHj49kyt+6O
zfhN2IDYgthrYFLYscT1DFRpr3JZ5nMPXo5/rE2s56Op9SR0JLBx9L3r+A6F
1xj7lW/RLdZ89dw6+H0a73+F9zn7HZ1qcMjxAaXtTPb/i9GOrsX48Fr820Oi
7frC/gJwmmuDxrc+q7CPflDqOGr8A9BgwdwL38Vv/nvheHWwxI657V58Z2Mz
66fYpu/qWsvUeQSb6Xer1HYu+hM02O86uW2OR3TfhoFPglOuV/g6uQhgNYzP
/tg8bGAwAfADaO75uPAZ56zvkvrsMQ/i/FlzYjy65La1sJfBJKDZZ5zvbsEP
+1UcP4q+ipzpE7EZ4Mb9oh0+3bPyH0/tGbKAOF/ifdGH0Y2bYn8TxwJ3q9he
mxwyC/2JmHjivw4A86vY54S/ibpH7Fv2Enotex3dFpp7Ls6Nm18U93aP/hfm
9oHiCy1jTNrZjx1iHDBy9DB0rftL4+Xn4ovJnGNzeub4SHJLiLHbMLOf7xzw
9czxafgH767ZH30V+GTmfJUzVF+U2TdwIDh95hg44hz2Lxy31a7uOOKuFduh
v7MPK/ZnEZ8PTVwrceldKvZ77F04nqKt7m1VGs8h9rtnnDd0XHyUG4veSP22
L62X4y/CV0j812a69xfsL/W5XH0XVq1nD8idh8BZALtkn/cJHQMfHHFAbeo+
R71Db8EOJ9Zs07r5ErwFvzPxNMj7S8CSK44VRtYT14Jf6NLcPo6to31qZj/w
2bn938TV4g/ft3Bc2+Z1Y0htYr+hO7eNb8d3QWZOzI3Rg9UPz/2b9o3iu7UO
nka9cfA6cGKwY2yUlVX3qlh/eS/awZPfj+diEw0PfRK9ckHMATvka+2Br3V9
pcIxMptXHCfTIfgf3+WCzL6c/XLr9vQh12ObwroWNuCk+Dbka6DXMadTc9ss
2Cncu0dhn/jlmsM+6v8PcYqi/8mMFYN17Ft3/hV9sEGwO9iHa8S9jIEfk5iB
UYX9m5yXXVR3072b5pbv6NjYXOiTnC3O2Qhdf6JqHyh++V3qthOIaX+hal8c
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
M3R7ZD95FOSuoKv/H+7D2iw=
           "]], 
          Polygon3DBox[CompressedData["
1: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
S4ydg/k9jdxZ7+5r9O3N/G3pm5i+x71n3kX4G+CnYvxn8GvrazB+Gd+Z9R6n
b0n6poGftZk75d26gfmrF7FJi7RiQ7Q92s49a91+ILJp/X3QC5XxXTaoz6P6
qb++De0TdRvfr5++KGN37Y1OV7dfgPxx1l6Z/oPgz4ZfAPoenr9SEfv1VRl/
bwbo012vJ77baciX0oZ5t1nv6GbOzBKsdwn8qY34xv/ieQ34A5Cfw5wvq/gR
+hPPur+sdWmZu/oa7bGe6Ex1p/ZiaWQXl7nbr6hjkV9S5i6/qs2E/wx+MGdh
ZuZM7W9sxfd5Tn2D/FPPLPIZvePIvilj3z+nzQN9EG0u6Pdp85Wxado2f+PH
+vLMmbk7NmKPVr7nXs34qF/oT9Im1R76XvzedVqJpVZs5nsaoxyrPiwTu+jb
3w4/NesdUtuHo1jr4EbiK/2BE4voDHXHJLQrkV0APwh6feQ/IL+GvhX9Nq3E
Egux3gnQi9NGM/bARvyLAeqRZuzJPK3EfMZ+6uhntRWscQ/rbVHrq4NpczcS
oxirjKdNztqTGUO04u9P00j8ZRy2BH0b6zvA74ZshzK65nHaqmVsmbHiws08
/0n4rZrxwdWv3XzPw5qJQb/mfX6nbaLvzvz5oXtb0Z36c/p1C7YSq5xP32c9
iTmNPQ+Bf77+PepedZC6yPuhrn7U9y0TT71QROep+9bV92wmxlL/6aM8jfz9
Mr7LTT2JvX/xjpWJJy9k/Oza3Crxeb/uxLzGvgcxZ173gTF/If+Wtjz0hcw/
Gvp72qrwlxrjtBMvLtGMDdqriv2flPmT1vH1abS7G9EZexu70vo28813g/6G
tozxjDZLf5O2kvEU7dgq8XOjmZjY2Nj4qkt9Rvun9ucW037RDjLWovVvRscc
CX17Fd9rWnVUFX+xhD6PNkUd3064Kz2J7QYgH4TsTNqkncRjPdBn0Hrhf4Bf
vRkbcrzfr0rsejz8cf6+dnSFMayxrP5ot7+FVjL/WeRrFPE59D0K5FM241Pq
Wy5qLAi9J2vOCn12Fd/vLH0i6Gfa8dX1cfR1jHdarbyj8aJ4iL7zvrQCvoc5
rzJ+GviXoU+pctYehJ+3E5tUtXJ/tVXvIF+gGZ2gbtB/fEdfhjWuQ76AZxrZ
YbTbeNb4KvZFO3Ngb/b3oEZiYmNj99+7+4j6thMd/nwZHaQu2gH+9Z5gRrtW
8Rlmb+X+60tcyzN2Q1Y1c9+NnyeC3p02EfId6dtFW0f7AdnC9L3SzDd9scqe
uDcTN2O/PVOeLfdE++H3f5n1L1L/Mnc3nj8V79eEf7Q+T9oWbYC2wPN6biN3
3rvvfvdpBj84vMo7+W7GAMYCYlZiV3fCn6y/Cv9JkTtxapU9dW89k88Yz9Eu
beYM6t9+RFvU36N/Bz1fFWxsQ9rP0FtU0X2zwc8MvWYZe72g56cMDiIespBj
oMtWfCXjbeNuYx/j4Tm9I+pyWr9GbMp00MfqUzaCaYlteYY8Sz+JIUC/XuXZ
2xaJBy6kLau9Z93N+JYrep78XszdpI49l2xER0+vv1Plbv7sHrg/tY/kGbqL
b3kBfQOgv2W9Mfp7Vea7jrHsJVXwiR+QbwB/H3/HFbEx65XZU/dWG+R50AZp
i67yTiA/gTkntnIn7+wkhjSWvLyR/VCHqEv0W4xNZ9L+FvkmfhtxHfGdvvBz
QE9WZb+NdcWelvb7INsffmP4X+BHuN9+gyp3xrvjGfese2e9u+pE7Yk6Tl2n
D6S9PqwVbErM4lDjxSrYoT618ftY+r5v5PfsDH1Ab3y0EfD3Iu+C/rkRH1U8
5hZjnkYwLrGuO8Q3m9EBb9fnTVtmzP8b9P6M2Vg7w3pXwe9QxbdUB/h73qUd
UcTHXaOTM+pZna8Ze+gd8a6oo/Wn9mO90az3pzqtSvx3PPQR2rMqmKOxoDpe
f0Ydqi7VJi0O/xDv+3gzNugz+Ndo0/uu+qzQnzq/iM3WnhkfePa1Mfp76nR1
uzZtKXUt6z3azJ37sAoGo+3WZonvaR+0ncagxqLaCG2FGK32VJuibdFGGM9c
x/xD/B7eo97o46nU1XyfIYw9hr7d+PZ/07eK2EIn8aVxZn9kF3Tin+unLw1/
XifxgXGC683eia3Qp5+Ttcepk4r4Lkvq3/P8LYvELOJFxvvD4deAXxd+a3Vu
kRjzRugtaRN3Jya9oUrMbYy9fiOx+E605bozZpB4uzac+evwvOUZu61jisSw
N2l7eN4W8K/rk6k7mbMz/PM9yQ/81RO/Wf/5Ou1zO1j6043ogzWq+C5XNBPP
r1kFm7+qmXj9Yvjfi8SMM3eiA/TL9c/VDU+0c9cXgV8Z/qJO9uNtxizD2Bno
m7qZPVGfXSj+7vvrNyG/2D2C/x/8sr25w8PqO+/dfqSKrdCfO6YK5i32PR/8
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
bTt31Ry5+kD8+7JGanTEC1q0zbsTkxhvWOMzZxmfQ9/DGqTZy9hwbfmj7dg2
c1LaL/Fjc4vmIM1FWtNlHkedo+4RDzfXZY7KXNU1tLeYv4p+PWNngx/ZSM3M
eoxdFf5PfVH49avg1dbCmGM112oNx8xlYhr3Y7VOsIe1tVdV7LW1Yfow2uNH
2rGV2kztsfGTsbQ1LN43fX59f/F+84HW65g7tcbHWh9jAGMBMWnzfZ63Y1qx
FyOq7OFVZfbDvb2zjA+hz3tVfT+ObSVfP7I+z3+VqYkZViXeNpZ6q0ztmTHq
dWV8HONPY1xjXWuktO+eAXWa9tqzIZ42TXfW+6s+4+boNity9v2+tzJ/Xsas
28mZ0uaPLXLW1mP+i818Y+vPjLmvL3Nn9LfM+5r/PaBIPGH9od9KzErsSrxs
oWYwN7G3w5m/QSuYhdiFGL1YvTk28ePF3P9maob0L8S3zNWIWYlded7EfDdB
/kU7Mey4MjG6sa01fdb2WQMpXrYI/KvNPNNni7/O3co7id9Zs2jtopi3/ujr
7ezdXN3RV+I76ppZ4Id1gjdp+2fvjj45opXapZlot/WkVsrYyZykucmTqvhK
5hXdv6GdjLXGSzzH/J3x4B3NxFNjytxVbbj1Hq6vbzBDXR9lPHhgEQzG/KSY
mnv5Z0+wttM72Wvrqqx9NN+qvfXOWG92eiu1ZZ4J8dWzOrlLYnTON4dhLkOb
Ln5v/Y13x/ov86vWi1ibaD3MPq342OaAxxTxva0pmVBbAl+WifnNKWtjtDXi
tz81U4P4Z42pmGPWPxNr8fdb62I9opit+trY7Nee/B7x7ClawUDFj6yfbPMu
bcbv10qNrbW21rRa2+oei9WKubv35iT1r8W09NG9e+61+LH1Mmd2omus0zu6
NzWM1jLqcxt/WPNo7aM1VsZn+vgTt2Iz9P3vK4N9z9NMfsuYwFy7OkfdY32b
NRbq8Gs7wYbNfX+L/PcyOWNzx+Nrf8hv5LeyBmHaVs6cZ++YWtdY5yA2ag2P
++GZ9ff4u9QtYtnm3r9jzB9lbOQPtS5Q11h/YSxjfZc1F2IgYiHW19zdSb2F
vpE+tr72Uch3EqMXD+kkJhVfmbRMrCreaZ2WNlpbPa4df79dBu/VJ9A3qMrg
vcZYz5TJwRt7GePrC/SWif1P08dr5nk+1/oTa3m0cdq6U1y3O+dhylbyfeok
8Y3nquyhe+n5X5n3mbdM7aA1BtYaWLNh7Yb1jzd24pNa6/JVI76qOdNGKzXC
5lKNkSfUqqgzq/j3XzaTE5qQG+qkHtm65CN7U0/tuxgzWf8oJi42rk4qq8Qb
nzXj04uvzdnJ2tYYmR8UIxArsFZOLGL7KrUvdzaDh1ujaX3JZmVqN6+pUouh
TtdevlUlN6GONv8pnu5ca5qsbRIzEvcR/xFLurZK7UZXd+yreLm1Ors2godb
o2qtqjUJ1g/pD5gj2tQawHZqpGZsBbN3ffHZX/UXfOcq9RCvN+OzWl9tvat7
K8Yt1u352rGV/I94ot/QbylGLlYuhi6WXnTHnhvPWfv4SzPxkzWZ1v75TY3f
xGCN79wT69f7d1KL6J4Zj23eSu2aPqP1v9pn41zt585Vzoy67Y+enCVr2MVG
rfm3ft576H0c1J348OhWbMVq3YkP1UH6rj/1/H+6qUhN8bmt5E+1fYfU/pj1
GWKxxgvWgxl/urY1NNbSWKNnrZ45UuvDtaHiOxvW9s36E2OplYvkB2/uJL76
sI4NZqmCrVvj63nZpYx/Yb2i9WPin9Z6W6NirYoxiLGIPqC+oPWenvXPtbHI
32jXvkvt31gvbewwtP59E3sei8QwxjJinuZujEmNTc3xvFLXHJpLUqebGzBn
qa4/qZVY3Pto/bP+n2fTPXFvFmCt24qcKetrrLf8phmdoG4QT/66mf9hOLkM
Hv9tM3i5Mbi16St0p2bQ2kHje/fOmiRrk8wfiHWbkzA3YX26tQPWIFqLKIYs
lqw/YX2NOUPxAmudzCU+Vya/p/4oPBut2AYx2MVqPNlaMTEQ67XEs63VsubL
2i9rXK11HdGd/7cwBjUWNcYw1hATFhv+rRF7a0xqbGqMYqxizlG8wtoqc5HW
+Ivn/l0mHyqeq+/xSyP4lzV0YofmUMVzxKOtJbTmYP1W8BWxvY27k38XjxFL
1R8z/279j/iXPqO+ozWCricmaf2l9Z3iT2Ju1oubE7bWaeZWcsU3dLK+MbSx
tN9L39KaEWtHbuok/jWGMJbQhpg73KeON61nn1ALDj9/Gbzf2idrrKy1sp5c
vEZMxvo9MXqxen1M60utj/VbmsN+oAw+6Lexxt1ad/F9a1HFJJdvJedsPlrb
bC5aG/dqXXOo7fN/BvzfAc+YGK85SnOV+gD6AuYIzRWOreMBz7u1/uaHzBNZ
J2ruz/9x8H8dxC+11WKQ6ifjAXNX6uitqvjD5nbERLerkmNyrVWLxOv6GPoa
3gnzK/rF2iJzBOYK9O/NrZnj2qbK/bJ2bUHa8Yy9hTHvNHPHrGfW59L3sp7B
ek/xq/easdnabuc41/8xcD8G8z5ld3w27ac63XzPNq3oeu+9918f0fy+NkA8
TNuvbdiklf/1eJc2upX4TlugD6wvLF6qb2oN6ey1PbXWxmf6bM+/vqU5QvOV
W7FG/yI17Ooz7aW1Qta4Wet2Yzu1+GIa1u9oL/xfkfdpY1qp8bfW3xpX8xH6
WPpa6hjzfeJ72iZrOMzX+v7LFbFZ/r/KrT35LX4z8T71sbW8xkADof8PmHr7
3Q==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1HtoVnUcx/Ffuea2NqdN+sdqaBT2RxheKNCmqBnkqNQyL5lM05msQiS8
JuqC1BLKa8wnr+lSt7mm836dzqnpVGKibQqKEniJ5a1M0V4/nv748Pw+7/P5
fM/vnOec037U5wM/ezyE0J+eoKOZITSnhTA2I4RrwGutQvg4PYSUlBBG+z3q
2DFagt/zW0PDWoQwIAvX/Yu/K3ddfit2iNpZ/4a1NLOWX66bxV+Qna1bobcC
y8YuYnOxzdhurJPO+9RgL534RXRXZi/Vm7vGvOFYn9QQFssV0ev8Oppg3hH6
Ku7FvGoqtq7DDlOZTBOWY32CvnFsmnkb8Dn81zTY3Csy9/AP7eEg1sE5Gvn7
NBKrxbKwer5Ct5GfzrfRzeer6BZ2kwa4tmVyPbBCme+xrnJD+JPOc8t1FeCX
ze2KfSfbJPMGNWGdsTxsFt+Faszryf8Uz2vdLSW5917Zrh1PM6svzdfNkHkB
S5fZI/MMfo7fhb9knUeT5WZiK7HWMpfsZ565Vfa2DEvDzmJTsFLsednx2BYq
Mnc8v03uKbOGYv/I5WNrsSJ+P02Tq9TdhP9ufdy8MnxM9PSc7j5+iL38zZda
fyS3LvZlD9Bk/FPHu8u2pq3mV2KNciccL5ct5H+J9w+rxyqwT/hNshetX6U6
+3tgLz9gD2Rq6Yz8xtjFmmU6UpVcs9zT+Nt8Po3wv13FztFYx4/oLseHyqzW
bWv9B7bYvGJsKV3CulNCfsn//1sfvne8RqwV1mDev3orsfd0h2MtKY+/ga+X
S+V3y+2iKdbz5Kb6XWjeTZlqetb+3uHXUGfdXBqG3dZJUC9zbmB/UqVMf/3e
5rR1P3NoO/YyHXOfB/KpVCNzWveO+SUZyRlxVoncI+zX+PyaUSCXSwVmX6Fa
LMFPpBHx2dZ9kXbovUu59jWHL5HdyLeXG2d92rwJztGB3+s8e2hVfL4c6+cZ
/xZfYN6buhlU7ViCnozvi+5M3XKdH7FM7Dw2CyvDfsamY1/G82CPmXUKvy3z
llk947vKb5Z7KPOIRsfvoNx6rDh+W+J/LHdQbhJeGL+Zuh1pp8wMLEenBZ9C
W7BX6APrQbpndNNl9mUmvz/xO3ScymX2Y/Pjs8t/QaXYUrpvf4eowbENumfl
xphThyXiexPfg8zkPeqRnXxG4rPyH2tv24g=
           "]], 
          
          Polygon3DBox[{{3733, 2296, 2241, 2240, 2454, 3408}, {3737, 2302, 
           2250, 2249, 2472, 3422}}]}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0stLVVEYhvFPzXNMPSaUBIVhNbNBsxrrtEZeGphNrEEZeKKy7F5WpoUV
BIEgiIIQBUUXMiJCKkUspEH9B1ESXYQkMpH6LYTz8L77WTfOXntjW76hoyAi
nuBHYUTqT2WlMlgqPQ/LDfI1P6pv0e/K7fKhrJfXyiNyRRE79V36A3PHjTWn
OfqUvkd/rE/r+/R3sl3OyLx8L4/ID2URE84/pv/jrqa5yXNdsjkT0YQG9Hge
4xv1kqxz9I/WH+encTn9L2P35Rq+U07hEr7zS/a/px/GJL5xi9xF/Q468AZf
+b98tz6KA1jnvFdygb8gR7AXa/lNzhrXz2MIS9a3yhr+pTyHQSzy5VyT/gJn
McsNyFJ+h3yOM/jC/3HWbb0Oz/CZOy1/87fktnR/+MTPc6f0m6hFLrt8z7/4
k7If1ekcfr2zHukn0ItV6MMVbPZOj9qvQp/X38rWEuPuMqdvlTX8bq5Hd/3R
Zs9qriy9W2sdGYfkyvRO013Jg7IdpsZ+mUnvzpobBufsU+w565uq4q5zP7kV
XIZrsWg1r0be2Jgxv5jghwqWv+X/2WldvQ==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0ktIVVEYhuFfMulmg4gGSUVRYdNKzbxlJUHQIIOupiXkoKhooFMb1iRs
pAQ6yEjUrFMK0sUIKikIAiGKCBPJk5xEIhKiUc+iwcf7/e8+a+119t4bmy/X
X8qLiIysLYgoWRTxfXFEeX7ErRUR+81/zd16vX6CP7Iyothvm8yV2MJtwwvm
KrxYGHGFazMPWXcVh/E6juFzuam/wi58jT14x5pxvVfvdc8b9unnPup93Bos
4hb03/wA1pl36Bn9njyUZmf4hDVLI5a7Pqj/krP8Vu6DXpD2xp9yht/Cz7v3
hPmuzMtmbo5rcv29+bbMySb+B9/IvzN3yyEuhzn+NP9W75SD/Gr3mtUb+HHs
kAP8Kj6rn+Jf4k7uj/XX9G9ykt/AvdAX+HacTu+AX8/PcmPmVpmSddxx157o
52VSiris3x3jR82Nspf7gjP8UX5EP5yeUdrTsyx0rs9pvT6ED1I8+32Yxe38
/fQul9gr7WN+ptfqT3EPPsYaHMXq9IyXObu1Ven/6l/1Edcq0330Yb1CL3Ge
R/ru9C6xHDO4C89Zl/PbsvRdcaXpW3XmN/n/v91/p1xmUA==
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{2716, 2909, 3170, 1713, 3165, 3166, 3167, 3033, 3857, 2769,
          3006, 3206, 3207, 3168, 3878, 2770, 3007, 3699, 3773, 2771, 3008, 
         3700, 3774, 2772, 2717, 3775, 2773, 2718, 3776, 3678, 3792, 2719, 
         3679, 3793, 2720, 2910, 2912, 3829, 2774, 2911, 2857, 2914, 3859, 
         3044, 2775, 2913, 3067, 3101, 3068, 2915, 3870, 3045, 3138, 2776, 
         3100, 3069, 3102, 3070, 3777, 2916, 3046, 3139, 2777, 3208, 3169, 
         3879, 3726, 2816, 2858, 2778, 2842, 3808, 2843}], 
        Line3DBox[{2721, 2917, 3172, 3680, 3830, 3009, 3103, 2918, 3034, 1722,
          3010, 3209, 2919, 3171, 3880, 2779, 3011, 3701, 3778, 2780, 3012, 
         3702, 3779, 2781, 2722, 3780, 2782, 2723, 3781, 3681, 3794, 2724, 
         2920, 2922, 3682, 3831, 2921, 2859, 2924, 3047, 3818, 3713, 2923, 
         3071, 2860, 3106, 3860, 3048, 3104, 3049, 2925, 3072, 3105, 2861, 
         3109, 3861, 3050, 3107, 3051, 2926, 2985, 3108, 3690, 3782, 2817, 
         2862, 2863, 2844, 3694, 3809, 2803}], 
        Line3DBox[{2725, 3173, 2927, 3035, 3683, 3832, 3013, 3110, 2928, 3037,
          3728, 3833, 3189, 3014, 3190, 3210, 2929, 3222, 2208, 3221, 3015, 
         3703, 3783, 2783, 3016, 3852, 2930, 2784, 2726, 3784, 2785, 2727, 
         3835, 2931, 2932, 3684, 3834, 2728, 2864, 2935, 3052, 3819, 3714, 
         2934, 3073, 2865, 3113, 3053, 3111, 3820, 3715, 2937, 3074, 3112, 
         2866, 3117, 3716, 3871, 3115, 3054, 2938, 2986, 3116, 2818, 2819, 
         3821, 2867, 2868, 2845, 2846, 3810, 2804}], 
        Line3DBox[{2730, 2869, 3036, 2870, 3863, 3717, 2729, 2939, 3038, 2940,
          3872, 3119, 3195, 3194, 2942, 3174, 2943, 3853, 2731, 1915, 2944, 
         2732, 3785, 2786, 2733, 3836, 2945, 2946, 2734, 3822, 2871, 2933, 
         2872, 3837, 2735, 3075, 2873, 2936, 2874, 3120, 3873, 3718, 3140, 
         3076, 3121, 2875, 3114, 2876, 3123, 3874, 3719, 3141, 3062, 3124, 
         2820, 3118, 2821, 3846, 2987, 2736, 2898, 3804, 2805, 3691, 2806}], 
        Line3DBox[{2737, 2877, 2941, 2878, 3875, 3725, 3196, 3142, 2879, 3039,
          2880, 3864, 3077, 3199, 3198, 2950, 3197, 3795, 3704, 2738, 3705, 
         3796, 2951, 2739, 1928, 2952, 2740, 3823, 2881, 2947, 2882, 2741, 
         3824, 2883, 2948, 2884, 3126, 3078, 3839, 3143, 3079, 3127, 2885, 
         3122, 2886, 3129, 3080, 3840, 3145, 3063, 3130, 2823, 3125, 2824, 
         3847, 3711, 2742, 2899, 2807, 2822, 3797, 2808}], 
        Line3DBox[{2752, 3159, 3160, 2963, 3178, 3842, 2787, 3179, 3091, 3092,
          3042, 3858, 2788, 3018, 2965, 3786, 2789, 2755, 3709, 3787, 2967, 
         2790, 2966, 3182, 3183, 3882, 3727, 2968, 3055, 3155, 2791, 3133, 
         3723, 3868, 3135, 3096, 2969, 3056, 2792, 3134, 3712, 3848, 2992, 
         2830, 2889, 3685, 3825, 2847, 2848}], 
        Line3DBox[{2760, 3161, 3223, 3162, 2970, 3184, 3224, 3885, 2793, 3019,
          3219, 3220, 3218, 3730, 3884, 2794, 3225, 2971, 2972, 3843, 2795, 
         2761, 3697, 3788, 2974, 3057, 2796, 2973, 3097, 3869, 3724, 2975, 
         3058, 3187, 2797, 3136, 3213, 3214, 3849, 3186, 2993, 2831, 2890, 
         2798, 2849, 3813, 2850}], 
        Line3DBox[{2762, 3203, 3204, 3163, 3686, 3826, 3020, 2976, 3789, 2799,
          2763, 2891, 2978, 3844, 2800, 2977, 3098, 3191, 3099, 3790, 2979, 
         3059, 2801, 3137, 3215, 2994, 3188, 2995, 3791, 2832, 2892, 2802, 
         2851, 3814, 2852, 2809}], 
        Line3DBox[{2764, 3156, 3687, 3877, 3157, 2980, 2982, 3688, 3845, 2981,
          3185, 2893, 3212, 3862, 3060, 3061, 2983, 2997, 3192, 3693, 3850, 
         2998, 2894, 2996, 2895, 2853, 2854, 3815, 2810}], 
        Line3DBox[{2766, 3689, 3802, 2765, 2896, 3002, 3729, 3827, 3216, 2984,
          3000, 3193, 2833, 3001, 3698, 3851, 2999, 2897, 2855, 2856, 3816, 
         2811}], 
        Line3DBox[{2768, 3024, 3025, 3856, 2767, 3031, 2834, 3032, 2835, 3855,
          3023, 3021, 3022, 2904, 2812, 2906, 3828, 2813}], 
        Line3DBox[{2815, 3003, 3004, 2840, 2841, 3005, 3807, 3030, 3029}], 
        Line3DBox[{2826, 3805, 3692, 2825, 2901, 2900, 2750, 3811, 2988, 3146,
          2989, 2956, 3065, 3131, 3064, 2749, 3876, 3087, 3144, 3088, 2955, 
         3086, 3128, 3085, 3865, 2748, 3149, 3150, 2954, 1847, 2747, 2888, 
         2953, 3838, 3695, 2746, 2958, 3800, 3707, 2745, 3706, 3799, 3200, 
         3202, 3201, 2744, 3083, 3084, 3798, 3040, 3148, 3147, 2743, 3883, 
         3081, 3082, 2949, 2887, 3211}], 
        Line3DBox[{2828, 3806, 2829, 2827, 2903, 2902, 2759, 3812, 2990, 3152,
          2991, 2962, 3066, 3132, 2052, 2758, 3094, 3151, 3095, 2961, 3093, 
         3177, 3881, 3722, 2757, 3180, 3181, 2960, 3841, 3696, 2756, 2959, 
         3017, 3854, 3708, 2754, 3710, 3801, 3217, 2964, 2753, 3090, 3867, 
         3721, 3041, 3154, 3153, 2751, 3720, 3866, 3089, 2957, 3176, 3175, 
         3158}], 
        Line3DBox[{2836, 2837, 3803, 2908, 2907, 2814, 3164, 2905, 3205, 3043,
          3817, 3027, 2839, 3026, 2838, 3028}], 
        Line3DBox[CompressedData["
1:eJwVzEkyA1AUheFrZiBMNRHsQR/tKKJLiSqliSrdmJkNqIoREzOUbgVENFvQ
9yyDJeQz+Ovc/9z7XtvKRn69KiIK2K+JyCQihmsjfqsjOmQnunCkX6qLuHPT
zXvQi2P9sv5ef23+xBdO8KAbkWl3s+hD0e2ort7cgEc3Wf6NOb5qfyPHeaNs
wpObMX5r3rGflz98EklzM57dTPBt+36+gAGc6lIyhz2s2ed0g+YhnJlndC/e
t/MWtGJL96o7QIEvYlf3xg9xzjf5lffvvCQvUUZWf2H/p8/zaXz8/yVL+in7
hLkCeL8xpQ==
         "]], 
        Line3DBox[{3229, 1531, 3491, 3732, 3959, 3511, 1356, 3492, 2295, 3512,
          1358, 3493, 3938, 1456, 3513, 1360, 3494, 1457, 3514, 1308, 3963, 
         3495, 1458, 3515, 1310, 3964, 3496, 1459, 3516, 3965, 1312, 3497, 
         3284, 3517, 3903, 3408, 3733, 3980, 3662, 3409, 3734, 3886, 3230, 
         3418, 3420, 3941, 3285, 3419, 3356, 3421, 3927, 1599, 1610, 1196, 
         2648, 1496, 1024, 3342, 3748, 3904, 3754, 3301}], 
        Line3DBox[{3245, 3740, 3895, 3244, 3741, 3896, 3246, 3742, 3897, 3247,
          3440, 3947, 3441, 3248, 3749, 3928, 3367, 3249, 2414, 3439, 3368, 
         3657, 3620, 3621, 3948, 3547, 3577, 3369, 3574, 3370, 3578, 3548, 
         3623, 3949, 3534, 3579, 3318, 3635, 3671, 3670, 3634, 3472, 3979, 
         3661, 3389, 3305, 3316, 3747, 3915, 3317}], 
        Line3DBox[{3251, 3743, 3898, 3250, 3744, 3899, 3252, 3445, 3950, 3756,
          3253, 3371, 3929, 3372, 3254, 3750, 3930, 3442, 3550, 3549, 3255, 
         3551, 3658, 3978, 3769, 3443, 3553, 3622, 3552, 3256, 2574, 3580, 
         3535, 3444, 3474, 3624, 3473, 3257, 3922, 3390, 3391, 3319, 3321, 
         3916, 3320}], 
        Line3DBox[{3262, 3910, 3291, 3260, 3450, 3452, 3952, 3292, 3451, 3374,
          3454, 3764, 3961, 3293, 3453, 3558, 3584, 3559, 3455, 3519, 3627, 
         3294, 3583, 3563, 3586, 3953, 3771, 3456, 3520, 3628, 3295, 3585, 
         3477, 3917, 3759, 3324, 3375, 3296, 3347, 3924, 3348}], 
        Line3DBox[{3268, 3457, 3459, 3746, 3954, 3458, 3376, 3461, 3521, 3962,
          3297, 3460, 3564, 3588, 3565, 3462, 3932, 3522, 3629, 3298, 3587, 
         3566, 3590, 3567, 3463, 3523, 3630, 3299, 3589, 3478, 3479, 3956, 
         3325, 3377, 3300, 3349, 3925, 3350, 3306}], 
        Line3DBox[{3269, 3378, 3465, 3524, 3525, 3955, 3464, 3568, 3379, 3593,
          3526, 3591, 3527, 3466, 3569, 3592, 3380, 3596, 3969, 3528, 3594, 
         3529, 3467, 3480, 3595, 3326, 3327, 3381, 3382, 3351, 3352, 3911, 
         3307}], 
        Line3DBox[{3270, 3570, 3383, 3599, 3530, 3597, 3970, 3765, 3468, 3571,
          3598, 3384, 3603, 3531, 3601, 3532, 3469, 3481, 3602, 3328, 3329, 
         3752, 3933, 3385, 3353, 3354, 3912, 3308}], 
        Line3DBox[{3302, 3935, 3398, 3344, 3343, 3360, 3484, 3359, 3973, 3633,
          3669, 3668, 3573, 3471, 3426, 3518, 3655, 3960, 3763, 3427, 3358, 
         3544, 3424, 3943, 3738, 3425, 3357, 3423, 3942, 3737, 3422, 3907, 
         3231, 3289, 3417, 3906, 3666, 3288, 3416, 3905, 3665, 3287, 3502, 
         3957, 3755, 3664, 3286, 3501, 3415, 3653, 2301, 3500, 3414, 3654, 
         3651, 3977, 3736, 3499, 3413, 3652, 3650, 3976, 3735, 3498, 3412, 
         3617, 3667}], 
        Line3DBox[{1624, 2442, 1079, 991, 1222, 2534, 955, 1364, 1135, 2487, 
         1363, 1029, 1133, 2485, 1028, 2483, 1131, 1130, 2540, 1245, 1129, 
         3909, 3236, 1117, 3908, 3235, 1116, 3234, 3889, 1115, 3233, 3888, 
         1114, 3232, 3887, 1112, 1126}], 
        Line3DBox[{3304, 3914, 3313, 3303, 3388, 3660, 3758, 3894, 3485, 3315,
          3436, 3314, 3576, 3533, 3243, 3966, 3546, 3575, 3366, 3435, 3365, 
         3545, 3946, 3619, 3618, 3364, 3434, 3363, 3945, 3242, 3362, 3361, 
         3944, 3241, 3438, 2488, 3240, 3893, 3739, 3239, 3892, 3433, 3505, 
         3432, 3238, 3891, 3431, 3504, 3430, 3237, 3890, 3429, 3503, 3428, 
         3656, 3437}], 
        Line3DBox[{3310, 3918, 3330, 3309, 3393, 3271, 3482, 3902, 3332, 3604,
          3331, 3606, 3537, 3631, 3772, 3901, 3605, 3387, 3600, 3386, 3607, 
         3572, 3470}], 
        Line3DBox[{3334, 3335, 3919, 3333, 3311, 3394, 3272, 3972, 3632, 3337,
          3659, 3336, 3539, 3538, 3355}], 
        Line3DBox[{3339, 3920, 3340, 3338, 3396, 3395, 3397}], 
        Line3DBox[{3346, 3923, 3345, 3290, 3258, 3323, 3322, 3392, 3934, 3753,
          3267, 3475, 3626, 3476, 3448, 3766, 3968, 3582, 3536, 3266, 3561, 
         3625, 3562, 3447, 3770, 3967, 3581, 3560, 3265, 3556, 3557, 3446, 
         3555, 3554, 3264, 3751, 3931, 3373, 3263, 3757, 3951, 3449, 3259, 
         3900, 3745, 3261}]}, {
        GrayLevel[0.2], 
        Line3DBox[{1640, 1716, 3775, 1641, 1724, 3780, 1658, 1730, 3784, 1668,
          1917, 3836, 1918, 1919, 1840, 3823, 1841, 1932, 1847, 1941, 2171, 
         2170, 2172, 3881, 2091, 2092, 1949, 2094, 2129, 2093, 3868, 2131, 
         2054, 2156, 2055, 1956, 1980, 2132, 1979, 3849, 2202, 2179, 1872, 
         2180, 1873, 1817, 1819, 3814, 1818}], 
        Line3DBox[{1642, 1717, 3776, 1644, 1725, 3781, 1659, 1907, 3835, 1909,
          1910, 1834, 3822, 1836, 1921, 1842, 3824, 1931, 2076, 2075, 2124, 
         2082, 3865, 2151, 2083, 1943, 2087, 2126, 2086, 2128, 2052, 2153, 
         2053, 1951, 1978, 2130, 1977, 3848, 1788, 1870, 1871, 1814, 1816, 
         3813, 1815}], 
        Line3DBox[{1646, 3793, 1719, 1647, 1898, 1899, 3831, 1727, 1661, 1830,
          1911, 3819, 2038, 1732, 1670, 2068, 2145, 2069, 3873, 1922, 2043, 
         2121, 1738, 1679, 2077, 2150, 3840, 2078, 1934, 2046, 2125, 1743, 
         1687, 1973, 3811, 1974, 1812, 1848, 1747, 1693, 3806, 1787}], 
        Line3DBox[{1648, 1887, 1888, 1720, 3829, 1649, 1827, 1900, 3818, 2033,
          1728, 1662, 2063, 2143, 2064, 1912, 3820, 2039, 2116, 1733, 1671, 
         2070, 2146, 2071, 3874, 1923, 2044, 2122, 1739, 1680, 1971, 1972, 
         3847, 1811, 1843, 1744, 1688, 3805, 1786, 1768}], 
        Line3DBox[{1650, 1823, 1889, 2029, 3859, 2030, 1651, 2061, 1828, 2108,
          2034, 3860, 2109, 2035, 2141, 2065, 2110, 1831, 2117, 3871, 2040, 
         2118, 2041, 2144, 1970, 2119, 1784, 3846, 1809, 1837, 1838, 1681, 
         1785, 3797, 1767}], 
        Line3DBox[{1652, 1866, 1867, 1801, 1803, 3808, 1802}], 
        Line3DBox[{1766, 1810, 3804, 1765, 1782, 1783, 1672, 1833, 3821, 1832,
          1807, 1781, 2114, 1969, 2142, 2037, 2113, 3861, 2036, 2111, 1829, 
         2103, 2062, 2138, 2032, 3870, 2102, 2031, 2100, 1824, 2058, 1890}], 
        Line3DBox[CompressedData["
1:eJwVzzFLgmEUxfHbkDYlNQUtuobg0hKNEdSaEM3hmm6BW0tZ1lZTBQWBmEqB
ox+gJQIXI3hJGoSGoKXJrd87/DnPOefeC09hv7ZTnYmIMn4zEbvZiGQ+Ikuf
+W36jS1MkMtFZOgPvtAzczsXcYM/e0+yTdzxj7oxZu30ZF20+DdzCW3xD7So
75jvpjto4z69oVvUjegnv4YV3bLsWnbhfY5Evop3dwv8pa5Jz/AhXzJfSpVv
6k5pAyNZXldP/8cf6U7oMaZuDeUH2OAPdQO88hWsyyr8gv0+fZHt4Upewz+W
EjDD
         "]], 
        Line3DBox[{1789, 1697, 1751, 3825, 1852, 1813, 1976, 3812, 1975, 1692,
          1746, 2127, 2047, 1944, 2085, 2152, 3876, 2084, 1686, 1742, 2123, 
         2045, 1933, 2074, 3839, 2149, 2073, 1678, 1737, 2042, 1920, 3837, 
         1835, 1669, 1731, 3834, 1908, 1660, 1726, 3794, 1645, 1718, 3792, 
         1643}], 
        Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/E3g7uJi0EZHOmK5J+xKCMml2Pxa/DrusXkV37cYlBKKTEa
5RikpG6Q4stAyGSQ0eM7PHu9P6/nq2/f7pHJwVJDRAwjm4lImiO+5GlTxCtq
7kt04jOF/5YfOOFf8O7OtUS8yWPvBI92R/IJBa6UjZjAYerwwyf2Zd0KDnQD
dg9y2fuZK8otjGNf38jX5aL3Aqo2fXITvejgq/w95r3nsGbTJTfQz+fTPX+L
WfcMKjY93Jh7HaNY5a9R59q5Nl0rlnQX+PP/d9yebhfTunP86m/0O7rt9Fu6
M0y5h/RX+AeGxjgy
         "]], 
        Line3DBox[{1805, 1806, 3809, 1804, 1762, 1868, 1777, 3879, 2162, 1776,
          2163, 1775, 2057, 2050, 2140}], 
        Line3DBox[{1882, 2161, 1881, 1991, 1715, 3878, 1637, 2164, 1893, 1996,
          1723, 3880, 1655, 2165, 1902, 2001, 2208, 2210, 2209, 1665, 1914, 
         3853, 2006, 1735, 1675, 3795, 1925, 2009, 1741, 1684, 3799, 1936, 
         2211, 2213, 2215, 2214, 1691, 3801, 1946, 1750, 3786, 1696, 1953, 
         1753, 3843, 1700, 1857, 1959, 1756, 3844, 1703, 2099, 1860, 1965, 
         2048, 3862, 2201, 2049, 1706, 1967, 2018, 2019, 1796, 1985, 3851, 
         1862, 1986, 1863, 1709, 1797, 1877, 3828, 1773}], 
        Line3DBox[{2139, 2059, 2104, 1825, 2101, 1826, 2105, 3777, 2060, 1891,
          2051, 2106, 1778, 2112, 1779, 3782, 1968, 1780, 1869, 1763, 1808, 
         3810, 1764}], 
        Line3DBox[{2190, 2136, 1883, 1992, 1884, 3773, 1638, 1894, 1997, 1895,
          3778, 1656, 1903, 2002, 1904, 3783, 1666, 1915, 2007, 1916, 1676, 
         3796, 1926, 2010, 1927, 1685, 3800, 1937, 2212, 1938, 2012, 3854, 
         1939, 1940, 3787, 1948, 1853, 1854, 3788, 1955, 2097, 1858, 1960, 
         1859, 2135, 3790, 2098, 1962, 2205, 2206, 2017, 1793, 2189, 1794, 
         3850, 1984, 1983, 1795, 1875, 1876, 1771, 1821, 3816, 1772}], 
        Line3DBox[{2191, 2137, 1885, 1993, 1886, 3774, 1639, 1896, 1998, 1897,
          3779, 1657, 1905, 2003, 3852, 1906, 1667, 1736, 3785, 1677, 1928, 
         1929, 1930, 3838, 1845, 1846, 1942, 3841, 1850, 1947, 1851, 2175, 
         3882, 1950, 2095, 1855, 1954, 1856, 2133, 2096, 3869, 1957, 2056, 
         2134, 1790, 1961, 1791, 1982, 3791, 1981, 1792, 1874, 1769, 1820, 
         3815, 1770}], 
        Line3DBox[{2221, 2444, 2662, 2288, 3936, 2222, 1355, 2552, 2295, 2239,
          1535, 2675, 3977, 2300, 2245, 2466, 3888, 2305, 2253, 2477, 3891, 
         2310, 2262, 3896, 2316, 2269, 3899, 2320, 2274, 3951, 2508, 2509, 
         2323, 3952, 2277, 2424, 2514, 1282, 3962, 2280, 1341, 1415, 3591, 
         1286, 1486, 1350, 1433, 3601, 1289, 1492, 1218, 3902, 2386, 1059, 
         2285, 2366, 3919, 2342}], 
        Line3DBox[{2224, 1014, 3488, 1227, 1087, 3494, 1233, 1103, 3501, 1240,
          1116, 2255, 3893, 2312, 2264, 3947, 1146, 2271, 3929, 1039, 1157, 
         3446, 1044, 1394, 3455, 1168, 1395, 1049, 1412, 3463, 1179, 1413, 
         973, 3327, 974, 2339, 2385, 3912, 2340}], 
        Line3DBox[{2225, 2390, 2447, 2391, 3974, 2663, 2449, 2664, 2394, 2554,
          2395, 3963, 2581, 2536, 2710, 2457, 2696, 2458, 3957, 2539, 2468, 
         3908, 2469, 2256, 2488, 2489, 2265, 3928, 2412, 2496, 2413, 2498, 
         3930, 2417, 2504, 2418, 2615, 2597, 2505, 3967, 2600, 2616, 2422, 
         2620, 2423, 2622, 2601, 3953, 2511, 2577, 2623, 2361, 2627, 2362, 
         3956, 2530, 2363, 2438, 2337, 2383, 3911, 2338}], 
        Line3DBox[{2226, 2712, 2713, 2392, 2448, 2393, 2578, 3939, 2451, 2667,
          2396, 2555, 2397, 3964, 2582, 2537, 2711, 2459, 2697, 3905, 2460, 
         2247, 2479, 3909, 2480, 2257, 2408, 3944, 2490, 2409, 2492, 2414, 
         2497, 2415, 2683, 2682, 2500, 3978, 2598, 2612, 2419, 2614, 2420, 
         2618, 2599, 2507, 3968, 2576, 2619, 2358, 2621, 2359, 2529, 3917, 
         2360, 2437, 2336, 2380, 2382, 3925, 2381}], 
        Line3DBox[{2227, 2665, 2666, 2450, 2580, 2579, 3981, 2703, 2670, 2671,
          2556, 2584, 3965, 2583, 2538, 2461, 2698, 3906, 2462, 2248, 2481, 
         2540, 2482, 2484, 2410, 3945, 2491, 2681, 2680, 2494, 2593, 2639, 
         3948, 2594, 2499, 2596, 2611, 2595, 2613, 2574, 2641, 2575, 2506, 
         2528, 2617, 2527, 2357, 3934, 2435, 2436, 2377, 2379, 3924, 2378}], 
        Line3DBox[{2228, 2652, 2653, 2452, 2669, 3975, 2668, 2709, 2690, 2691,
          2557, 3903, 2454, 2240, 2470, 3907, 2472, 2249, 2403, 2483, 2405, 
         2486, 2587, 2638, 3946, 2588, 2493, 2592, 2609, 2591, 2610, 2572, 
         2640, 3949, 2573, 2501, 2526, 2525, 2355, 2433, 3922, 2434, 2374, 
         2376, 3923, 2375}], 
        Line3DBox[{2231, 2634, 2292, 3971, 2232, 2463, 2464, 2298, 3941, 2243,
          2678, 2400, 2679, 3960, 2558, 2559, 2637, 2521, 2352, 2534, 2406, 
         2650, 2407, 2260, 2353, 3914, 2334}], 
        Line3DBox[{2233, 2714, 2293, 3982, 2234, 2715, 2398, 2518, 2706, 3927,
          2707, 2708, 2520, 2349, 2533, 2401, 3973, 2649, 2402, 2475, 2351, 
         2350, 2332, 2442, 2333}], 
        Line3DBox[{2235, 2541, 2542, 3958, 2545, 2699, 2346, 2700, 2347, 2701,
          2648, 2519, 2348, 2432, 2330, 2441, 3935, 2331}], 
        Line3DBox[{2236, 2548, 2549, 2343, 2543, 2344, 2544, 3913, 2345, 2431,
          2329, 2439, 2440, 3904, 2371, 2370}], 
        Line3DBox[{2237, 2388, 2389, 2368, 2369, 2532, 3921, 2547, 2546}], 
        Line3DBox[{2335, 2354, 3915, 2267, 2314, 2411, 2372, 3894, 2523, 2684,
          2522, 2685, 2259, 2308, 2561, 2487, 2586, 2585, 2251, 2303, 3943, 
         2474, 2399, 2242, 2297, 3886, 2455, 2230, 3926, 2291, 2657, 2659, 
         2658, 2656}], 
        Line3DBox[{2535, 2443, 2660, 2287, 2220, 2704, 2705, 2551, 3959, 2294,
          2238, 2673, 2674, 2672, 3976, 2299, 2244, 2465, 3887, 2304, 2252, 
         2476, 3890, 2309, 2261, 3895, 2315, 2268, 3898, 2319, 2273, 3900, 
         2322, 3910, 2276, 2512, 2513, 3954, 2324, 2279, 2426, 2515, 2567, 
         3955, 2325, 2281, 2604, 2644, 2605, 2516, 3970, 2570, 2631, 2326, 
         2282, 2606, 2645, 2607, 3901, 2517, 2571, 2632, 2327, 2284, 2646, 
         3972, 2647, 2387, 2430, 2328, 2286, 3920, 2367}], 
        Line3DBox[{2651, 2654, 2655, 2453, 2633, 3940, 2290, 2229, 2693, 2694,
          2692, 3980, 2296, 2241, 2471, 2473, 3942, 2302, 2250, 2404, 2485, 
         2560, 2307, 2258, 2589, 3966, 2590, 2495, 2562, 2686, 2313, 2266, 
         2688, 2689, 2687, 3979, 2524, 2373, 2416, 2318, 2272, 3916, 2356}], 
        Line3DBox[{2661, 2702, 2445, 2550, 2289, 3937, 2223, 2608, 2446, 2553,
          2635, 3938, 2636, 2695, 2677, 2456, 2676, 2301, 2246, 2467, 3889, 
         2306, 2254, 2478, 3892, 2311, 2263, 3897, 2317, 2270, 3950, 2502, 
         2503, 2321, 2275, 3931, 2421, 2510, 2563, 2564, 3961, 2278, 2602, 
         2425, 2624, 2565, 2625, 3932, 2566, 2642, 2603, 2626, 2427, 2628, 
         2568, 3969, 2629, 2569, 2643, 2531, 2630, 2364, 2384, 3933, 2428, 
         2429, 2283, 2365, 3918, 2341}]}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1: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
KqlodeHi3YJfdRDnzTNvfo+GApPvnnFaIiPWiTNeVqgVvrsV/PGmrxdzHboz
9+ivFfu3Hn0HVZAl47bn+ysa+hNoPP/mEwX1O/W/zXRvAuWQ5KrCSPrn2xrx
/cEhKvpzTkvG5nw9UGRPrKvfGYWiBn/qd/aVgMll5bOKflMwae1c18aVia46
+jN+6nkPfWeeJY41ToFiQMrmlR2F8LjkynC69QTKLfp9qze+HUSZxizd8uug
brnfV559HBVlpjyNf9MFzcS9SfeIe5OSiXuTpoj5L6f/a/6LdWPr1hWXKHC1
OZDTPJiEMo7HqjjR9z19Fs3fJJKHQP3XvX2Zeq3I3l9nS0XqIMgS90NOEPdD
1hD3Q4YRc15qS1AGnvOySMx5MeX/EbCqJwVtNLzC+0m5CW4YG2qWvpqE6lnO
pxtKyoCpq9Qsw6IPVJV/njIOHoPmTZ971wxmo83aJ7cdb6W/Xy92bOysnwRv
Yn3LJNY3b2J9O0usY8zEOmZPrGNC/7Xf3EzsN+/ptBlu2FMHvB/G3PhCSaBT
8MbTV2sU2EfcbwTTv0f955WHKsoG4Pl58uGpefr+yniD8VbyAGJzTHK2M+xC
z2MD246sGYIVb313dxwko8K5zlIeaxJSG7r+LSuWDOMaHNH3DMjQ90Y7dmEL
BUSKTkSdteqHx1bcs5Y9AyDyI3J2tJ++f5FoaPe7SIKfhflKTtf7oOq93mfF
PjJwXTA6FTZFhoNEXmRD5EWRRF5kWG/GxeRMhmeTUroqolQ43Fz/MV6gB85u
tneMKx2E1sahsY6rVKCGJSoI8/QC/1UxNtwfJZvd8Ldfap1Q0Rjuk1r6P+5d
tLa6MD+2mYqSbvU4+c0MIo3Y8/wSn3sh4EG5qt90D2x++c4wiL5/TH4kd+Rc
Ihm2skTzLld3wpEvY8JnD1CgP+3l56UDVDAi5tH4EfNoDhPzaP4zdyaBmDvz
iJg7kxj6wnFkggwzpz775nHSYOj2fb0Xfu3g2PzYdotLJso55cRVH9MAcpdI
10+iSZBSnk84L9yKWOMtr0jHBcD1P0GrK6Qmoe3uKRHBkxSYXjfelkzPo5Km
i14uOrfCNXNWI1ulXpit4a+iiVNhg4+Q17tVZJg+tNAYG04Bw+Xt2y7Y0eBU
Z+fpoo/NcJdS+uWocieK3+Kj2ROdjBKFh8pb9SdAx+KiLMd9Ghqvvn5U3YmC
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
ntg7hlKYPzrMpJph3eyaH1w8vRAnJlbUmtYHTzu0P34pGoOe4TObbi3Uw2cb
u4/4vN4cE0dW7gcT8GamcyY5YQKuni/f1ve2F72DryoJu1uBlHZvfvOvSfBv
b/OW0GtGqcvty2s/dkDJnc51n3O74HXtR46dlmQou7ts8/atoyDQvSYic38h
2JxQ4v92uQ/ujPBsrUufBB3Vy2cO1Y+CJLfjaY0VZCilhWV96eyATakv6vX2
TUJ3l+T89d19YP51ZM7+XQ38EmHZnFw1Dq6uPKYKXUOQZfF9Kk+tAXbOKG65
s3YMbOS0bQqnyaD2XnOt864WkObcudz5/jgczN2+XbqXBPMzW/cHh1TBRAmp
qm7nGNhdndBiwfxoEcHurH136/5PfbUVUV99SkPmvFcEDWY8/f23c9Nh9/rs
9lMyLfCkkucdPt9z9StrR3zeZ8qFke/4nM9iz8qJA9j5lOY+aKyGreXU6xI/
sfO5y5DTdbs6FZKyBxYaRqlAzv9uaP+mFzwiQMf1NRk2y2laFF+jwa7g1nar
qiFoI+JOPETcaR8Rd/pPnZ45UaeXTdTprSDyQQpEPmgLkQ9qEs3kvIR9jooG
hwIato7uETlbhH2e/3CZqwkucyrBZRbrbnUW20iH4ssvP+rNU+GPB9uLi2/a
wP1/6sm7ifqfjNNZzWv0KJgOMFEO4h1Evx+LKo8lUeGcWd7GUzM09FHXqs5b
g4LOinEZXdfqBcUa+lL/nSR04AXLwZDhNjDQCr99yJYJtMMNH+evVaPNUifq
98tdheOtzj2SjlNgTXAex7X+cR6nCc7jz8P/uIcstv+4h9kE9zD/f/iDLgR/
8A8RL+I79i9eNH31X7yog8iXbSLyZVpEvixu6n4vaUMf/FrxVSfxKBWZf3kp
szmHiumbf9y9IYK7t5bg7p1w2xexUIFAPFz+WBL7ABSI3k9zws5xMRF/207E
3xSI+Fs5wWurIXhtM53/eG3jBDetk+CmrSG4aXd2vs+hh7wC01DDQI/PTNi1
ZdPkqZwWeE5iUUuMbIcnMuul+Y0x//A3M8zhSSNcOarfmmU9CB/vXj22xXAC
0pmea+4G14FGhL1s1/ZhuNaaZVd3awzOXhS/p7mtFl5z3hk7h71fuK1jN/7+
MYYrZ8Sw953hXzkgfa8SlmwThr0x/Xpkt0un7L02YO+evqR+the+kq9cyxuf
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
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {All, All, All}, 
     PlotRangePadding -> {Automatic, Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["f", "3"], "(", 
         RowBox[{"x", ",", "y"}], ")"}], 
       RowBox[{
         SubscriptBox["f", "8"], "(", 
         RowBox[{"x", ",", "y"}], ")"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.677168988163864*^9, 3.6772187288804913`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.677167058753948*^9, 3.677169247886022*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.677169246951078*^9, 3.677169246966139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "4"], "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["f", "7"], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}], "&&", 
       RowBox[{"y", "\[LessEqual]", 
        RowBox[{"1", "-", "x"}]}]}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677166971702824*^9, 3.67716697540735*^9}, {
  3.677168867880168*^9, 3.6771688681925573`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1: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
a9Vz/ab8NIoORCfOjJ/KPNb2+57qeWpTfhpFwyFvuqvnhU35aRTFR/78oJ6T
NeWnUWQ8qXZHPTdqyk+jMFJ7As34aRROVK+fGT+NovRRlb63GT+NIojouJvx
0ygqUvkrZvw0ijqEH2N+Uv/U/Qgpi8+q+8zBN/T7VN36wyaMiGW+AR+2z0+t
mfkG/PenA0LU8+b4js/FIuo3dZ8D+AZ8y+FRL9RzxOAb8EPPU7ao52rBN+DD
qV4D8w34MqLvxXwDfpTouDHfgK+h8peZb8C3EX6U+UbkbCLE0jv7lf9NMJOr
OB4vU7mKE5YkJ75mchUnvpDjaCpXcSKL5MTTTK7iRIAcX1O5ihNnqV4XM7mK
k3JyxUyu4qScnDOTqzgpJ8fM5CpO1CR8J/OHqlHPWy14ofTrOvMB7dqk8Zn1
E/h+rZ0sf8B7NKzzrO/0a8x34OO0ceF2AF82ZUOk8eM5/m5K31GAD8B/08ZR
gA/AHaj8fgE+AD9B+AYBPhA9db17vGrHknzRX9Tjq9kT7i/w2Ve/2qPeO4H+
Apd2g/sL3EbTC+4vcINmH7h9wBtrcsXf8RmoyQn3F3ikNu7cX/pdwW82/zRL
PReDfuHvPtBnJvcLuAuRe8j9Aj6XOpTC/QLeiPiYwP0C7kZ0orlfwJtR+UBu
N/B2hOv9InpK3DLqr+0H1HNAaD/6t5D4qfsP4NtIfnS7CVyz8xncfuCLiE4K
tx+4pncx3H7gVzQ7wO0nWMHbH7d/rp5vQjshX0OaZdVsdLOI2wk8pX7uI/W+
EbQTuOLULqr3ZqCdbM+ofDK3E3gO4aGm+qLgoqhN5d/yK3F7oN+O1P4X3B7g
S034aWT8ghnfgF+W/EF7Bqr/o+ALuqn/9w3XC/u66EvjDPVeGtQL/OXX47aq
96igXuDFhCea6pGCr682pfZI31pMH/4tnuIKPW4Ank247o8XqAQVfPKACfU8
EhowHcQXN4a2GNCuspleKPgP9ieHtghuIu12Vi/Ed51oHKpJu12k8X+wk8g4
QvFGL+DmkaFKJsz6uSxvJ1b3VOU20MzeFokx/5xS6o3jcvi7JlSvpUH7LJDt
dRJnSP63mOFuYgLFP5sM+5Tv6vkxUjNlfhZRVYuj9lO5fMlvHzHp35Iz1HOU
wMG/rtJffFT+XD23RuOu6HOrRVpcoenvUymPwcL2xtKz6rlO4BhPR5K3HRTX
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
96VRj4aESDxBL3/rN/cfY5wZR/kJ6YMmqOf7NDyZy9f6NGN7pZb+AjifO69b
+Z8u3X0lnsblxeYtk/5ujHPI+nvNM+R7zSjP76zFdJun7ktHeeCv5bvDGq6/
7xz6xOf6kkG5jKP8qT9D0wt/xT4K/T3iyP5tPKbGIT7X3yOe8UVQy4L+OJ+c
y/gaz7pzK+5H+XzG/ZdfOXP3KeLwAm7P6dI//Lm/Iujo79aJVefrRg1A+134
/qudVwMKB8YF87gDr9T87UxHEcPjDvzNji6Hl07X16n5/umLWUOyswJ5HPm+
tdLdLSL2X+BxBO7QfWTm6CbezH/g7+s9XzFqUQzzH3gj+U4x+Ay8+33rhv6/
ZTCfgVdsEJ6X+l0W85nvHf9qQOYxv0zmM/Aqp348HWFMZf7gHH/98DfV/jUG
Mn+An1v3e9SqkVHMH37nt4FoXbJiJPMH+P1j2r3c4A9w17YtL1R9eZb5Azxk
/KGwJRU8mA/Ah8p3h8EH4JeHNje2MCQzH4DbF9zrfr1OCvMBeEKLMbdOuscz
H+YMb0C456R2fzexCmA+4J46l6cte9y4aWQ+AG93IyHapVk48wF48c2fDfvd
9H0dwMvt9RtcWNmP+QA8fUytIRNGnGE+AH+/6oHr/leuzAfgr+T7wuAD8EdF
i/rfC45hPgBv3L1mPyvnCObDycBh/3ZR8Er9CmNvXb/F/eX3fEtPmj7tnB/3
F/jtjJ9jct8Fc3+Bf2E1fFTDCUHcX76nvOSUQ+o+UvQXeLV/K2f3nX7SgH4B
t5LvBaNfwFs2Wnng2Ql/7leZ36tMsVPwwyNWTg3eeI7bz+9+929UvXWru9x+
fp+3qk9so8gAbj/wcg/HPb1WwsjtB/4gt8fBguUe3H7gC4cUfhff9Ai3H3g/
+f4v2r/wY4x/oYLPSPq310uPndxO3F8Ru2Hr9AMVvbidwKP6tosfd9qP2wm8
do7xzaqRd7k9wINPRKyZlm3H7cG7vRZVtPcWUS/uRXnnU+D6tsCd6wV+Lf+n
y+r6F+oF3qRKQoNDZzyYP8AHzn/Z7ONx+CkXvo+6wduRFpOjXZg+cOPQllcP
7HJn+sBXdA36xzr1OtPn98MXTfi5Qe5ppo976rbPWHJy+5TLTB+48+8NJ38x
4yrTB5731Kn9gVdnmA7uWUp40Kv7mCZnmA7wS8OSQ4J/P810fEuH/3pcwb/c
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
Pzu+CWmDfCDsSbq4K3qHOjw/yHZDo/NQeIdYlAmxBz+TxR2yJ2liyLDWq9yS
zrC8XZDy1tpE3hJEHbIbyu/DEjPV81DAtXlxpnAke7Wd7eRksnsZovOMxRF3
f3Hk9mv3eWaIp2SHD3F/NfpZ4s7VTgfU96CBx1H5LBHdeeVKa8b1d5+by3ef
Qf+P78vtyfbIFNGH05slNl7G8Zvlvc5Tuyjzpq22s0s+DUY+x08Mkv6xzqC2
4z7fD4a84uB/bZOKb8SzPFco1uTqwZHezZptimMc5a903vL7HMt4lvOZUj6n
tbcdpJ+HVXA5nwq/5lxdx7OEg5zfja/XaEWlPD2POlLOE38Z1tf6xypFjKPe
JmuPPhm44AXjuLd1+rpS0Q7lClmeUX5h57+uqufmgPM7zGFf9/hcj4AvrPR8
4PG5mCcWMD7523WO39XOYj4nTFzbcbAST9c5eazlMU89324sfnlkoXp/7eaW
F9T90uCbm4wrNnh1PzQ7Pob501jqXec473bquWDgZ+Q87sSwp/8cYFx/r/lZ
hw/DGpR4wnwAPnvHn3/23fyE+ws8+NbU8rpe5zP+4++BNR1CH3C/NDxAXPWO
Gj70kp5PHhd7s1idD/rdbfZ6YFU9nxzjVNQxTbEPv7jPrTzaSj/fvV3GP2WW
van6+bnmgWSXgoUN+WvgaXJeGSB8C0bf3VZGzxu7yPiqocl8OU3i4eJ4Sv76
0P64x0Z/97nyxw0bxvhg3VN/93l0tY5lv7/7kPkGPI7yAJif+sl+RYlvn/fd
ou4nR3+19keLFIof9PURfCZX7/hWfd8Z3zOauA1RP3vbTzbqeLKch0aJojE3
XA95Y16WLMbJeWjDqCs2Odducn+1+Xik2Pdz5vsNM8MZrybns9d/blLc7VQw
8w1+ebp8JxrlkUe9tL5+zxrXg5hvKF9334K945ISmG/AYyn/oO+P1/LP8SJq
Wo9Gul6Hyv4miPSCgL9qz9flWbPDCWI0HVD3ZfwE9StBNJ3XaaiOJ0v7Hy82
BjfvrN6PBFzrb6KYsaZf9tm1N7hfiDfcOnf7+MsDI5dH3jV4md8Vw9GrzB+U
ry/fjwYdlPchOdTjFpT/i/Ib+vkWrb/JYsn9TneKbfV8stavZJG1MXLbpaq6
/Gv+K0W8cxtpq5/Tj5HjniJCyU4CT5B8SxaXkg42TGp0gnGNDyniPPmjI8w3
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
pY7JuGRJe5soKq0rk7cuM4THfQX533zxwVWVf32+rI3LQ/GQ5kdYB0ee9qE4
Zp9zV8dd5PtiMWJgyeIhXfwDWG7xPtHzHvXDRq7Ucc1PJYrQ7d/6PuK414Xf
jbIJ6N/932k6rslnitjdwHFy1Q4GxmE3Uu3Txg4+6cvyr62nPxAZVVeNUc/b
Atf80QPRv0qHCjruIvGHYlfrl71nlvNhnN+tdmzb7dQyb6ajrZs/FFu3Lnqp
ns8F/p7WHx+KZ5Tn1Nv/id7RyxTbuv7U9PYjD8bxXlLitfV1Xw7W41jNbmeK
X1/H1vEsvMP4ROJPpmhM+bc7TEfDH4s/yZ7r+wHwflQ82XMd96b3+HJEWbKr
1xivRfzMFSXJjiF+099bHBxTMrnnB3eWT8Tn8+/ELv7QEu8t5bN+fT/Ut3Ff
2+csh2dkvq4ayWES49PJH0WLj7dG/Vk/NJFx2KXttdt6RiXcZ3nDu4TfbXDd
+K21Pr8AXk6+bwg6wC+TfkUxHbxLeL3Mg1cx4/yYDvCp8r1ClEd/x9cpHfp6
u85/zC/GfTv2ys9TdT+C+cJY8su6X8B7faPJP+p2Hu8GniW/o+/TwDuAvcj+
n5J4jihXs9bRQUpcsXJ6y4zYCVjPyhZOcp/Sh6RKyep7f8CXXC9xU8Vvzd91
7nP8mNxvNvzuvLvqeUngdSZOndFKwSuMyNuh41liBsUh7qIX2Z/HjOdO/GKW
ms93K3V15uOULJaTkbK8O+Uh8Z5Whlgi9xu8Mtm3lia6yn1fAbRepue9kTeo
KN/jA95C2snBJvuvMqQfiRGzTPK9+nt816mdentgfzrJ9/hQHvjfJJ/6fie8
i9eB4sZDPF54Z82J4hNnxvF+3EmKB7AvOk3a53TxN42XC/OhHc1n08Wli8NK
WmS48Lg8o/Kxsjz4A7uXI54bb+5U330Drul1jvCi/KGOo52jKZ4Bjnxspvj5
qzMNbT7bt6nFz5miIeWlgYfyvLvBmoidZd/r+Vvgwym/rZfX4slM4Tx5+qF/
f9LzkJreZYmsLiPjJu31ZPwi5QkzxNT6C91XOt5h+pqdTBcn34T9rMgX41oe
OF0soHmojiMfeJ/WI1wZ1+rNEPPan4zQcRc+r9RueWJR72J9nmXxP//5cfn5
6vUh7/X8//8uH8rl1eNuUa/1fM7/Lp/w/+DJ/w+e9v/gGf8Prp/n6q9eF3oF
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
aOtmbjzuI6V/SfrHdL5pJ/GyJvNQF5aTaep9evs/2w8m8RG0vqDf2wD8obos
tv2OWX+dxD/q+zIvPc3666TlD9n/6u/T0rPb47HOor8Ld1q+ywN5A669h4t9
Efq7PNp7QNg3qL/Ls4cuioXdy2V8qFn8CVx7P0hfL8Y8aJCad5qm7w8Erlr/
t9/o+wOBU35yR5TZ+Ppo9zQODTUbXx9xit7zDWL+ACd38bV+PwbwhfK9HvAH
uPYcqJ4HBk73Wi/U97dg/rVavT6/ob6PF3jW+mOeZc7o/QLuMHb0jnf9dT8O
3LxfwMup7R+h9ws43Q88Rt/faC3jpc3q/edJ+v7MRRL/e+GFn6d20/flDpR5
b7qnvau+D7NYxg+i0/1t+r5iPX9Jzx18to93v4wTqqp5yHUR3E580nNMC3T7
M0D6hSx1OfQY7E++qCLr76CGCbzvNE3G5w9EGL2j5Mp0bKRf20HxPNa5wDfz
eB7xhrsgd/cxivtrJeO0D2q85KyPV3NZ/o56/fkB/V6jkvLv6H7Upvq9cIMk
PzW50u3VY+kv9prFpSWlvJjHn68JuCFOk32+y7hRxs/WqoCGeTA+QNZLy/Ke
evy2TI57EDlmXf53Snvrb7JOmiHjaidx2cxu1JJ8yD9XfUyTT7cZHy35Vp/e
q/JmOntN8mZ63Pj4f+pdtrgg43Nb+e4M8GCJbzfBYU8CRAwtV8Yxbi3jzCB1
uXuyvk8yTZa/pPJz4j0erwcSJzO2MIz5Bj9rr63/sr8+Jfk/T3UA0125nchD
ZpisN+WI+7L8H+oy0eKLjGfI8T1C4ws7nCvcJP/nmtjVXLFJjtcy+V4h+gU/
qNnhezwu0+S4j6L72H2YjsX//Ke/KzGK3qHQ45M5Ur82ynclgC+S+FATXH+f
nezwQvN5caYIUc1noR7vYT2C9Ib3wYZyPqeeGhat1+fRmv5miTHqfeCX9PuN
UZ6W03s8ZvrAW9F9+yFcHnmenjGGow0y9fuygNO7Kp3yub//m2/Z/w+e8//i
8CPau3WuLA+dpH79pqY3mrvw+CKu26Ouvw/S86KI01qr21gm6flP8Lmcen9v
6CMzPjwSLRX3W9IynHHEw8XTlYD+KPifLPO0GWKPSX7Yhfk5Sg3HvJ4y3lSO
y3A1j9Q4h3HkQ+qr6zhtn5rhmcJJfc8lNovbAzoz1TBnbziX1+LPbPGI/Gme
WXueCJoeFQPPkPPB++K0yXxKf0/2K3n/P/Bkqe+BZvkTe1m+ikn5ZG5/I3n/
P9rfRI5j8REl0OwFf50s8x4eIsIk/5AmWsnyXdRWxvkx/pO0q5fUBNMKff/n
MWkHos3sdryUK2sTu5os26Pf5w/6D6Xdo3Tdet1fzJP2k+7HjjSyfCI+30Dr
/vq+I8hzP7M8BnDKtzw7xuWdJJ31JnZMv+d/rQmewXHOKJN9R/r9+a/vKyPg
rfujRNmvL+jibx/Gl8p+/fBDd8U0eXG9Mt7o4U73h1+7g/IdZf7H9R/t/nng
FWV+NUFdlg/GOZpsni+UkvfJA4+T+GUTPEdUlfnesWe1+8/Bt2pSHrR3B3C/
qB+/GzaF6Oj7OQfJeeIps3niPim3X5rIrX7/+WCTvId+/7npPjT9fnLtnQg9
fjgkcUcz/+4mx2Ws2T4x0DGPB3Bv+d/y3nLgA2S/Dpr1q4SUay1uwjnHfFFV
jtfFQdp7qcAxX1Ovq++6YKcB+7a1313E5skt773t6uCL+xGAP/Id5HnjvK8B
9wIA/+3DrT7fVXbl/eJcvuzsAnVfE/ZfAqf1nA2PhGm9fuJZ3Vo/3H9kZ1av
nyh43KH7RIX/pvX6iXanbkT9vfC6Wb1+on7ig/nqvilT+qFidEqZ0+5bD5jR
DxVv/6+u846L4vj/P0ajJhoTey+JhmiiRo01ljdJ7MZoTGKPLfbeKwr2GkXs
vaFYUNeGqMgeYDlF8MRTTz30OM8TEMREYy/fe8/Oe4eZz+/HPzx4uc7OzM7u
vGfm/X6+85c+nf9slFK+FXa2eFLy7/i9SvlWmLH+wTv0v5LLt0H06v/yrqgR
EkPxG6RXC5iZMHXTeV2+rw3y1PQLOGY/ptzXBhWy6verUjJcua8NUno/XY75
f+X+tPFzzmSTF0b6rWEbzmDeduJ/kb6z76sCuRMsSv3t0Ga3NcW9+2+l/nZ4
kT1zPO4byPW3Q+HfHsT19RxW6m+HNSunRpwaukOpvx3gy1xf4r6ZXE87zLXn
vYLnnsShM3QHPL/2/Nsv7sfqxJUjvdvZRwNwf0OupwPOb5lVHvcx5Ho6oMnj
jYvLpR1U6umAipMDs3YGblHq6YBm18qOxv06uZ+JKxBncgFID3+8IxTPf+X6
OyFvy24trvi+J3I/u+Bkqb7tS4fOjZHb5YTfvvvwIn5P5HY54Zstef+u6Ptu
yLoLLr7Ld3dWrRNKe53Q5fthyyfk26voLhg9p9GaJP8wpR+c8On53LPsldcq
/eCEd73rrUY7X+4HJ98/PKSMHzcsXtGs/PW7s5T3yw1FN336fYclG5V+8EDP
QuWyQmsEK+PNAx8HFs+LfrDy9V7oWuTJlC3PpirXe6Fl41J7u/26Tbk+DV7l
O1C6dOgEpZ8zQGvUq1iuhBBdfl6ZcMdzr1vPY4t14tsaugZXxqxtiX5xxI0l
/V/9wmv0WyMeK+mheWeWXhIfqxMXlfR+Y39JjXkbxuM2hd/Q2spb66N/FPFA
SY8a0yUY/YiI70n6kx4bf0S/IOJ4kj7sUPRk9PMhLifpAwL3jVq7wgWl/xj2
7YYRWaYekKT5lh0xZlyxoVsgbGbpF+j/RvHApFuKxp7rdGyxGWdF+vrDtuP5
z1rNOATSG/716zD0UyKuKOlRl9tmZAfcgaWlGjfqcVuc7/WGhLOHdRG3bOhW
mNl99Ab0u6N4Y9IjUhIjX2+bqRPvlfRP/rzu3BIUB7mdH/9Utk2aqVd4XWF2
s0eXTP6Oodugw9wTL5FD0k8aDy4o4or7updv3tktjR8XdNhWtibO15WU9/Ey
fx8vKe9dEH/vFkjvnQs8xReXyO2zw5tL750LAq9tmoz29mjOcTZ0N6T+ezoB
+bHf8jgZ0vvVLvQH+meGcw4U6Z9UXvtd48+O6cT5JX3sIGvDHy9u04m3S3qv
nuOfvdg2Blq03PhTG3N8+ta7f052Le8fZPKXDd0D3X9u6kb/T+Iakz58ypEj
1+Zr+u+c30R68dnbbqW22aBXXDF3nRhXHli15Od9ldM6mBxkQ/fC0dGPK0zd
FK7vHzy6YgNzPHihsGNPv9bOpTrxT2n8bO8b93HFaxV04qXSc0/e87ZEvu/L
6Jl/ZA3LmSela5E6N56lFNeJu0r66Xbjyq/MLq53+y2mRvII8ne2w+iBG2t9
uHC3yXUl/QrnxJ7vuCw76LaYF95XT6s69YJmcmOpvYP+mX2idekbMU7OmaV2
dazTI+nFjO0xxKU19DQI3/bn7qF3Ljbr/eG19DbH6Tw/A1a2Gfgm/OZUnbi3
pB/gnNjqz2q7czkpPj4Tyi/1T28waZbynXwEY3dMu1cy9I8Y4i0augadsvt/
96T5VZPXQ/3csnndUTFLk01+KPVzk4vzbqOfksl55HruovkD0T+EuKXUz/7F
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
+TfsHKkp49YLgxqtKIX+2/I+hhsG9fqoNvLuPMxutJp6szKWaOQ9FpP8E5wQ
UvLgjn9HHVDOPV2g918xQ3Aa6cdn5yPt6/FFnTgahm4FC/O7PKAT/4v0Zoy3
tk0n/05qr3YLAxTP6+SXSfpjhhM7o1O8HOlIf0ibHMevF359Y1m8s0Wn+FXS
B7IAqlM6xVGQnrYfyWeROsXdkT6UcZYO6RSHSfotFve3R2mvDXTGX9qitMvO
45H3KP1mh8HM4XWf0l47zGXu4buU9tohlMXP7lDaa4ftnE8ot9duxOP/tUlp
rx0CjThfpb12zm0LVdprh8eFMZBvrtJeO9gZr2ac0l4HVET/8+8p7pJ+HFD/
amWtYLVYkNvrABvyTL44CXJ7HRBs8M1Abq+D8/oOgdxeB3RH9+F1ESC31wFI
GcN8UnK7HLCZ9edskOvv5DyJq0r9ncZ4+Py6Un8nxGyctea30Tal/k64xeLg
EpT6O434+gNnlfo74Sj6b+e1KPV3wo/Y3NNHQX5eTmiEcRYp2+HYBCOuzNBd
0OoEtnSl0i6XyeWS28U5EqZ9TD9umIP93zZNaa/L5ITJ7XVxv3670l7ibSQp
7XURT09prwuqcn9zuT4eI45+fJZyXy/gaNt89KrS3jQ46Hu6BUIeKPVPgw0s
0O62cn2Gb11QulPMA7dyfQZY8LnMS1Suz4S3GM5r5mumn0xg2JIC6SbXz9A1
8CA/7c05/r4IP8aPEDuXeUYnLh7piRiXVCOeXy/8GFlYc+lY/r4LP8a3GI72
UYxOcTWk13J2eHLddUInPhrpoRieteyQTrwz0hdinGziXp34ZaQ/xPoHbteJ
R0b6FuaIv1If1ubW6rAc/o0Fsj+tOGz9CJ24aYZugWjEqPQ9qBMHjfQRjEO7
XXcz/pfwdwq4MaF37+z5Oo07Q7fy9zReJ64c6QZXVte/anN7ZE7/w6j9IQf/
nbRSp/glQ7dBV4zbsh7VW7U9nBVpvl+YR77HJ/napzbLz9tj6G5owzl17aXn
6zY4t+dcJj+R9GHjmwxpseqmyR8kfRDG7ydeMbl+pB9HvMSBeHCGHq2R0w+w
9OgGyz4su5nbxcIPsAfn2nVk9RF+gDtZvPBtk29I+gYM7xhog4QR7+9G5jgn
Snp4/9KGuUc570n4AY7jXLs/QiNT6ufwA6y/PLJtYe2syUej5/WsxJU3Be7c
akY8Ner/64XGFP6j6a1mGKeU069vAWKenUN14riRXoHz4lh4Sw6/PoNPNsPk
x1H962/RtiUsza8Tb47q2btf/qL34VOd+HSGngYrS2BNiuo1UM/h1zfH97o8
zjjGeVjCr68658IVwz9z+PX5jNv3o44kQEt8gduJc7qOvnn24Eoar/TzCGJw
nLS8Y3KX/Pj4ymTz6WydOE3Un4HsvQjViUdG/TmT8TPX6zLvyQrLGYdzDfsO
5PTfq4oB+be76xT/RvpFfl/io5FeifEhJ+sGR1X47zWaOHJ8k7N9TI4V6TM4
x68Kj9Mj/Sd2vzUmx410G3uOS9l8siGHv19XxKc1XGrytkhP5Lw44hyR/iYs
6tGKL+eA/F67oCarR5jJ+SK9HNeJZ2HobtjEKn7E5GXQuNrJ3heLycWjcTUX
3+vi9Ld4LwweyAWTx0fjbRu3KyIV/W+uMzmHf6Dl76VftffuhB487o707Ww+
SoHuPJ6W9N8xjOxjhzGv5vAP7MD5t8R3I30l5xmafDeuf/T+MePUuXmcEukZ
bL67D4d4XDHptXGctEgx+XSG/gimrz+et/TKCxCM5eTwD7zNuXbEpyP90NBz
7Z9/Esu5eGIeuXM6b7j25HeduHikH/aGW6fUudaM+L9+vB3eVdbne7Mm6cQR
NnQrVH5+ZPTWSXN04veRnvltqfP+bacp9rBv/Jaaei4i6EEM8eNIH7x2zNj3
sa9iZLvFDaMnbMuqHbPI5BuSXuS/Nr83Dv9Asc89MGPuB30TZ4cJTiLXu76a
wvhvsh3lhbiTjmKTDh4zOYykny20f9/Z9AjFLkrj8fTxJueR9MFcJ06Zodsh
g9n5q3TilJGeiLzoFaG8/mJ/piOL716my++jHUqw78YCnbhpfrx9Uw0+sMk7
I30d41dvM3lnpBvrx80m983QffY24lWeWUzOLz2XSvy9bSi9L14IQe7KEsF7
In0qe3/vmNw66h/WX1mZJg+LdOP7cM/k2Rl6BlRAbsy/GRAqjecMaM7exzRu
d4v5y8Hnr1Ae52y2C+f9X7aaXBvSGyFvbdFq/t0Q5Zzh5RA3zdA1QOwZ5luv
ItnRGvwwMHUG5gcnTgHpAzFefvc5nfhuhm6B/ey7t0eZjzRoy3nFRnyv8K/D
VSjmZ28p9b8V+vpmTcwzPlzqfyu0wrj+Nkl8XCWZ+mA2r9F+guAHhzAe4xm9
lTRufe+1Ee+sjE8rDGflnFTmOyusYOUc1SlOm/RxBn9emU8t8Ddbh+7i/Sn8
uxDXdL3SRp04VqR/ysb/Wl2eXxwGR33vbmWecnCu/lYzfpv0rey9WG5ywUif
x9azR00uGOlLjbwGJhebxg/iBGYOuMjvK/Z5OrKF0zmTF0blGNz7g8o86ITp
iE+7FafMm064xso/qbTLCb3RrK5+AK5FVlnuiczhz39g5I2rn483471JP8zW
vzYzjtfQiRco/AhJN57TFaWetD69oNTTBYYdGaOsg13Qif3/lSZHj/S3fF38
o/R+uaEJ7mOkPzDj3un6w7xceX53w58sTtmp1N8NP7N1hF2pvxvGsvXCBZPf
Z+heY7/os0dmHLuhe6AJPuBc95X7emAIri/M/PI2Uzc42LReFn4RE/C2+bOU
8r3QDfeRZqvle2EyYrFe31bKSTN4kFmZip4BXXHbbEi6Un4a5xncU/QMmIr1
sd5SysmEH3A7rbTKv8gwuDdB2SDbAxq4EBd3cblOvF3S27G4+xC+rhTvXTS3
S2U71gnX2Ty4weSXkV6DfZ93mfwy0i+z6/eZvEsaJy24/SnbA27og1iCjbEm
l430tmPHODAvrTE/ivVCf1b/YF21q8/x+hM/gu77HZ8P2irvxQH+XsjvmRvG
sfseVPpfg6wJPvs//YIuPy/N4H3dPK/L40QDVk0zr7TN1Cl+Xx7/GsxCnkNE
rPL91KAjA3Hqyvpd4/y0U7r8/dTAyxbqkTrxQUivzfbNDuvEVSH9OW5Dztiv
fP81WMq4izt1uR8swHDX25KVfrBAJuNqXlH6wQJz2IZ1ktIPFqiFeMjoBKUf
LHCb8fqsSj9YYD4DwZxV+sEC3xVAwEqc0g8WiEFOVOEYpR8sUOKfAiGYZ1nu
BwuMZFz9Q0p7rXATt9Xrqu21wg6WD8KmtNe33kcQSY784KRTHh+5vVbAWmJ+
bbm9VgiV+J9UjhM+w8c406p8l1yc73hDGbdu+BHxpZ29ynfGDSdwmu3mVq73
AFJLMD87cS6ofGMeOaDsB/rWN8j3SLUq+/mc75V8TtnP1wzuXNwZZT9fg9HI
SzkSp6wXNIP/E2ZR9vM1mMDys5xW1i8aWNg+5AllP1+Dgmy/8aiyn69BF8TK
JmnKeY0GP/o+wwt671HWUxrcZPv26jmOBRjW9/oVpR8ssAbzSvisEbkfLMCO
cTolKv1gMbiCX15U+sECtfE/vDin9IMFUtAcuxSv9IPF4LBtsSj9YIGhjOt4
UukHC8Rhvy0+qrTLCs1wH/5PtV1W+BQHyl+XlXZZDa5IgUtKu6xQF88vDluV
dlnhPO7DdD+rtMsKPXD454rTT0rrCyswvE3JZP0N53aRTnw84uuRHoDz5hCb
Tnw90j/EF+/FZZ14eaQvQTtz/SWd8q+QztIulbzI503BT2WcvaYXdGPfW8SJ
s3nhxDne/6K9a3E83D2rE3fP0J2wHrnBDwSHmsbbHfz+PN2t7INpEIXc8rBd
OnGozXHLJp6tfDwIvSHn+BG/j+5bmc3jkSa/j/Tx7DzxhMkFpnLYNnbCGf24
tH7RIADXWQ3O8Oebg7OOQEkz77OY77pxXt8tad7XoDGrv0WX1+kaFK9ccj7m
XyZOFum3WP9EKesgXz+uwgOP4zpxrEgvyOp/VFkfaTAFzwd3HNGJb0V6M1Yf
TVk3afDHE/zSH9CJS0jPtwJOXwFXdOLckR6P39XKl3X5u+qEWL91czGf6Uhp
vaMBm5ZnnuHzhbAf2PwbG8/Hmzg3qYN2y6R43q5rps7Ol312xQhpveOzAxn/
M1ZZx2kQgsvE2rpOfC7SzyO3cFOMsk+iQRwug/Kf0uX1hQYvcZk1/qSyT6LB
U5x+70Yq9psG3+CxZLtIZT9Wgy/Z+DmsizwBht6TjZ/DvD7ivKYIe75hurHP
LNbvD9k4Watvl9Y1VmDH79nJSv2dEMzG/x6Tm2/oLs4JO8N5lGL9NZivv+R+
cwE7pow8wTlKIt/sUXy+qedN/pShe+E0HuPcyTZ5WIaeBq/Y5/2xcs7oNvjD
53h+lxznjyf5+2ms78T68TVfP8rfbTfY8Zhad3Cutshnu4fV8waclt53N+zD
c3/rNTPfAOlNmf18WSnfA/dwO7/MTeWc0QMvcX/1WzffnxbxUB+y6rqguqKz
+t91Kf3gAY2d+yTw/a5EUze4T9dhoqI/YZxP9VzbC4kh/zbdYElV7BwvPEB/
iRbpJh+Q9Pto93ZPA9l+sEA95Pv1j+DzYKg53gIRgBWVrN+Q+ofOhe1Kfdww
4eNev8T2cJk8NdIbsX6+a/LUTJ2dm6eY+SGofNrHj1LGcyXev3J7PRCECfaS
H5g8Nem5VBJ5gEhn47NiplKOG97ifN3FY3JLSe+Hy0TvPZNbSvpf6K9y021y
SKX7BntNDql03yCvyR0z9Az4CvflPn5k8mcNnXi0m5X9EAffX96srH8d/Lxz
DX+/hH1Yns1H+xT70AKX2AS5hX9/xHcpmM0vO/j8K75L59k8vlqx36yQwuzD
04r9ZjV4etuIN0s/VoPrW+Wq8p138XPQ8/zcTezDDGT9f9XMP0c6467fTAa5
HDccZ+87jTP68RrjdvhjRU8z9ql83yu1P1vz/jS+88I+6cnm083cnhR55g1+
3iWTT0f6W86T/1oaV04IZPt1ycp6h74XTpOHSzrxU+8p1y/j18vzsu97iPky
7NdBrqcbmrD3LlHRNUCzDvOGy/XX4DrmaepqUewBzeSQy/2mwWdPERhNdo6w
Z35kdhfZM8I+Mew3sluE3diW2UXhynhzQG72ewMMHq+ty+lH8fRN3cKY587w
bxTz9cC0V57XcR6oInEzLNCg/8OemC+S8taTvqXrsnKYF4/yzZNuWXZtDua5
M8oX6/TNFVKO4vl+C4knYIVdf/8Yg3knDe6T8H8oXKBOX8yvR/meSU+ak/Qb
5ssz7iv2w/O/HzgZ898Z9xX74V2Xpg6e674Jw18qfhEhf98dF5HV7I0tZzyL
B8qm5x5VeJemL5fizdMgzRWQXvxRuF7zbsWBObkovx34fh7yiAy/dLEv12Rd
vXaYD8vQxfckJaX1l5hXK+xO6aCcvCC/UsNqT7xfXDe4N+Kc2i/gm2NTX96N
MeI0r5r1/PNSp36Yp8zgt4jz3P11e/bCfGe3B0w9x/J18fv6+XVKe7X+QYwR
/yLe01p5Jtsw340RRy/8u1qdmNhp4fKduk3hUPXhHCojLumGeX3clqIXMH/Q
EqkcN5Qd8qo45i3qxuI7xLpjXU3b0VoFkjivINGs5+tFxTKXn77A4/fFeUqd
hoPir584y+OJRD40mPJFZOlh5zkHIMnUp3/U8yzmK2kocaUccO31oOa4D2PE
xYvziDVds72XdZ2366qpR1Z0HWkdGqZrEhfLCanTF9xoXcS3rlHiiWbweKLW
Uv+4IZ9/rlYNr86HUtJ9PVBo8qo7A1J36W1rHh+QYq5zNbhfukXbVjeu8HqK
9W+x/tU6I2e+1pXqlwTXKwN2/lbzH1wP7mX1FP6oQzrcjF+ZfVY3uFgiD+Hu
iNN9m/vWa8ESH8wJ9VfWCTpd7rRuZc/ltKknDOs7HTnnhh+48Bf9+YOZXuRD
LlHi60vw+Pp0JQ5rJo/DckrluyGmzWdlkKdtk+rphSMbp4cjx/uk1K40uDm7
UV30WzbiR4Rf65X7t06g336wxEPwwrz2I1zDPzikG3H6wh5eWrBsq+N5D/P4
JnHetPDNR7k/iYvWqyp8tnjOZ5P9DTXoy/PkyusaC8zn+W3ldZOV590+oayP
rLCe5S2l9ZH4js3ieWnlfVEbHOP5suV9URtEb8eDz126Szp/sUM/5k+7X28n
2Wl2fs64Vx8p2Z92mMH8bHfrlAeIdLZdPWenvlWyGx1QpNKR0ZCoc/tLxJGd
4/lrKE8S6eNZu46DRbL3nFAJqzn9Gjxm9RffZxdbd6RDsrSP5IUJ7BznIUyV
9ou80B3tookek/9O48fGz3ceSnZCGizk5ziU95f0qUy/auZHpOd7ip0vr1Oe
u++7Xak0yxfpkOwHD1Rj+zPnRD5FXo5fwFiWl5DyxlE/MDfh02fMPG2kM3e/
6jHcjrpqjpPXPC+VLfJ2yyI5/Jr8Bn/WPK87OcYp1ccBm9m5rWbmo6LyPZgn
rsUlM58Bjf8obmcb9rM4x3mHdk7+BTrlS6PrK3J7jvLxGLobOjNu/3EzrxKV
Q37vRv+I/eFwnq9Bfi80OMA5/x/wcUnl/4DFhiXwdbPYV2/B99XJz5f0cXy9
T3xk0uP5uRLlgaD+iWb+Gzbe/8Luei/xlsU+T4WYmY97PRD510g/k/hd7klm
XnvRDyf9GlX5a3qMeT/S/U+XSNTXXTXHJenvg++fnPiA/hbrkfUncs3+eDON
A/G8quSf927sUPU82gJf7S836lTuc0o9LTAntlvqoWa7lXpaYEjn0cX27z6p
1McC1X5IGddilUupjwXaRuee6vjXrtzXCkFPylf6p8AZ5b5WaHksSM+csEu5
rxVKRYTneX6Vvi+ivLx7dm76aj/l0xH7JI7idZ6LuA/x3M9tTJiG8QLy9W7I
803ctzcf7lWud8PRLa06DEwlrjjZIR7I1SG3O3zKIaUcD8QVS/Or/tN2pRwP
aKyciUo5XihVcFghkX9c+OMZ9ae8k2IdwcZ9sFhn0n1GDnhXXeSnE5yf2bfy
ZOevTnxy4afq54qP7hDh5vk6RVz23Br9H4n8KSLf48shFVvZgs4o5Tsg6pZj
Ue/gk0p7HXDp3uDIjks2KuU4Yc7IgL7zVsYq5Tjh5+qu2NxvjynlOGHxpiP9
YgatUcrxja/gR0MyrFuV+mdCfPLz7ntz5Hul+6Rt/a9Q1LKnMbJuhQWLm956
f1c8P6q/X60Jo0U+U+HP6Wf7pfXUlrdj5Pqkwepb+xui/6rxt/Ab9Ouavayi
Rze5mea/B2v3mgRSOcIP2a/PwsoRZr5d4YfsF1CtV7r/P1wXXO5+6bcfot+m
XH87jN80+lq1yWK/idr14uLMX0PDBF+D/t+E8jG7V5n5joUfst/eX2Ycnnw5
hu5H7c2TXqzSvqDzSv9nQNcNOfOWauZzadYq8E7N8CW6XE8rVM+samlWN0Xc
j+t9WLvEeQbVq0KAtnbutHhFd4D3SoNiPTKizfdc/r0yWq5PGoTey5eI5+Ny
Ob5+Gh1UKiUqXnnuGkx7/n1bkeddM5/XuN/2fFO1Jb134pwutHLtFV+1T1We
iwXGsudyTynHZ+f7X3oSE0z+BhZTn9Wo736/E3T+LvzE2K/g60o/WGHsI8ex
egvEfgfpHbb8ErXzgIgvMn7b4GmadVuzukeVcmzQak3zcDynlu9r4/vRyUo5
dsgT8l2N6/M15Xo7j8NMUOpjh1dsHCYo5Thhc6eslVXa7FD6xwtd8v2afsrM
72Mx9cxz1u4LozRFT4MuGwz/N7ldLlhV+dPnGH8k39cNoxKufR8wcKHyXbXB
ha/3L8Nzf7ldVJ44P6b6plQbXPVEVZFHif6fPXjeX3iuLV/vgss/1byK57zy
9W54eazOHlxfyNe74feeqQ2Hp59SdA/sKhH+Btcdcv199sDsPQv+N++YBT5w
HozeWMem3DcDAguX2lLTzBemmf3Q5GblCyJvhcXUbw/9+hn6gcjX2+FZx6V3
RD4vkdelZ51cdYpVvqBc7+vPxKvXT5n5uSymXrT8B4e3L6L7iv1bV8Wpg6EG
fR/Fvn2vpYPvByy7Z/YL1fPdvAp29B+TdQ3c/kuT5k+k+YDGgwuqjWwy5nbk
OmUceuCjsmMy8NxK1h2wqvPCN7gfSP9fLk+cu9O/l/PGPcP9YeNvsZ6d2XlR
Ytcbwl6hdhnvkYivIz1pe313y1ZXlPLdMPHgkgK9llLeQ/G9ZdllphxS+tMK
k/l6U26XDVzMMZe+b+K5l0c3qNyqnWADFp5o2nWiXRelfLXiubB0c2V2/M/4
YfnuTTtZjJ+iGN1q2qXC/sli8bD0vgv7h+3fmvah+P78wuKt5in1sUMnpk9U
6uOAsmx9GmP2O+mJWLxpDwt7aSrmYTTtVTHOe7N4z6uKngbfY3sfpCnlp8Fo
5lfpUq7PgLX4edvsUa7PgBa1x44R9raYf1lcpGn/57A3LIFsHUr1pnb8jGG+
pr0n5peN6ehwT/abmI9u8fMOqofZH64CldKtIYpdYTP85Uy7VMxHQ9Ftx7Qn
xXw0m++ryPe1wRAe7yyXY4dQlsBso1KO3YiXNO1JMU+t5nHEcj1970fHu/4d
I5L/x/6p+s2qg9vz7IiW+9O3XmN+GkuUfrDwuGCyi4T9OY3HPZn3o/t3nTRj
bHuyQ3LYpQXLsH0Gub1u41zGtOvEuqMn85sVfgxmvbZOq1thnPd/7Oe5dz0s
jobaY/z22a3Bbf+pFfgwxvyb/r31lO3LBp7NwVUx+rsWj/OVdd/vNCM+ha6j
+vs9jpj4rvh9pV0eaDt9glXY4cLefsGW4eJ5UH0Wc79HuR+cUET3WyfsRmFv
fM3y50Yr/eOBxSyPVYqie2EmjyuU+00Dlr7PtAPF/IvpTHXTrhPz72LMX2na
dWL+2sb8EsmeEd+DWWty2jNi/bWI1VPwoUjfapSjzBcOvu+zQ/Q7/XvV8O8H
R15V+tkJhdA907QnxfzyF4vvE/s1xm+ehyrorqK7DX+VOPV75QYdv8/tUxXd
A714fKjcLrdx3hmm2pO++Zftyy0060H6G2l/RtiBr3k+GrqO6nuNn+vJ9xX7
bHI/cH/+oOtKfTTDXz1K5Nmk9mEYtLAPxXphK6bVShd5ckmXv3tivSDnkxXr
hdT7xXLYdWJf6EspD6yYH7oqeVepvDCWQE7kXSXdeL407ws7hLlZLRJ5zah8
8ueUdQss4P6NcnupPoeVdnmhJr7Wy9R1kxdK4f5zjQxF9wAb/qZdJ+zGXVKe
ULE+Ym6V044r/UDn1CIfOumv+fm1XE8nzMN8wa2uKDrlZxN+e3J9Tuv/B60K
njQ=
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxFmwfcV9Mfx++9ufd57u1GsqWlFIqsStGgpaloSKShFFIqIqJINGSTvf3t
LZtssvcomigyQ8Po/3n3OV5er+c83+8999zzO/eM7/zcekPHHHZSEkXRLmkU
VRHtn0XRN6J/6vo88QvELxc/I4+i6uK/rIyiXPWzxD+k+vviKOqm8q2uB6nN
G6p7vYyiJaJ3qe410W5q31xtuoqOV5sdVT9LdI5KbfHL1Gel7r0j/hu1v19t
u6t8p+sjVb9aNBaNNdBDVf+zrq/Us41pr2dr6N4c8Y/q2c/DeHinj0WvC321
UcXCwL+lZ0fpfgvRfpnb8r7v6HpL8SeIv0f156ptDfGnqH5X1V8uOlz1VVS/
nehglQ2q31y0tjrZQqWl7lUTrSn6se69q2e2Et1adJjqe6r+J12/o34fFn1L
dGvVb6XSUPeqi+4kepXuTRQ/TPyuKgtUhqo0Utlc9TuKfqI2e2X+ne/Vz/Hi
S9XXE+2q32um+utFq6gcKn641uW7Ss/bDarbRf0MUPuqKs+pHKFSqMzUve3U
ZqnapuJ7ie+oZw9Vv7vr/sGso0pd8fuL/ql2ndSml9pMVPv9xF8neoDufSr+
B42tiX5rsNrXYU7Fb6lSS/zTuv+UymSVZ1WeUTlL5Ss9u5vuHyR6gOguKteo
/lXRY1Rqq9yue/VFDxR9U793SOw1naC+b4n9biP12xP03DS16ad7N4h/RXSh
aFvdv160u9p0FT1Hbfrr3s3s29zzzHp20fVJhd5V/BjR01W/D+NQ/WrRK1X2
Vjla7/8l8yF6ha73ok5trhLdV+VYzkjh643qPy5cPxiqPkeKb8f88t4qN6l9
Y95P5Wzxh+uZa0X7sj6F12t30ZZ69i7xrVXGxZ4v5upSvVcf0T6ir4X6wznD
kX+D/g/L/Fu9M89HmzAnh6due6rqn85c31P0B9G5Kvup7FQhGcFeF91aZSfx
i9Rmie49odJXpbIw/TT3ueX8qip6X9c7iG6f+zxwLsRGx+rfg6IjRDuprrPK
dF2fEnt9bxWfq4N+4j9jrTTOiao7XnRm5GdovyA8/4ZoKtqfPaT6JewZjXOx
6GOq68OeVH2i568VH4seovX7TfQO0T68X2L5hTxrIXoi50r3T2acogfoN24X
fUHtT9T99pxV3avQOA8T/5Hu/8Wcit9edJz66yB+vPhUbXqL/1BtFos+HPv6
AZVeseXR/zTWseKnip6gsjnvInqM+ik5S7reQs+PVtv9RWcxJvHtRHvo+knR
FzW2h8S3Vv0fOq9vZ5Yz+4lO4eyo/m/VzxPfWfxf4t/ILGf2Eb1P9buL/qZ+
Ts58/poxh7nPPjJgXObz3Vy0l+qf1u++pPYn6Xob1TcWvTXzWW6TeU2Zrxf1
/Eu6Pol9LtpUdBGyX+Vs8WepDBFfTX0eJ9pMdHLmM9eJfjLLxbbI7Mwy5FP9
9gO55+E3je3JzPJzguiE2Gdtvu7N1/Xx4s/kXTLLlrGchcLy9Sz1sa3meBuV
Jrp3m+puR1ZwhvRur6ArRF9OPbYhogfp+kX0X2m5xDNH5H4OHt1zJ+uKXFEZ
rd+6V/RotRmgcof4lqI3oXton7otz5yrUktjuS+yXFuQmqfNzqqvF/YWMhXZ
2k3lOPVVS3Qn9JfKm2r7nMY2ijVV/c6i5+u5SSrHMTe6flttnlebqrnnfm/R
02KfzVM5v7r/mOh7oqervmO4x3l9KPIZfELlSZWDOJ96vrloQ9G1Wo924tsg
AwrL6caidSRD9hTfQfPfu7TOQnc9Glm/76RSXffeFf1Wv7ul+PfErxQ/mfcX
v5voWSr1xe8uOkJtNlOfO7D31Fcd7Bv1/bHo32qzBftCJVKbrURrqXygy1V6
9mbsE13/qvYf6PoS1c8T/VR1mdrXFP1W79JU9fXV9lhsCdVvI7qr5vLo2Pt+
jK63Fd0j89nkfHXlTKruKJWtVX5VPy1Uf7f6GYQtgUzQdQ3RyyPP15TMcvcQ
0WHYQzwr+nLkPTNS5WP1eyZ7i/UTfS6y7sg0txXIbLW/LfeYV+s3iwrLpSGZ
7RHsus2REZHtsWpcq81xyBrkfepnmyEf1c/e4n9UP9UrPOaG6udZlRHiTxe9
sLD9gB1xtK7Xii9E745tS3yh64mZx/mZ+pwkfg9kqOgglXWqr8q5VFkvvhRd
Xum1rqU+B+r6R+S36Il6Xn/RNvo3WoVl3U70VJVt0DWiJ6loqNEOoufo+d7I
ac5dZnvzH9V/pf63ph/Vn5Ka31b0iMx27l/0If5t8SvEV1ZYrx2lujSznqsi
2lHP36/7j2v/PJNbJ+yTW+adEnRZRRhDZ7V5MrfMa8J4NG+Xqc2fnFfR/4X5
Oqa0vfGP6r9nb8Ser4GFbY6/Vb+9xtNK6/WbxtBNdGVsmfu4ru8QvTlz38iz
vmGPNA42xtO5+adE1+W2SZ9gT5b+rb9y68+Z6GuVH3JT7Mn3I5+LhqI/5bYl
bxLdWb+3l+qaay7qit9T/H7ip6u0QY6K7q/xX6r2G5AT4i8Rv158jQrb01/o
uV9y26q3sO8yn6Om6C89vy+6T7R15vnE5vw9t435qOiNqlsW2f67RWV5ZDvv
Auxy0X1Fl4Q2U1SWhjZT2Zfqo2tsvwjfAJ1cXXRD7HsrI5+1FWEuX9EYVon+
rTbviv9e/Ebx/8T2QbjeTe90cezxna17+6iuBVTvfpHq1mo83VLbnreoj60q
7F8sFD+qsO4+XnQvlTni/0A3FtbXI7EnM+t0/II0sQ2E/VNPdOfYc9QLfyqx
zEXfM5+r1f7i1LK3V2r7HRv7sMjyrzK2L4SMRJ40Em2QWQ58hr1f+n2aiS4s
fe9/GtsXpffB7eI/L71mzUWvzb1nTtaY39f1WOSL6Jjccm2s6AJdT1V9C+Sw
ygTxe5XWKfNYE9GTVV4VP070Fd37irMu/h1scfEtRT9UOY05Fr0st/wfq999
Dp9U89BX/ObopMAfrrK9+D7YaIXtgMPYp2pTIb6L+GvY/+K7ij+0sC/XS/Qj
/cbp7Et0jcqZ4vdjXLntnCFq87z4Fmp/pvi/dO8qtWkl+rbKj+KncvbFn8P5
ED1W7Q5S+/GijTLbctiBB4dz9HrmNtiDw6HaM1XV/nPVNxS9EB2nsia3zrkX
PwKbNPZe+S23vrpf9NfcbdFH5xeW7T9pj+wQ+xna76l+D0S/6/d/rrTf113t
R+n+Gfq9gbpeiF0sukH0g9w27VbYVrlt723Ef5xbBzGfb+GjosPYJ7ntdub2
r9i+Pefqy9K//SA2c2lb9iC1OTDxedRf9FVp+3VP1Q8LPtJ00aKwLD1adHlp
O/4A0b7Ms+q/xQnBZhDZSvfWppbb80VXopvUz7ei3UVXxbYpV2Q+z8tFN2ge
Oqr9oeqvK21j+709xH8X25/vIv6b2LbmDI1jjOhi/e4aPdtKz/bQs4cn9rXY
K6eKbxz85220ps3F/5LZhp0c22e8XWVQ7N+uhj6IvT/OED02tk/3pX5jBLI3
t/96Qmwf9mfsCvX5k+hhiX1abOIvcvt/33JuVN80xCOWhf20FNlWaXmOXK9Z
2ObZQ/QU3b8t9nWTwnbOCNEzw5hv0jMz9Mxg0aM1ty/n9l8XYm/rHffX87/q
frPY88O4eY/x4V1uFT0y9nxhNyB3f03t22Lfz49sl2KzPhB5riaE3+2b2K/D
pxqW+/4RGtvE0B77tn+4XqH7S3PHBl7WPNTRcyfH9q9bxfa34afE9lWGiL87
817aUuP5Ordd1lx0Uuz1YPznZ9b1vURHx7YJhga9smWwkV5IbSPMyuy781v4
/wck7ot+sLtPD+84PbOcXpP5PajHJsdvxt7Az2offuvWMCejwlwR20Ku181t
XyMb8c+Jvf0Q2a5CniHv90wtR9Hze4hupvH8GTlmRDANXxc/9+fc9vBVwedi
bZj/bXVdT3TX1Pb7P5Fjgleo/W7oqNzxg+mxn389tz+I7XS1rr8Sf3xkGYkc
QtdxrjkHr6rN76llz3OiDWLrMOblo9j2T+uwj4gBMYfoh6NEB4gmhfsfKnpw
4TFjG1QRv1j8eZxTtRvAnhEdnzjugc/1Y26bvF/p2MJ5sa+nIZBixzovzO3H
1MxtX/8e2caereuazENuHYwuxsbpnVhP45ctyn1em+aWr6zdvzJgZNjbU2Pb
2MRqV2N3qd33oj0T24vY5Xnu2A42HrqU+AfxX2IO7Fts7u9y00syx2pZnx1E
P8AOE79Z5lgFMVLscvRbE8YsWi0LMc/Ue2102Hs8h21M/Ac9zx6pjb2t+7+J
L5FR4n8VraryofpZgzgW3Rg7ToR43l7XDUQb43uq4mC92zh1+rqu71b9caIb
Kx3Ta6f7/6j963r+Cfad2vVkm+a2MYknEsvgfBEjw07GnsI3Q0c2Ssy31zOP
cCZjx0FeU3la/P2iuyfup4fa3Jj/ZxeviN2+peovEH0m9hzNDeeC84HMfCm2
zt1J/KP4pZqI6bn3G/uuiuThvWpzZ+b9f084A6wVa4a82FLtaojuhq4uXEc8
m5jSg7Hv1VZ9B9H1mpvZsX+Xsd2nfp+M7bcSq3sinDtibNTXC2eHGONn4j8V
fQo5L36Z6LOBfy6zj9AvdbwXe565Zm4uCfPTV/f6iT4TfPx2oo+WnuM5YZ47
pabMBWNDDjRK7VNjG3cI+4y5ZP6xU7BtDtZ199JxpvtKx0iZc3yQeZn776zn
jiy9F34vbY9jl+P73RNsHmyfBolj4vtHjlE8H9vvmBGb531nxW6Dn/Ng5nkg
XlAj2Pbd1aZn6XjYQ6X9N2wPfN6qhe36f0rbItTvkTumzTzfJlqtsNyqZL9U
eN3v4EyIdkxs8+FH4+vR95og/3l2OfOUePwjgv4dUNpH4FniWtBOoR98is74
A6r/OvOZIM5H3SEqbZFVsa/hsUPbJ/a7hgebc6j6/yH47/jxqzLH5YjPXad5
H0tb0WtUTkDGir6v+82SEINLbA9zD9uYWMfMwnFZ4rOnsafF751YjpET2TOx
DXaU2g1CN+FDF95ju+beg+xF4pLYUfDsyXWZ5cYfmfMZzN92FY5zo1/RCxfn
lm3fi36i+kdV6kaWeQ+HM4WMR9YjQ68K8h89cK/6nBc7PkM8fF54tlc4s8jW
i/L/ZC02A+eUWEef0Cd9TQ/nkWd7h99lTOSnHokdDyHGDI/M/SJ2ros818LA
k9fDdm6d2H5mP7FPsBewl7Gbu4b3mx5+a3zwNSap7S+xedb6PeRT7DgJspcY
1QXB9yGWEOeW4W0Ty+7fM+u4VzPPCfPVkJhIbJnIGebswO+DLaE1+JExIANS
77W3dP9Nld9Yc9GTgm3M/iAXAT888h7CdiUufCT2bGx7hXgaZ4Z9fobG95Fo
68J2DPdT/eY7meeO2E7T1LYQMcD9Q2yBfUKsnTPQNszzn7Hn9srwu+w/9iV6
ljNweeDZi8Qc1saONZydO7ZMjLlD6tgesfI/9Rt/xH5f1gufh3gTa0SsQX9R
j9jzj3+CDlgX2xaalvsa+wV/9NfYMYWWqf0y5u2oxGvJ+2BXvC2+f9AZ7OWt
1MdGtXsrtnzeJZwpzhaynfbE5QigvYsczJyrJc/KflsZxkqchPgS/RBjuim2
zkBmkudgH2+tPm+Ifa7Yb8Su6JOcGX7Je7FtnRcy88T52b/Mi8imHO/nYX42
6N7Xsf1f/PKfY9um7P0vwhohs5eFMcQa/wfiX8zsW3wY27/ANkTPoePI0dGG
/NxdoR678eXM7YnBNiq8744pbI/tG3xezujiIB84u0vCOxJjuDqs12WZzzFx
zRsz+93kSeifPX2M1m1Q6v4Z59AgM5H/63X/GpUxyJDMuov45SWp7Tpyd5tp
TNfHzjuT00KGvhXZnkPmEFu9MPP8Ede8PrO9MzqzvY7+J56NzYOea506X4zd
gM2wb2q/j3g6OpA26JoDU9OHMttBxAmJa2MvzAjzf3VmnTlS9NrMMb1Rmdea
szRQfTwl/o3YOZ0jU+9D9tvwoEewhXYOch55v17X82P/LvYjMoj4LHIIHnuy
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
fDLnfmVpXApYDXLofJ+MDckZ/j/iZ1xY
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtm3m8V1MXxs/56Zx793FCJBWaVERRaUSTBiVKGSqK5tRLMpNQCBUZX9Nr
yBQyT5nJPJcp80woSSIzvc/3PvuP/blr7b3PPue3h7We9ax9m449aujUSpIk
0zdKklr6u31VksxXxXDJLSWvKZPkwjxJzkyT5LuQJD9Kv1T62dK/l/5eliRX
qe/R0s9U/V9q309/D1bdKMnrVQapz77SD5bcVG27Iav/FMlnqZwguY/K4erX
U32uUPu+kh+TfLbecYfablO/tdI31t97pA9ROVTy5SpXqMyRvlZ916nP4dIL
6ddLf1/jHCt5vMqJqv9F7Ufqb13pd6q9t9p/lryxfvM5kj9T3RF6/2zpc4ok
eYVn1P6TSle1z1AdE9ZB+lPq+5raf009BmO1U90Yfrvkm/WuuprDo9T/ONVd
p7qtqzw27xgnfVM9/7fkXHXLJU/X+JMlt1DdyZInaIzBkoeo74OSD1RdQ7VP
Ud0meldL6ZcxF9JbSN5C4x+p9r2ln69nNpd+hPQB0s+TvoP6XKH+E1hryR/r
nduo/TPp+0h+Vu94V/0ul76fxr9IdRerzNYzq6TX0Xj/Uf8eieeL/XK+9HNV
tpV8isacInlTyR9rrAOkX878q//+kr/WMxup/RfpVbnb60tvqz4bNP4pwfP9
qtr+4Fv0t1rtmUobPTtU/etJbq0+/6jv36r7UPI+KsPV9y6V1hr7C+kvsk/V
/3T1ny59nOTtWFPJ26v8recP0/MT1f9t6c+xN9W+jPOg+t/1/pdUt0Jtm6ns
qbo+KuvZ6/xmyQ2qLL+jZ1qpbz3pp0mfJv1qtXfVeGslHyP5N43XP/e7jlKZ
Kfmd3GufqDRmf0jPUv/m9yTvp+frSm6pur/0veNK7z2e/VLyStWdJb2Rhpgv
ebHGuEjyDiptJQ9U3cWSO6rszX5R6SR5d7U9quf/0d+/Us/h8xpzC7VvrvY6
qv9O7edKnqOyqcoGGYgNqh+j7/lH/Zfl3o8NpO8q/Uk9e4DqXlHfE1WuV99n
cu+1/dUnZe+o/w7qe6naNmj8fvp7vvSWap/LmVf/V6XvqDI49/7skvoMcZaw
JRdKbyX9Asnfqn2s9J2lfyf5I/Zz6jPAWfhQesPUZ4Cz8IH0Oqn3MHu5VNlK
33e49E0kd1f7+9JvVZ8bOfu5985MtddX+1fSD+P7pH8t+TN9w3M8r7JI8nmq
682z0p+WPgH7KL1LxfuBc8H5KFQ6S99DZa7at5N+Fnp8/22qu5n1V93Fkhur
XCh5rMqVkjup/1XYK/UZLr259M8l76vyuJ4/QOVitR+iNVmEfcbmSv5C7SPZ
/+r/peQxqrtLbXer78NajybBe2eXuP8P0Xq1Vd/LpH8v/anctmYoe1a/5SC1
90xt87H936nfG2pqqNKU/azxtpHcTPIVak/Uv536XyH9h9L2a6n0Nir/qu8I
6W009iVqX6n27zXuRLW1U91qyU3Vp1Xc29eovZfqPpTeRO2fSn5BZb30pSor
1Keh+m8dv+Xy0vbvzdTfwLd8qfqXJB6vskDyTbnnvqvG+1nyMXr+Rc4vcyi5
jer6Sj6UPSm5SnMwVn03SH9Tei2V8dIrKm9xttn/Fdu8tyUvxd6r78rE5623
vuEPxpK+Gb6DeZQ8kT2isVtI7yb9EPas5Kf1G97Wd57CGVb/Z6S/I/1SfKb0
Lrn9xRj1Pxb/qvGnsV9Ung5+3++SP1Wfs6QfL/03fKX04ySHKr+7lkojjVup
nSS1Vdec+azWudf7/ta4z+mZbdT/b+lrpXdU/8Okp7V9jjhP+K9/sTG5z9PG
0kdK/jHxnFWrXzu1T4pnj2ffZM+pzyD1fyPYX26t9rNVtpGca4zrUmMQsMhW
VT6bu6vsqbqFKrenPiOcFdaMtbtW8hPsb/WfUzHGwV9NU/vzap+qcpTkWbnn
hjFukfyFnntB+pEqd+C79I3N9NzJen4W86VnJqjvSer7rcb/VX2WqO9k1Z1C
nfQR6vsv68s85PYNw9kTGidTOUTyWmxY5u//j9oPZA+p7XdsKO9X+2nYNpU3
Ez+Tq71J5rPGO2pJ76dvWqO+DVTXV/IxKnuq7Tc9l9T2+cfWboFNlPxi6d94
ppp7B9sEbEPvxPaYNcV+X555rcvCa4mNul/9Rxe2/aczV6XPg6qSwanXdwvV
N8YesR6smUqH6O9nSK6oaJia9WbdwYBgQTAJeOnF4L25RPIKjf9XVuMqk4Hq
Myy33cH+zFA5R/Iu6rMm8VjsJfZzffxP6vOEffhUck8Nsl7yOo33pNq/VvlD
8rl63wrJf2LHSmMKsMXVKufn9jdtoj8+TvIofn/F31BIfl7PX6vnn9TzX+v5
vuqzQHovtQ/FVxXeX+yzZWofgc1W2zUqF4Bb8U9gL+mj+D1gFH6Pxlut/g+x
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
bDc+/K3Md3Dwp6dnvsv0f2zcBBE=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1XdsVmUUx/GL0pa3VK0DyrIMC8iq7L0qxIIUWYKMigyRoNgqCA6WBRej
xgQBiZFEjQOjAZQgiH8RiQEkilFDVBBFFAggBRyoQT8nlz9+eZ/zfX7nPOPe
e97m0ypHV1yRJMkMyqIFuUmSn5MkrbKT5OpaSfJ2Jkkq6LDJ76mKp0Q8Ii9J
evDMpal8f9cxgZcpdgnbThN5ymmf8V7qynKW7y5so/hK64znr7TmDXKvN3+d
NV4wVxvLMz/TfF2/jfEm1JPvZb9DeWbyXyPO5l0tvodG20uOeJo1/hT/RYPU
mIF1w5bI7UG52DDsLflFPAezU1aGrcH+i71gW3n7yyumCuOG1IjeFQ+gD423
02r+fnH+THrO3tgOGi4+QovVru8c5+K+5HWmx8x3oCxzQ3LTs8SZPsF20608
XbGXjBfJe8DZDokX0kmsNZaPbcyk+6u8fEdxV2vFI6kXT28aqe4/7r4V7zLz
X9I27H5xNf0Rj49vC95P3nBqL66kydY4L7cb33rzpdgU/qvEq+iCcR3sF3OD
5R2OPTpTPeetCS92CeugzmnxmXhW2CA6IOcLaqvGLJ4qOiPuwtOY/wPxSnez
XL1m6hXSvfKKsH3md/LdEc8da8o7X24Dqq/eMXvOy03rDMNe46sr3sHXBjss
PkR3y/0YuwUbLR5FY7BG2Fx5OdnpGeOs52M/sS+sLb0n/ol6YWW8S7EfxePk
rzFeS8+ZO4M1oyd48rFL6r0oPkpPi4/im7Dp4v00NvaGzcI+i+dr33uwzvQ1
tghrim0Tl8a9Y4XidvFM3FW1cVZ8G7G32AvPBNrAtwxrSHPi3ZN/Dlsp/jVk
XI09T2Pl9aUNfDPpHXOTeB5Ue5w17sP20OTLex7qnLuStFfslncjXzV2m3ir
ek3Edfkm8JzHLtAQvgbYw8blPCP4D4hL8RqsJDt9VjlYd+zJ6AF0DuuvXgnt
j95C36i7hK85LeC5Njv9juN7LqR58V5QPexn70YP9arEvahGvb5qdcEeFxfT
WawPViR3kbgN3ST3uNxJfB+pP4Ba813k+Y76GY/hm49/K+7I94i4JT1l7gTW
B3slK72/uMfZ1piAvS/nIg2Ou8VqeJfL6cLXFH893lG+h8SFVJuvlO/fTLqH
Ezwn43vlKYjnxFMQ7689H7Hn3zLpu7iZp5BeFden2XEnBCU/1En7YvTC6ImN
aD3PwPhGeDbSYr5RmfT7jz6wnGcF3ckzUO7v1hjMt5NG8vTEl2alPTF646PY
eGyTnE/je+FvK+8NvIW4O18nvjejl/ItjJie5TsVd3p53XKshcOtktubb128
i7SObzLWMvpu9BYq4j/hbMXYWvEp63RyxnK+m7HV2HGsGJuIfY4NV2ciVouG
qv9VJv1/mRL/jXR7Xvq/F/9/c2Lf0Yvy0l4ZPbNC3I7KsOnRT+y1CT1jjRXW
mKre3vjGaZ79TREfjN4hd4a8Ahomr2H8H2INoh5vezrGtwRbie2K74SvdfQS
427UUb3T9rE5egdPSfR1bIv4f2386P8=
           "]], 
          
          Polygon3DBox[{{3121, 1399, 1324, 1323, 1805, 2680}, {2310, 2309, 
           3141, 1519, 1520, 3142}, {2346, 1428, 1600, 3153, 2307, 2308}, {
           2308, 2307, 3173, 1828, 1829, 3174}}]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNm3XYFtX39R+fGZjhPveAjd0BKooiKAYGig2KhY2JoFjYYiGKYiBKCArY
YBIWJiCKGJSBLXa32PVbH9f+Xu/7x7n2njNnzpw5sWPtPWsedXL3kxobGhpW
a9LQkImeVzQ0LC1mnuhveUNDR5WPdT2obGh4X/Ra0X1U11blA13/rLJY5SZ1
8pLqXoz2z4n2jjY7i34h+pjazBM/V+UTXW9TuG4F9Xmmyoeq20n0bJWPeE50
gtr+IP4ItT1c5Wu1v0f16/Ielc913Un1T4iupPpdVfel2j+u69ni++Tu93nR
E3P3u23h+yuq/ZC63iF6XNXQcDL96f6jureD+M/EPyT+bNEldD1S/LniG8Xf
IP5aPXuXnu2lZ9dXXROVcapfTrSpyp2poeFWlfHMTU3fqbpmKnep7pHgb9O9
rTSeh0Vbqq/bdG+C+Dlq303vytRmlK7/EN0m5m070U9FH1R9x8JjXF7P7q36
jXKvU7tYG9blb9XlKqPF367+7xKdW/P9X1TqKkeqn59UP5E5VPlC/DaiNzB/
Kvfq+oSYvyvUx33Ms8pvqn9D12+o/gLRJnpmmOo2UX9v6fpN1V8o2kz1w1Xf
VvVLiL9e/MaF54T1uVxtpuZuf4bK9bnnmnl+XPw74s+jXu0Gir6q8d/Neqnc
r+vrVH8J6y46VGUA6yjaTu+aKP5+0avq7meA6neLvUm7a3V9sWgftampjNA7
N9XYTo+5ZY4fU/u31eYclV3U5inVLyM6QH0uxZnQHrhG975SeVL3hoh+nbnd
LaLfqXzCnilMDxUdwRhUxup6HHPLnqON2n6jMk38DaLfqrwr/mg987Por6In
xV64UmO/LvceZX++lzzOi0UfVn2pcqvq+8a5HKz6R8W/Jf4slXeS+YtEP2Ff
0U7tB4tOVv1RelfL6GeC2mwsWqjcojZniL6q8r34Xmr3D/tU9AS1u5uzrjVK
mp8nmFvV9dG9RmSD6JGsFedK5Thd/6n2M0XPUn9TVfe3ro/X9b+izxbea+y5
Rzm/mu/ZmffnItU9nXtPnxjv5f2/sQ4qN+r6WD3/h+jvolep7cOq/13Xkzjf
Kj+KX1/0Ac6D+DPV5sHMe/uYwm1/E/1G/X4r/m191+qZx7CaytKl9+Qxok/q
2eNU3tP107p+V3Sm6EaahzVVP0193FZ6H04T3VD126t+nuoPE9061mYD1W8r
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
           "]], 
          Polygon3DBox[CompressedData["
1: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
W05U7lMfLl9rfG7sclmZ2P6xJp6/vEzsb07IvJv5N3NFcqhyqdu1w496fuUa
tmqH3726We//lIkltE/G2l+IYRv+QW5FDDO44SfkUj4Vn9bhg+VKxBNyW0fX
yWVt0w6/u18d7tUck7kmOVu5W32AfLD7V+5nYDt8/12d7B1jamNr+ddtyzzT
Seyf/brJF5o3tL5g/26+37pl6gkORn9TvrJM/YM5L/2y/nmXxr4b+4uxL6iD
0cUoni+xu/kguW45bbntQd3k/60DsF5Avlru3Bhg4W74arlnMbBYWAyoX9e/
iw337Sb/aR7U+gr9mbHunUXqJeQvjLXN8ZvrN4cnLhGfmNszph3N+MPLxLrm
AMX14nvzYeIBc1HXFKkP8XzJZZgDmaMO3yO3YE2BtQXmjCdyrx9bySXLN97a
js/arU6M6/qaqzX2lV8Vh4pHD69TEyP+0EeZXzLGNv9yRJnY2xjb97VWwthb
PqDk/3dlzjJ1crKLeH6L5GoH1KklOaid/Ls5V3l5+Xlzsca2cm/GCMYK81XB
FvJd8l7m57X/F7aSn5Vj1t7tVwbvWl/xu/NbyceaXxHrXYa+bJkci7mWboP/
5Ky1/9pOuWzzZ18XiUnkU93z7n3j/1XqnBHPyjvoGyKf3c3eMo4T34vHxcaf
ygnXwY9iZ22kfJT5ULHdN63wsdaMyE+awzUfbD2Ke+G7VvCdNR/yi0Naye8O
7oZ7eKPBx66pa6tNXg754DqxpxzwL518Q7/lUN9f+9ANV/VsmfqRQ8UcRWzc
VnVspLbyKnN8yKd3k7txj7vXT+0mPl23wcOe9yeKxOzG7oPqxKZyYPJ5cqnW
T8mpmf/2THo25fTk26wn8mzIyYnn9qmTb16+wffiZfGH+Q7jZfG0z2N+w3hv
fCfcj3vIvfRuJ2s3sIkvJnTyLXdo4iPz1Z79z1vhv803e7b0efLbZ3VTG9Kv
iUfM2Xwgn18ml/NmJ3N3bOILuQ5rMfQZ65XxIfoS+ZYFkE/sxnfpI/QV8pvW
S+nT1mi4E2sr9Anrl7Hh2nLfaYU6nJXcoLl7uSz5TLk4baS20hyT//VlmXhV
n6PvMYe4MPJ7Dd+pjdHWfNBJ/ZI2Ulv5Uifcjz5EXyIfIL6T/5m2wefiQTlp
8c7vZepHzjMmRt6nyX+vUaYeyzPv2Rdjyp+aMxJPiR3MJb3VSXy4U8OXWO+m
LTNnIF42/3xHkRjf/MdvZeo7zvV9kJ/oZG9qU7QtT3YSn+vj9fXmR80FiGnk
982Pim2tMbPW7KBu6t82L1Nv91on9T1yqHKp8lHDkVcoUptzaplv5ze0lk18
Kv6S8zVeO6Wb/LQct1y3GEYs4/e0lke+7Mky33BMw0f6Lc35LNnc330zruH3
9Gn6tqeb/9Pn6fv0edba6VP0Ldpsa/n0UfoqbbC1buKxuYpw4HLhfhO/jT7F
2rnTuslvm+e2nkp+dmwZTKG/0P/IrZozXaOOjdBWmH//sImPzihSA2EthHze
9FUwmfkZ+b4ZqmAy+blzzFkV4Qi0P+bszN35TbVXl9F+LrKntDfnNefZmqLv
OsnpydXJeaxO/wnofZEf4JkW6w3fLrYyh2Au4ec6tX1yfp4f4w/P83xF+CT5
zemqYExzSdY7Wqvl+qxZBp95nqxZ+msdfsO95zObd3TPuHc8w+YnrBHdrMye
snbU8yh2lpPz/FuzuGmZGkRrGW/sxHeY4xDPmrM1dysHJX6UL36N8f9pJb8g
phBbmJM1fyV//liZ97H27f1OfPv8jW5Nk7VNYqxJzTf2WxsjW0vnefLsuuYb
VsGDcsnWYM1bJ790fxmO2HyHmEpsZY7d/I/1IsZ74nv5UutJjC/MecqPmoMw
FyFG8PtZM2ftXJ8+qdcwv/ZpmZoUa2v1Y/ozn0E+0PoduUc5XHlj67XkduQg
liljfwa3kmPbiL6RndRGGPNp7+7opHbJmFv/bA2BeHpiEx9aEyEefbuJ/+Tz
rW2xBsdaHPnmu4rEZPIF5jvvK8LxGN+bzzMXaM5OPGCOxFyJOTDzYWIAsYAY
Tb5ADnCaKvZTPG08L/chB2Ku0/y+sYo+3lyiMZKxkjba/FRZJ3fn+TT/dUAd
fkNO0++pj9JXGV/LpZlTkP/8uUyuwfpma4OsgbEWRp+l7xLjyJXJn4jF/uBM
6uSvjR3EWMbavWLGIjkic0XiMXNhE1rhe6w5XbH53tbmWK9h7Yc10dZGW+8l
926NrrW6B3ZzFjwznh3zW+a6tKHmCx/qpJ5RTGI98gGMf7GVM+RZMldg7ZE+
y/og88/Dmuf/g/vpJBYRA15Zp57B2EeMZS54fPO81mxan6ltEw/JuVhfpM3X
9usTZhRfl8m9Xd5K/eA73O/rVmyo8eBx3fhaMbpY/dhuzrcxoLGguS+xeFGk
XtD7WYtoTai1of+ow0daU2p+1JyZ9a9XlMmlmRtap9kPI8rkXowdzMdYD2kO
1Vyqc5y7l3i1HYxvPYHPa+zqmlorav263LkchHya+aoJZd6pb2NPtC3WnBov
yEcZq/mMPutbZfq0Jzc0GEuspc+W2xWzid3Ee3K15rKMTYyBrIcy3tO26aPk
C8SfciXWoFuLbr253I01htYaWhNifsGY29jbeghz0XJM1lOZozZXLcdg/OP+
N7cmJrW+0XowuR1rmKy/EAOKBcXoYnUxtDbIfITcszlaYw8xqPj5x05iDzGs
9mp2+tcqElMZW4mBxcJifLG+GFGs6DOezP3+DxiTZFw=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwl1HtoVnUcx/HDNB99fKykC/SHhEZKlBWDsPpD3SqCyigj00IozbZpbmZO
28yZS2e1LS21bW4rWG22P7xmNpQu85LgpVK7sJkXkCICyVbDclG9vpw/3jzn
8z6f3+/8znPO74yeVTa1NC9Jkim4DM/nkuSVTJJMRgGGjUiSMcOT5BfHD+KI
8g1ysd4i+S78PChJ6rjvs0myVP4aE7hrue0YOThJZg/1i2rjrsRerlv+SPdl
eSXGyuNw2jU6zTWfq3b+YRzlmrjXuIk6k1DgGp9yF7Pp+ejtxl/yNNcdHefl
Tt21xpVwe7i53EFcIW/V/cnYtbFuvbf0bsIf1ndCXoZDeqWxRp1H8I1+i3Gr
uTuc38blzNvHvc31cj3Yx42Xi43f7bhY7wCy8nPo4orkS7hdLtNd5fhRHHON
ZvMt4GrkqTjOtXIvcKvlx3CCe5frwieYbp5O887wu0vucB+brSUfNcaN4k8Z
dzLW4YH/qjOC+1Keh0HG5uSluq1yCW7mMtwybo+8CRlj/zZ2OfdVPB90Wcs1
euf4jfJF9HOfy9vCWcsH1nELVhnXr1vDtcjdulW59P1b4XgKHsIY798PcR3H
k/CF+Rqz6Vqus64G3Bhz6pVza3Sewjm9LXovcnXy9Lhnrj3eK9e905hvY93G
l8uL9OrlGfhRb5NePdeo1889qTdTbzG3QX4GfVwjtyR68rPYyc3iKrmWTPrM
49kXcRVccyZ95vHs53AvcU3yHOziZnPv4T/Hla5dgVqdN7DE8RAsdK5Kp4hb
YFw+ZvofT3H5GJDv1jugVyqPw2/xX3Lrufvle3G9/AB/2P3eJ3fHe85djrPm
G2X+kdjveB+3JrzOQZQ7LsQF58bqvIl2eTzaXGODzlyuwvyF6HaNAm4eVynf
g71cIfdqLn2G07ge7pL/fidfZZ6n+RJ8LK/Q69O5TW53bofe69xk+bNMut/z
9E7y6+UGfrn1nefW4XzcO3cVJsq9euv0OuRWvX+549zieM+Gpt+o+FYdiT3H
1XJ5XFv8B1xZvKfcP+Zt4Xpi/2fS/Rb7bkh8S3GBu5V7X2+7zkKulnsCve63
gzuDd+RmvZXG9pnv8eHpe/cn/2H8/8ad1WuQm+Jbqve7znfZdF/E/rg6vo2x
n7nS2EPygDmauep4L+NbzdWjznzH9Mr12uLdMN+Azv9y4tnH
           "]], 
          
          Polygon3DBox[{{3177, 1912, 1857, 1856, 2069, 2880}, {2852, 2026, 
           1868, 1869, 2027, 2853}}]}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0ktIVVEYhuFf01PHvIWEGBSEjmxeYIWlhJDVQKxRQZaChSkV3a92NwiC
IIiCQJAKSZEIiQgJEYkKaio5iYguNLAIQhF9VsJ5z/vtb7HX2nuvtXpfV1Nn
TkQ8w4bciJSn/X3jySURpfyZV/FXXsM/eB3/5jreXhCxzL3b5B1yWZonG7HT
9XK5QN4jl8uFcqtcIRfLB+V/1iuVu+Rz7j9s7Kj8RXfC2HG5Qb7J73Bfd5Jz
862DwDUawlu5Ld2XMq5iUDfAe/XH+A2uYEC/RdcvH8E4nurqdZflx+jEGPr1
dfpLch8OpO+jG+XN+m7uxX5M6A/pXssX8RAjut3coR/hC3iAV/pmXXPKOI8n
unvcpG/kl+m7pOfR1+rupjXxAo90Z3mj/g6vxXB6Rv163Rn5NqrxQfeca/Sn
+RZW4r2+PbtwBk7hBkrQg+uoMl7MlVzEfxOZiE1pP+U2zrj+I9fKS7mV83RT
si2Nj/KcfcumNc3j6MQKrsDidDY4k85L/v/tjF8oE/K4xVxz8k/5kzkW8QzP
6r6ndzfuF7tMsDVn4RzPA5PvVIw=
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0k9LlFEYhvHHxmnMGY0BI1KCJAikzAqViIgKiYhWfYRwU4tat+oDROqM
/U/TqAzKZhcpSLSoiCASIcFok5GEI0ERGGLi79Di4b7u67znvGdepvXsxTMX
aiKiYl7VRvRviOiT5zK4PuKe/lW/rL+V4/q8vKJvKURM40mupL+RQ/ZMyzH5
WVbkN/lCTpgqfmjPS/wbP7ev2TmfuL/6YjqPa+Fm8T+uKs/nI6b4mvQee2vl
L1kvN5q82ZyNOCDf5SKKns/i06aRr3AduMBn5CnTwD/jfzpnjx7mpBnnlriC
9TZ91R1OyCd8lc/zu/Rl/gvXgxfTXfid6V78HN/iXcf1TfyO9Aw/y2/jj+p1
/HY5xa3ZP2/9iJ7jH3PNeIWf4w+n38mP8T+4rfpH/pB8xGWtNeHX3EH5gFtI
34kv6hP8B64bf+czfCN+yr/nm9ypM7073df0+ubD1q7K3nRX0+25Ie4P7sJ3
8ZL1TnwHl+siLum38X08iG/hUVzGN/EILuH99tzQB/A+fB334w58De+Vg7Jd
luVuWZJtckAec85M5v9/dh2KyVoi
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{2269, 2441, 2534, 1387, 2510, 2575, 2576, 2535, 3157, 3304,
          2323, 2601, 2577, 2578, 2536, 3310, 2564, 2324, 2511, 3145, 3219, 
         2325, 2270, 3220, 2326, 2271, 3221, 2327, 2272, 3222, 3118, 3244, 
         2273, 2442, 2631, 3119, 3281, 2512, 2678, 2679, 2628, 3322, 2328, 
         2513, 2629, 2630, 2617, 3319, 2329, 2443, 2419, 3223, 2330, 2444, 
         3140, 3224, 2331, 2445, 3133, 3225, 2376, 2332, 2407, 3263, 2408}], 
        Line3DBox[{2274, 2446, 2537, 3120, 3282, 2514, 2579, 2447, 2538, 1681,
          2565, 2515, 2580, 2448, 2539, 3311, 2566, 2567, 2516, 3146, 3226, 
         2333, 2275, 3227, 2334, 2276, 3228, 2335, 2277, 3330, 2680, 3121, 
         3329, 2681, 2682, 2449, 2632, 3122, 3283, 2517, 2633, 2450, 2619, 
         3123, 3284, 2451, 2672, 2420, 2618, 3320, 2336, 2452, 2421, 3229, 
         2337, 2453, 3134, 3230, 2377, 2338, 2409, 3139, 3264, 2362}], 
        Line3DBox[{2278, 2454, 2540, 3124, 3285, 2518, 2581, 2455, 2542, 3158,
          3286, 2568, 2519, 2582, 2456, 2544, 1687, 2569, 2520, 3147, 3231, 
         2339, 2279, 3232, 2340, 2280, 3233, 2341, 2281, 3288, 2457, 2635, 
         3125, 3287, 2521, 2634, 2458, 2622, 3126, 3289, 2459, 2673, 2422, 
         2620, 3127, 3274, 2460, 2423, 3128, 3275, 2461, 2378, 2379, 3258, 
         2342, 2410, 2411, 3265, 2363}], 
        Line3DBox[{2282, 2462, 2541, 2463, 3313, 3160, 2602, 2583, 2464, 2543,
          2465, 3314, 2584, 2603, 2585, 2466, 2545, 2467, 3302, 2283, 1568, 
         2468, 2284, 3234, 2343, 2285, 3290, 2469, 2470, 2286, 3291, 2471, 
         2636, 2472, 2683, 3292, 2287, 2695, 2424, 2696, 2425, 2674, 3328, 
         3170, 2661, 2660, 2675, 2426, 2621, 2427, 3321, 3164, 2288, 2380, 
         2381, 3266, 2289, 3257, 2364, 3135, 2365}], 
        Line3DBox[{2290, 2474, 2546, 2475, 3315, 3161, 2662, 2604, 2476, 2547,
          2477, 3316, 2586, 2605, 2587, 2478, 2548, 3245, 3148, 2291, 3149, 
         3246, 2479, 2292, 1419, 2293, 3293, 2480, 2481, 2294, 3276, 2428, 
         2473, 2429, 2606, 3294, 2664, 2663, 2430, 2623, 2431, 2625, 3295, 
         2666, 2665, 2383, 2624, 2384, 3267, 2295, 2366, 2382, 3247, 2367}], 
        Line3DBox[{2305, 2639, 2640, 2555, 2649, 3305, 2344, 2650, 2594, 2595,
          2556, 3166, 3306, 2345, 2688, 2686, 2687, 2667, 3327, 2346, 2308, 
         3174, 3235, 2702, 2347, 2310, 3142, 3236, 2348, 2489, 3165, 3323, 
         2646, 2502, 2570, 2653, 2349, 2596, 3154, 3300, 2501, 2390, 2435, 
         3129, 3278, 2439, 2412}], 
        Line3DBox[{2314, 2641, 2642, 2557, 2651, 3307, 2350, 2652, 2597, 2598,
          2558, 3167, 3308, 2351, 2524, 2690, 2691, 2689, 3331, 2700, 2352, 
         2699, 3172, 3237, 2353, 2315, 3144, 3238, 2504, 2354, 2492, 3155, 
         3301, 2503, 2391, 2676, 2677, 2626, 2355, 2440, 3280, 2413}], 
        Line3DBox[{2316, 2643, 2644, 2559, 2654, 3130, 3324, 2655, 2599, 2600,
          2560, 3309, 2356, 2525, 2493, 3239, 2357, 2317, 3156, 3240, 2358, 
         2533, 3137, 3241, 2392, 2507, 2359, 2508, 2509, 3269, 2414, 2369}], 
        Line3DBox[{2318, 2645, 2494, 2561, 2656, 3297, 3168, 2526, 2657, 2684,
          2495, 2698, 3171, 3298, 2697, 2527, 2496, 3242, 2360, 2319, 3138, 
         3243, 2393, 2361, 2415, 2416, 3270, 2370}], 
        Line3DBox[{2320, 2627, 2436, 2562, 2658, 3279, 3169, 2528, 2692, 2497,
          2668, 3131, 3299, 2498, 2394, 2395, 3132, 3261, 2417, 2418, 3271, 
         2371}], 
        Line3DBox[{2373, 3255, 2396, 2372, 2321, 3272, 2398, 2669, 2397, 2670,
          2671, 3159, 3312, 2438, 2563, 2437, 2685}], 
        Line3DBox[{2375, 2505, 2506, 2404, 2406, 3262, 2405}], 
        Line3DBox[{2386, 3259, 3136, 2385, 2368, 2303, 3268, 2529, 2530, 2499,
          2612, 2611, 2302, 3326, 2571, 2572, 2483, 2433, 3277, 2301, 2432, 
         2482, 1516, 2300, 2486, 3251, 3152, 2299, 2485, 3250, 3151, 2298, 
         3150, 3249, 2551, 2610, 2609, 2297, 2590, 2591, 3248, 2550, 2608, 
         2607, 2296, 3325, 2588, 2589, 2549, 2484, 2637}], 
        Line3DBox[{2388, 3260, 2389, 2387, 2491, 2490, 2313, 3303, 2522, 2523,
          2500, 2693, 2694, 2659, 1670, 2312, 2573, 2574, 2487, 3296, 3143, 
         2311, 2434, 3254, 3141, 2309, 2701, 3253, 3173, 2307, 3153, 3252, 
         2554, 2616, 2615, 2306, 2593, 3318, 3163, 2553, 2614, 2613, 2304, 
         3162, 3317, 2592, 2552, 2488, 2638}], 
        Line3DBox[{2400, 2401, 3256, 2399, 2374, 2322, 3273, 2531, 2403, 2648,
          2402, 2647, 2532}], 
        Line3DBox[CompressedData["
1:eJwVzLkuxGEUhvFPJbFkYmkVGsZSSWwF1yBUFCIiEXujsW+FBIl+7Mt1WBKG
WQyJfecWXIHfv3jynHPe9/sq+yc6x/NCCEPYLAihsTCEKYzlh5DgJkyjrTiE
pHzL3IwZtLtduW2bL3CPS8ziAY+4lu9wElVF+tzj3Rw/4Rkpnd2oi2qdDvka
z9tf8Iq0zh6vuw/L45yyL+AN78jo7HOvPM01OhlexAc+MejWJT8wZ1Frv+El
fOEbffKsvw7NOdTp3PIyNswD8lj0TufI7QT19lNeQYv8h0vccjrH5jNU2M+5
W97KvyiN/tYZMY8iLlt1+3ObtN9xGTe4l/M/EORBDg==
         "]], 
        Line3DBox[{1222, 1126, 2948, 1044, 3412, 2981, 1065, 2949, 1045, 2982,
          1068, 2950, 3391, 1046, 2983, 1072, 2951, 1047, 2984, 1075, 3419, 
         2952, 1048, 2985, 1078, 3420, 2953, 1131, 2986, 3421, 1081, 2954, 
         1133, 2987, 3423, 1084, 2955, 1134, 3413, 2988, 1087, 2956, 3176, 
         3414, 2989, 1089, 2957, 3392, 2769, 3067, 2872, 2883, 3393, 2770, 
         3088, 3196, 3369, 2803, 2771, 2837, 3199, 3354, 2789}], 
        Line3DBox[{913, 906, 3334, 2706, 908, 3335, 2707, 909, 3336, 2708, 
         910, 2709, 3359, 911, 2710, 3360, 912, 2711, 3361, 2775, 2712, 3362, 
         3180, 3337, 2713, 3181, 3338, 2714, 789, 2001, 825, 2002, 1285}], 
        Line3DBox[{2716, 3182, 3339, 2715, 3183, 3340, 2717, 3184, 3341, 2718,
          3185, 3342, 2719, 1928, 2720, 3363, 2884, 2885, 2721, 3364, 2850, 
         2851, 2722, 3365, 2852, 2853, 3343, 2723, 2807, 2808, 3344, 2724, 
         2791, 2806, 3371, 2792}], 
        Line3DBox[{2726, 3186, 3345, 2725, 3187, 3346, 2727, 3188, 3347, 2728,
          2889, 3394, 2890, 2729, 3204, 3395, 2893, 2730, 2029, 2886, 2854, 
         2731, 3396, 2855, 2887, 2856, 3085, 3084, 3117, 3218, 3406, 3086, 
         3100, 2811, 2888, 2812, 2933, 2925, 3405, 2732, 2865, 2868, 2793, 
         2809, 3197, 3372, 3203, 2810}], 
        Line3DBox[{2734, 3189, 3348, 2733, 3104, 3432, 3217, 2735, 2898, 3398,
          3205, 2736, 2891, 2964, 2892, 2737, 3200, 3385, 2894, 2857, 2738, 
         3201, 3386, 2895, 3011, 3010, 2739, 2156, 3026, 3005, 2896, 2928, 
         3043, 2927, 2740, 3379, 2866, 2926, 2867, 2813, 2815, 2897, 3397, 
         2814}], 
        Line3DBox[{2744, 2905, 2966, 3401, 2777, 3078, 3079, 3080, 2967, 3402,
          2778, 3070, 3071, 3072, 2907, 3399, 2779, 3053, 3054, 3108, 3055, 
         2908, 3095, 3096, 2780, 3050, 3056, 3109, 3404, 3213, 2909, 3047, 
         3097, 2781, 2930, 2931, 3373, 3209, 2818, 2936, 2782, 2842, 3381, 
         2843}], 
        Line3DBox[{2750, 3076, 3077, 2968, 3190, 3427, 3075, 3081, 3082, 2911,
          3403, 2783, 3058, 3059, 3060, 2912, 3387, 2784, 3057, 3062, 3063, 
         2913, 2785, 3061, 3198, 3374, 2819, 2786, 2844, 3382, 2845, 2794}], 
        Line3DBox[{2757, 2830, 2921, 2831, 3353, 2756, 2799, 2827, 3376, 2829,
          2828}], 
        Line3DBox[{2790, 3358, 2839, 2838, 2774, 3370, 2805, 2804, 2705, 3333,
          3179, 2882, 2704, 3332, 3178, 2881, 3092, 3429, 3177, 2880, 3357, 
         3091, 2773, 2879, 3356, 2995, 2772, 2963, 2878, 3355, 2994, 3004, 
         3003, 2962, 3409, 3202, 2993, 3002, 3001, 2961, 2877, 2992, 3000, 
         2154, 2960, 2876, 3025, 2991, 2999, 3416, 2998, 2959, 2875, 3024, 
         2990, 3415, 2997, 2996, 2958, 2874, 3068, 3042, 3093}], 
        Line3DBox[{2795, 3366, 2847, 2846, 2788, 2821, 2820, 2751, 2787, 3388,
          2916, 2860, 3064, 3425, 3192, 2915, 2859, 3066, 3065, 3426, 3191, 
         2914, 2910, 3048, 3098}], 
        Line3DBox[{2796, 3367, 2849, 2848, 3383, 3195, 2823, 2822, 2753, 3350,
          3194, 2919, 2862, 2752, 3349, 3193, 2917, 2861, 3049, 3099}], 
        Line3DBox[{2798, 3375, 2824, 2797, 2755, 3352, 2826, 2920, 2825, 2754,
          3351, 2864, 2918, 2863, 3083, 2922}], 
        Line3DBox[{2801, 2800, 2832, 2834, 3377, 2833}], 
        Line3DBox[{2841, 3380, 2840, 2776, 2741, 2903, 2817, 2816, 2929, 2969,
          3407, 3208, 2749, 2934, 3046, 2935, 2902, 3216, 3431, 3103, 3074, 
         2748, 3044, 3094, 3045, 2901, 3215, 3430, 3102, 3073, 2747, 3051, 
         3052, 2900, 2858, 2746, 3069, 3410, 3214, 2965, 2899, 2745, 3106, 
         3433, 3107, 3105, 2906, 2742, 3206, 3400, 2904, 2743}]}, {
        GrayLevel[0.2], 
        Line3DBox[{1299, 1536, 1626, 1537, 3219, 1300, 1549, 1632, 1550, 3226,
          1320, 1558, 1637, 1559, 3231, 1332, 1568, 1642, 1569, 1343, 3246, 
         1580, 1647, 1581, 1353, 3250, 1591, 1651, 1592, 1361, 3253, 1828, 
         1829, 3235, 1830, 1831, 1821, 1824, 1822, 3237, 1373, 1673, 1674, 
         3240, 1377, 1476, 1477, 3243, 1478, 1452, 1505, 3271, 1453}], 
        Line3DBox[{1301, 1388, 3220, 1302, 1397, 3227, 1321, 1405, 3232, 1333,
          1413, 3234, 1344, 1419, 1354, 3251, 1593, 1594, 1362, 3254, 1519, 
         1520, 3236, 1368, 1523, 1524, 3238, 1619, 1676, 1473, 1675, 1474, 
         3241, 1475, 1450, 1503, 3270, 1451}], 
        Line3DBox[{1303, 1389, 3221, 1304, 1398, 3228, 1322, 1406, 3233, 1334,
          1570, 3290, 1571, 1345, 1582, 3293, 1583, 1585, 1516, 1595, 1517, 
         1597, 3296, 1521, 1601, 1758, 1757, 3323, 1616, 1671, 1672, 1605, 
         1618, 1617, 3301, 1472, 1527, 1662, 1528, 1500, 1502, 3269, 1621, 
         1501}], 
        Line3DBox[{1305, 1390, 3222, 1307, 1803, 3330, 1805, 1323, 1560, 3288,
          1562, 1752, 1572, 3291, 1643, 1573, 1575, 1514, 3276, 1584, 1515, 
         1587, 1518, 3277, 1596, 1701, 1700, 1779, 1670, 1780, 1816, 1815, 
         1602, 1615, 1723, 1614, 3300, 1470, 1525, 1659, 1526, 1497, 1499, 
         1530, 3280, 1498}], 
        Line3DBox[{1309, 1538, 1627, 3281, 1392, 1310, 1801, 1802, 1633, 3283,
          1400, 1325, 1750, 1751, 1563, 3289, 1408, 1336, 1782, 1784, 1783, 
         3328, 1576, 1753, 1809, 1415, 1347, 1740, 1787, 3295, 1741, 1588, 
         1755, 1811, 1421, 1356, 1666, 3268, 1667, 1495, 1613, 1426, 1364, 
         3260, 1469}], 
        Line3DBox[{1315, 1456, 1545, 1457, 3225, 1458, 1443, 1487, 3264, 1489,
          1488}], 
        Line3DBox[{1316, 1442, 1484, 1486, 3263, 1485}], 
        Line3DBox[{1447, 1493, 3257, 1446, 1463, 1464, 1339, 3258, 1411, 1490,
          1462, 1328, 3229, 1403, 1553, 1512, 1313, 3223, 1395, 1543, 1508, 
         1747, 1542}], 
        Line3DBox[{1449, 1468, 3259, 1357, 1422, 1494, 3267, 1467, 1348, 1416,
          1817, 1577, 3321, 1739, 1738, 1337, 1409, 3274, 1564, 1798, 1797, 
         1326, 1401, 3284, 1551, 1749, 1748, 1311, 3322, 1393, 1628, 1800, 
         1799, 1745}], 
        Line3DBox[CompressedData["
1:eJwVy7ErxHEYBvDXgIFFmdCVxWBURhmu7sSgFKkrypUY0A2WK+UfuCuKUCez
1Cmly6DUXWEw+gNOdC5nkEynfAyfnvf7PL/f8MrW3GZHRMxT7oyo9EY8ynXO
qHOve5CrlHjxnumKmCbrPdgdMcQAdduufooqy/aW7kjueKe4I+P9of90t8iT
5JYFW9PWdL+zzSQ3/Ohn7W/uV3KMc6m/lmnbqSyxwbd+VF4xYTuRx6zxZUv8
/8uY7VAe8KzPyn4uGLHtyz2W6OGcPn3Dt0V3gUXauidZ49f9B9cXNDE=
         "]], 
        Line3DBox[{1471, 1369, 1429, 3278, 1529, 1522, 1496, 1655, 1656, 3303,
          1654, 1363, 1425, 1719, 1697, 1598, 1699, 1789, 3326, 1698, 1355, 
         1420, 1810, 1754, 1586, 1737, 3294, 1786, 1736, 1346, 1414, 1574, 
         1808, 3292, 1807, 1335, 1407, 3287, 1638, 1561, 1324, 1399, 3329, 
         1806, 1804, 1308, 1391, 3244, 1306}], 
        Line3DBox[{1535, 1743, 1744, 1534, 1625, 1679, 3310, 1680, 1298, 1707,
          1548, 1631, 1683, 3311, 1684, 1319, 1709, 1557, 1636, 1687, 1688, 
         1331, 1567, 3302, 1641, 1691, 1692, 1342, 3245, 1579, 1646, 1695, 
         1696, 1352, 3249, 1590, 1650, 1424, 1360, 3252, 1600, 1428, 3327, 
         1367, 1827, 1604, 1823, 1825, 3331, 1826, 1372, 1607, 1433, 3239, 
         1376, 1609, 1435, 3242, 1380, 1479, 1504, 3261, 1438, 1383, 1480, 
         3255, 1454}], 
        Line3DBox[{1540, 1746, 1539, 1541, 1394, 3319, 1312, 1796, 1511, 1552,
          1402, 3320, 1327, 1513, 1565, 3275, 1410, 1338, 1465, 3266, 1492, 
         1417, 1349, 1466, 3247, 1448}], 
        Line3DBox[CompressedData["
1:eJwVz7srhWEABvD3EEoG5bIb/AF2s0kGuZRi+EpHhzCcRZ2SOhaLQVFSsrgs
RBTlFoNkUMqmXAsdxSGDHJffN/x63ud93vrOqYuGWgcTIYQUHaUhfJeE0Cn7
ZSXlzt1cVISQ1uup0iMu3WX0Blb1E9bIu0/Ka27I2htZd/5igw9vBuQtd0zY
m9h0/rEV5BbD3PPApL2FT/u2/ssOaR55Ysr+bG+Xu/ofe4yQ44VpW86bLnmg
h7IQDmWGV94o2GfsPRzpCW+O5Wj8m215WeNu1h6xqBfpS3KMc2/eZa27OXsv
y3qxvhJ/w94sr6h2N2/vI6uf2sbj/623yQWZYt/9mfwHYGhFHQ==
         "]], 
        Line3DBox[{1781, 1734, 1509, 1544, 1510, 3224, 1314, 1459, 1554, 1460,
          3230, 1461, 1444, 1491, 3265, 1445}], 
        Line3DBox[{1833, 2046, 2124, 1902, 3389, 1834, 1064, 2136, 1045, 1127,
          1092, 2145, 3416, 1050, 1853, 2073, 3335, 1917, 1862, 3340, 1925, 
         1873, 3346, 1932, 1880, 3432, 2255, 1936, 1884, 3433, 1255, 2214, 
         1939, 3402, 1887, 1192, 2203, 1942, 3403, 1890, 1162, 2205, 3425, 
         1945, 1893, 2041, 3350, 1948, 1896, 1989, 3352, 2017, 1951, 1899, 
         1990, 3376, 1966}], 
        Line3DBox[{1835, 2047, 2125, 1903, 3390, 1836, 2164, 2048, 2137, 2151,
          3391, 2152, 2192, 2183, 2063, 2146, 2154, 2155, 1854, 2074, 3336, 
         1918, 1863, 3341, 1926, 1874, 3347, 1933, 1881, 3398, 2092, 2212, 
         1937, 1885, 3410, 2213, 2093, 2199, 1940, 3399, 1888, 2202, 2038, 
         2201, 1943, 3387, 1891, 2039, 1946, 3388, 1894, 1987, 2015, 3383, 
         1949, 1897, 1988, 3375, 1965}], 
        Line3DBox[{1837, 878, 2940, 982, 879, 2951, 993, 898, 2961, 1003, 910,
          1864, 3342, 1927, 1875, 3394, 920, 1006, 2964, 921, 932, 2900, 857, 
         2908, 942, 860, 2913, 947, 807, 2821, 808, 1963, 2016, 3367, 1964}], 
        
        Line3DBox[{1838, 2049, 2126, 2050, 3418, 2165, 2114, 2230, 2051, 2138,
          2052, 3419, 2166, 2116, 2184, 2064, 2147, 2065, 3409, 2118, 2075, 
         3359, 2076, 1865, 1928, 1876, 3395, 2086, 2087, 2089, 3385, 2032, 
         2094, 2033, 2215, 2096, 3430, 2216, 2036, 2198, 2037, 2200, 3404, 
         2099, 2222, 1984, 2204, 1985, 3374, 1986, 1961, 2014, 3366, 1962}], 
        Line3DBox[{1839, 2053, 2127, 2054, 2167, 3408, 2115, 2231, 2055, 2139,
          2056, 3420, 2168, 2117, 2236, 2066, 2148, 3355, 2067, 2119, 2077, 
         3360, 2078, 1866, 2079, 3363, 2080, 2081, 2029, 2088, 2030, 2091, 
         3386, 2034, 2095, 2035, 2161, 2097, 3431, 2217, 1981, 2229, 1982, 
         2112, 3373, 1983, 1960, 2011, 2013, 3382, 2012}], 
        Line3DBox[{1840, 2057, 2128, 2170, 2169, 3434, 2258, 2232, 2233, 2140,
          2172, 3421, 2171, 2260, 2237, 2238, 2149, 3356, 2068, 1855, 1919, 
         3361, 1867, 2024, 3364, 2025, 2082, 2031, 3396, 2090, 2160, 2159, 
         2185, 2156, 2157, 2107, 2109, 2108, 2120, 3407, 2110, 2111, 2008, 
         2010, 3381, 2009}], 
        Line3DBox[{1841, 2058, 2129, 2174, 3422, 2173, 2259, 2234, 2235, 2141,
          2178, 3423, 2177, 2263, 2261, 2262, 2244, 3357, 2069, 1856, 1920, 
         3362, 1868, 2026, 3365, 2028, 2083, 2225, 2264, 3406, 2266, 2265, 
         2105, 2256, 2257, 2226, 2228, 2227, 2106, 2043, 3379, 2044, 2005, 
         2007, 3380, 2006}], 
        Line3DBox[{1844, 2267, 2268, 2022, 2134, 2023, 3417, 2158, 2062, 2254,
          1970, 2241, 1971, 3369, 1972, 1954, 2000, 3358, 1955}], 
        Line3DBox[{1845, 2121, 2122, 1967, 2100, 1968, 2101, 3368, 1969, 1953,
          1996, 3354, 1998, 1997}], 
        Line3DBox[{1846, 2019, 2020, 1993, 1995, 3378, 1994}], 
        Line3DBox[{1957, 2002, 1956, 1974, 1975, 1860, 3370, 1915, 1999, 1973,
          1851, 3393, 1910, 2240, 2061, 2242, 2243, 2191, 3384, 2190, 2133, 
         2021, 2248, 2194}], 
        Line3DBox[{1959, 1979, 3372, 2085, 1878, 1930, 2084, 2003, 3344, 1978,
          1870, 1922, 3338, 1858, 1913, 3332, 2070, 1849, 1908, 3414, 2143, 
         2180, 2179, 1843, 3424, 1905, 2187, 2131, 2252, 2251, 2208}], 
        Line3DBox[{2113, 2045, 2123, 1901, 1832, 2162, 2163, 2135, 2150, 3412,
          1906, 1847, 2181, 2182, 2144, 2153, 3415, 1911, 1852, 2072, 3334, 
         1916, 1861, 3339, 1924, 1872, 3345, 1931, 1879, 3348, 1935, 1883, 
         3400, 2098, 2221, 1938, 3401, 1886, 2219, 2220, 2218, 3427, 1941, 
         1889, 2223, 2224, 2206, 3426, 1944, 1892, 2040, 3349, 1947, 1895, 
         2042, 3351, 1950, 1898, 1991, 3353, 2018, 1952, 1900, 3377, 1992}], 
        Line3DBox[{2207, 2249, 2250, 2130, 2186, 3411, 1904, 1842, 2175, 2176,
          2142, 2193, 3413, 1907, 1848, 2246, 2247, 2245, 3429, 1912, 1857, 
         3337, 1921, 1869, 2027, 3343, 2102, 1929, 1877, 2103, 3405, 2104, 
         2004, 2196, 2197, 2195, 1934, 1882, 3397, 1980}], 
        Line3DBox[{2209, 2253, 2059, 2132, 2188, 2189, 3428, 2239, 2211, 2060,
          2210, 1909, 3392, 1850, 2071, 3333, 1914, 1859, 1976, 2001, 1923, 
         1871, 1977, 3371, 1958}]}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJxEnHk4lG/0/2UrkaVE9kKStFCRilOWlCURpcUWWZNCi9AmKmXJmpTIruxl
57bvyzDGvs9mVpVkqfjOfH/X9/Pzz7muc41nnrmfc5/zfj8zr2fHNS+L65wc
HBzumzg4uFhxq+9CNP34HHR4VBpnlHrXrEtpaHdo7ABbvo98DzF0SDeMlqPp
VaJdB6a/u/4bgRyjsqqzqAmOnVCzvIxwqLNWd7U1gQE2tyxJv49Q0FrtYVPn
jDZkSNL0KkuaAdd0/ZKIRAaqCrveEfeqEHX4fRcLnx4ECS6D/YnPmEjA4Arh
XmQK8AxXXlPajoWTy14xM25MlBt1msflcAN0B9sfEbvZC73qM2tZWgwU0RJ3
stkfC2W8Ia3R5r2gC8SEHe0UlLSQVnUrdQo4d/rWCMr2AflT96h76TSS2HZC
2HR5Fmp82jKE3/bB5q5Vo69W9UjNhJMwFM6EYzxp6lKpGKA9qTdUGewGGy6V
fbdcmBB6H/dV37oNJET9T6quTMDU52HF0WQaVKnc5Xp/rB4k3tzWLWbggREu
wl2ImYUqvo5nv95VwFepiJXIcBIM7788IBJBgiccvNxDm75C+/SV7+vl5qD6
tPb4T1HfGu2nLmmR7V1w1Q/2FhnRITDd5LyVUTXSpgcHxa2OQcrt9gfi7rUQ
tyVKbWgGh6zfKMyItzNASdCnee+LWdTq3XRNoqEdRe/+utvJEw82unyYg7sZ
SOeQmuox/mJkcztbuoo2DF5D12l+ikzEs+0HbfhdKnC+ir+2aI0DbpJ+8Sk8
AwVunK5S3dwMvfW7H3Gu74fYi+ubdq+noy1/v4YtiA6C8+Hfga7P+uH2ZhOD
4kASetVutm7hHx5uk8Q24RtxEHrc7mTQYD96FFqn23qZDobjKod8pHFw+fQA
XyquFpQPqroXJTJhV16+smQOBj6f3SI5rDMGD0ueCblL0+HCu/5l+s0WMN4+
NXonGA9PRA5uDOKmQNJgsdjrp7Vwjp+gSw8hgdrJNa10Vowt3bL/k1IZcHqL
hPYvM0FMiCp5JfNODUN3h3GjEAbm++S29qbSoPfFgG12HEIFVyd2LOtPgvuF
fVyhf79BawPxxYe/OMQtVB69h8EA+124kxqIjO543jrL+b0D8Zkk2PQbEuAn
avr1OZaOOnY+iP7e9hUt/e48X2c8BsFPDCNs3zPQv5fdxlEKGdASXRp3SWoI
zO4qp2wUYSDdAcsB3YE2KH7krtR/exD4Sq72f/tNQRXmypfXFkYh/fQJ8ZyR
IRBeIqleq59CR+r2bZX7QYa0EknEFBmBoz3SwT4Jb5FC4PqfQn8YcOngy02O
FgNQa3I8/vzpIbh2YGLc4g0dEgYmR69L9cDAzFkwXZgBdTfZlIbjFHB9n3uw
gK8JOucMzer8SDBPatD2ZkXrs+MPm7Or4aiu7VJrOxMC9oYWePjfqzF4fqJr
3r0XfuYzPh7spYLC2496vRJ1aFZVSektYwr2Nsm9kBbIAJIP5xQIDKBqRv8h
H04mHNl4fMFnhIQ+XXcIyVLtQpcVnUML9xKhi/+MJh1LQ6lCavv0cSXozWj4
FyHRSbiTlT+/q5+OzCpNTwlaZ0OMsPhcw9tR6FEdOVVYTEM39nPcM6N3w7a5
PGtzoTHAG8f67VIlodFX1qVtOtMQoia0KShrAoTWhCX5N3Wjs3yV5/PMaeA5
9S30IhqHT3+p6yP294Fl8h45TC0d2v9q33d3xcGsY7Y1ffsM67wKnKJvU4A5
rp0Z8bUDiBdSU2avkUA5I+Z2BCvuv6r6+V9WPRgcW8vZz+oL2sIyMRUpfjWF
79z0FbmwcPfyEVP9RgpwrwjnL8XWo3hfsYez12dAdren/Abv/JrmUHu7QJEB
1F/wVTGWjwmC14SaiTgicrSlSI/c60bzR3QTZWRJIJmdZpKOoaLVkcjegePl
6LvzhSu/VafhjMpn+3PJNNRx1F+l514uHC8Udd3HPwVWdnZpX/UpiFG6g/58
vg8IW5KDz6lPQ9rGcxe2Kk4gzVNajboSRBi9bEaWrZsBy6Klh/jSWsh5tLFP
YZwGvuQfj9UvTsC1Eep+l84p6GtLL7YPoUB2W+seyXVY8IsfOe5yhARaZ/N+
cLBi0Uhz3zu1VhAzDOW5q8MELzWZnY8PBNQ8ChLl753tB1WuvYr73GbBfvyX
GKd+IyL1/sUkCBGAxOUJVwQykFrKvnp2nYyWHxNg10mje+LpI7kEFMi5k9ut
pwf9esZ1J0icDAM0v0hJLwqqX74VkC1chU6Wmd+NlMDD5R01NQ75FORZ8pmD
4FYIFhuoaYq/ZyBv568HVekEFCe2sHno7SA4xHwLeuJGBJ/jqmTi3kpEDSta
3NNKBluBX6bfFIigVChemjo8BkoKUprGYhT4Vbv7gIr5KIhWDaXyzRAhkp4w
9GaaCHJ+MatxRhg4GPFG708fA5IW/k2NGTyqEc6dxVioD0J6zdeGyHQS3HMu
6K5WbEY3vQgXHtCI8CV6WjT77zf0s7PdlN1Ptiqc0mP3k8gvEE6/gkdiK0Hl
zHgMUviqnWwrPgvhwZ/2/XlGRgltZ7yXriAkceRDov9FIpzvwnJouJKQ8oqN
JPfQVxgb86u1KCLB/WZinPH0ILrm5Be3kDkGo6qtC8UcVLA0VEHzwVhwaC0U
+NFMgqN+FbuEgACPTHeX75ElgrXbe673MkT4+cayVmp1AHbzf7n3Q5sBFgf2
yj8IflKzcC/m3N7VYSjyrNkqZk2AZzfUHruptaLXqa+OD/8kQ6Lr904l91r0
rtptfJA1d/YPBruz545eodHLxPFp1Bh3p0/EqBdtcB2IXpOgQIvPeHDhAAF9
GcJy2b2uQ04RWYlJM2R4EjbX0Nwyhabrzv+UHSuDmSmtmxgRGuwsOru0LToN
1Po9dN6PTcDm4wKGm9fRwWO1ANUq48HY/oCvCCu+tXq8sGf9NOy8azPh78ra
z5Ma9wdGg2rse8B28M44TPAJPlm+PA13aU0GolbtaO7VRPkfYSo4Pw5qt0FN
iFKWOn2JpU8O+168xtYnCzctN9rum0JrHPenk1d6Ucj9bLqVJBWubGn5811i
Gp2/1LR65VUD2ug89HXHOyqk4cd63JV6ULlq0XV/8yo4+ABCJ3FMaFg2yHfo
G4U/3sN2bZhR6N6vp+irTWHNSRHL+3toQM/GN39pD6mJvruXf4Q8Bb4fi7UM
JUfBb92mJwVOnahlQjZcT4oOQwuELQ6L7Sgy529pYRQOcRFsf65dZYCGHPND
ZdwYMnEL7Nia3odOz7frs9ctcyr8hZ3EELo774RmPJpQtXlC6D5lBjz92nO3
ZX01PE27z7G8rhpc1RV1NsXNgf6wEqedLgVOts89DggIrclXywt2ScfDrjN6
mQ7tvWAvOzbsJdWN/IJOGcd0MUDhq1fjbl4M0tZpL31lg0MHdd0+Z4ky4LB5
UZSYyxDiu/h7H0UPi1Y2Fea7LNHg1zinRxRqRlcsvlAu1TUjY9vQK7+WmLAh
R3DDFQ0SQOyRGCnBiJrqG9vTFzeQ4e8gt/1t1jpWuB975slaVwGfS0Hs9dRp
nLwTF9CHaq2yHD5vZ9Vby/aszjo6uDwNIQZgsOizocizXlY0SQm2/9NIhx0W
QTPTptPA3LW/YPPOqJp4TufaOSoVeriV1wYEC1HxUOORAYMe9H4tYPX3LyZY
9wtG8Y33o8L5wz2TY/2o+9uPjuDrdMgPk3FNj8UCdoH+Wv1lTI2c2+kf3PeY
8A9rg63y7kZcX8oNL9/uRn/TX4YmyzNho7isb9DKrxrDOPPLGB1izfdb42tr
a3PwO9olyeUVCVz/2XIqsuIPruBO3oVvEF4+Iar2hAS78necID0mQSDzQYV6
YQUcir3c/ceLlXeZ/5vJikk/WnKcYmpBKuQOYbs5CXLThN/VnSPBVOLJxf3K
TbCgeF/AeCsJHPat+zImyspf6LywgdEB9u8+6h6MJcILkV7fghgimL06l/n9
KBaMyiviztkTIO5j989COwIkJ673lh8YhfhHNt0BO6dhyF9luEpxGoyqtmUL
zBDAVUDWu/xOH+Sk4w/v8O0DuZMWDyo1GbDCZXr5h2kOUqXvM31wMQdxHkt0
M6fOgWahGFdOGQYZbFeX0CvHIKm9S87qVQxwshfJV5TFoVf3o0O0WPH5m0fj
dqZ02CzNkxS+DovWkTmmFFixx0q5NXYjAyre2sz85qpHD1+Upv5ZV49SSFv+
Kl2dA/OJ0paDLkQo/0r7dOYDGTjSg2gbOUpB7ltTgGEYCdpqhu/xsGJR6a93
EUtfQbRF6sg3LhJgH291/ShChlX7hYxVn29gdT3I5bVZI2wbddymYBJbc97n
Co/G2zkYvD+k4l2Nh4iMoj2TlFlY4bOudgqrhtg33Z8OHyXCOu0zZph8Vh9M
mBQb21YFESenicefkaDVeI7rVxAJLkzb96TYlQMVqYQW6OFh2X7g5sXtFAhm
6vDHvqkHXslvD9X+EgAXwnUwsY4Ml9W+Xr8WXgdvTNuva9whQbS7ES/RlwRL
zfIXAi8gsLT7GWUaNwPRP3JV3lpT4IC/nrHShlawuFhkJ59CgJng1OIPXWRw
PDPclvGmGQJ1Q4XLL5MAU6fOuMqK3Jz1JiHDDWC2EKzz4fU0VFkcvPQgiAKl
Hety3eQx8Mnvrulb1nz2lPE86dJEhnk1HKvEugHzaET8ljIJxBcsZ3lYca/c
Sd+xhTa4H3Vvh9fbSZjNqjp11YMCFc66FjKZAzD5mFZpyo+H7hcxzGuBZFBL
0TchM/tB7crkgVREhABXfWklVpTMnRHS/MLqL1IfX9D/DcHFz4VH/lrMwsyw
2BfPpClouNhY7LowBWsLh6sEXUkQoMEIWJ80Aftr48KT2gnwoc/r03pWrI/y
HP6mOwyOE9jMtL8tEC/3QN/kBx6G3qtcWzaehTx75KjiNgQZrU/pdxtnQN7C
S+XOOAkIW5laSoYzIKMn4Xrz1Ay0Zw2PN43PAIZzfGPBsWrEUWWylV8RC/W1
ibjJc0yIkL86Si4thTyJiyHi+7GQsv1Dst01Jqi3fdaq8x+E6IeDQ4oPBsEg
/IKo6BUaGFxWZLbL4dDNqbDjC8wstMGE1yVRhQkfB4tN0/e2oSO2/F6dxGy0
dzlT6qTVHGyxd5ZAPO9hv0bApNf3RHiSOhM+vTwHHw42vDwjOIyMRExEUvE9
KO9C3YM31nQwivfdcXojDuGdxwIsbTAo5EfAgWJxBtwUJ1n0V7Dmh4dCnllV
J1Kb7io5ac0ErpSCGzV6A+jAs59xFsv9qF5T5H4Pa76cPBF6pLEQh1JLm63+
8OOQjPpHud5DdGD61dB3fe5HgmnpBldZUWThO+PzPTrw3E63MT7fhn4Tjlyf
eYJFzDiawkoPq/8TN8rZtfegTdfyuhdPYdGk6vz83B0G4AaO2G5W6keeo2Op
rTv70bFbkvxmmXQ4xE8XrfGrhDWJVrPALfXotrvBFsmHcyDTE8BI9XmDvPIu
5BTtrUdmmpo6DZ/nQJl56ZzfbCvaYpf6vIPUimI4he43NbD84pLk8mULIvTl
PjUOzCBDqrH6jPaVcngUiftg8pIEXg5JF9az4jvKJsxbrlJgLBUQ8Czd84Jh
wVgrI8OXe3wcr8wQbP7RH1gWSAL+wqkED1ZczHuWay1bBd/dK9xuYAnAYbWY
TGDpxu07/a4VYRvg13q3ZaYbq18HqIe/ZcUGufUVQ1F1cNX6gGWxAwFykytF
clj78WlM16oFrQ3sKcwfPQYklt9LPuXJihoU4VGXhGZ4l9mno/AJD1oqySd8
88jwssHpRVVKL/RcKf2pvEqE8Dtv+Ev+EeFo+4enZ+W6YfHGKHP24AwUXyq7
aC1DhsBvY1TLPcPATVc2dLAnwlJ9mcGQHRFCSr6EW6z2gwPmmq2Y4gQs8IRG
sPX/7/wHZWz9n6T66+amITz0hfxMch7Eg5eg/SGP+glI51C/WbofA6cdi3fO
TY9DUJ2SYqIMDe6ck/FsdJuE9OxrVhquk7A73NT0Hh8Z+v6tv7fhQSHq4Ln6
Em2vhobDVlsjS+cg6XPDyHd8G2gf9cwanWqDstyDrSPZrDnO/OZN5+1DXNmm
TeT9LJ2snRvyV50JaccLitehGuRiHuKp2lCD1kuUc8y+mIPkSLP8i8oDaLNm
8591YVh0tMaB/PwaHXblGXirP+tDeU0hr7NYscko4gtWnQHnvxMGPuRj0WH5
LM74tX5k/9RerzmGDmK2KXHR+3DID/f70EtW5HvbsuukIR3wXXT7bd8aUPjW
I8/XFruRwubv8ZRMJrw4aIM+XetFriMHw7ayonGTm/q9V6w6TxQQu/DkK9jc
p16+8ji25oPuptpc4hycJn2K8/NphdgTXxYuRDLhjUW19aeVThAT+9J5p2Ic
bs72SY6xfNbdfO4rXG8boXyXPid9Pg9a0wrLwn2ZsGlbtMVNXSxcbJrr5r87
Aj3r7arIl+iQx+O69ma6HXRoJl/6fBFamvphKcrJAH0e54+Dw8NAR5/NOWNx
YJOh2W5ZztIrXRnbFFX6YGOkyV63LwOor/btF4tvs7D5wu/7H6an4JIW5dLL
yg6QlzkZz/+SDtVtegf+eA5DmqFwqJ7RDAq4+Vm5OmsKhrYUduONCXCKwfUG
DsUD70BJ8Bl3KoA/H1lZYAYSeeVPJHCQUNGr/rihlQ6QvhpQ58SaD7ia5zOd
Dj3ow8qgK8rDgwHWFBFWyLBVT/SMxD8iklHmichiTYLJqRfzZZpk+PnYd1CA
awJpkNd22nH3QnTbbfu2eSpQdu819o8chRllXqUGcZZOeZPiGFlDAH1c7b+Y
69PI9PPFqkt7MpCca/hAQB8VSkgSioe8msHZxD9VaGgIXE74anbOs/okyZD+
8OMUDCoo5h7ZjJDpHnLfmjANPFff/7n1Bgem6yb9pWXrkLQV3SGB5etuX3Of
10rqhwtbrC9PCE3De7WeDSc2UED145VDNdufQa74lsVh93YY25OofdRsDgR4
ebnF8sfB0i/t8/O/0yDUj/k6QSHCP/8v7byoFdrPhY2fIPex5lF7V/x3BhQe
+/Vvo940GGurfnitQACl6Y3T30jTsGK+Gvbk3ABMTLqvYX6OwSABv5ysz1rv
cd/TcJcJa7q6RlGnMlAQn01hpAsWEiwUw0oTSVAXb1D2XaUT1XicGpUOIYKB
dwV34745aDc15LKw96k5pX8l5V1NJ0gcc+TEHCSDjlNgyKprBzpn+vAl5QcB
hg//sf/M8jvVFEfVdhMsGmptb3s8ztIFjqPBQ85T6PIOHXr4YSwS0P3oa1tD
AUK++MnPfHSk4GhmKPi1FtlIZwhMF47DO5XIPadN6eilWnSWsmotGqM/6j1d
OwYvu9EmE0EaqtTm10CaYyDldaH8liEW5p4sy74+QkBQb1wYlEmCl+nBgmYH
+uHPBq913SFd6MPezpcHChig/MFy34nmPhi5USzqu3EQkaPP8kux5lBlwu52
XY4+oI3t94Hi+8h7uLNRY4oJxfWyFJceDBxzLrh2JaoAHh2v2OS6eQ5uXkxn
/rrTBR+nC59/PzwAMZx+/QYODGguNjteEdgKDKVUpT/6Q6B9QezrqgwD6idT
h94+a4I/obxehZnTQOgihR23YtVZx6BRg30dXOCrMTI+xPINsd3zv7iz0HsV
33vu9H5wl8cEvtYjwpvFjUumNV3omjhF5kIFCa61lq4O3ZtEz7V2Mn88wKK6
IW36FSkq0EbkOjJu0FDJe3xW7GgdWuba+EoPTYKlgoBTg+cs2lmV+0pEZBri
Ng71SlkMQjX1zELbwVFk/XXWR/sOFaoaHG4LxgzCt+RgTdqBFrTLntaj+ZAB
LaH1970WcNBSgHdf14CBZ467Ynw6GWDzUA3pa2FA4KfjlEfVFNjEWx/zKabC
VZfkEl7dZtAWiLzKnGJAW0mUby1fDroi9ReXkDcAvE3mmGrWfs7ozwvGsPZ3
2hffeiJrXy8dDEljvJpAs2I7QpOysGhAb5k3ypoKXFs4ruA/UxGp+JzKZqUG
9FjUoPM6zzRckL+c/YNVD27+F13Nc3HwmJBb8t11BFIzOYMa8vFIfLZA7kU/
AfZo9dal3B0DATe513kHhlGJXZYc3wCrLu/nGM3vGIPsV0aEwwZ10N7Y57Kl
lAGNj9bnN8oNwC9y2x6T9gnIiJ9rCmT54fAzVl7efl2wW7y4qI6lR/6Whzru
u/4Ffab/FDlZNQTNsQqf7vVPQ4PKg7rAEAwaDWP4mJ2kwKAHNvZlwjii7Mi4
WI7DoogM72/csVRIfOfGrVJNQWfx/3ZYxjcieWL2nWTTGTiVfeUdL5GGhA1L
HRnT9aB/2tNQeXYczLf84/8hOIsKejUZtKYRcGn/GKNmNgX2qntXzZTxyDR4
v/c5ZTwE3i2bd1w/DVsWM6cPpBNR961HiT/J47Dh5zqDBs0ZWJGhL84JfUE/
OZ0cF4To8MzkzoMX4RNgsrUttDJmBDaZRb7uMqSBRvLxiFKzfhhtDE+xotBh
1JDTgLgnH40S0CmbXaNwbNPzX72XJiH2XxbW/1IvSrQRPNEQRAX5nR2T6clj
aPOz4+kqnP1obGsjxGCoMLdL6MCu6Fm0h3+7tqV6M0rePEdZqMCDc40mHtdJ
QUIyuV8TOpqhWyEh1mLTDOQPDx1csiKjBxK4Kkd5HKQ+HDbx3IuHx3lbY4TU
ZlFXzy1pLa02oI9WMt4u48HC4JL3z2AsOlP24hD7PtUGdUXj/71PJffh6QXv
UWT1I05K9eIMKOvMvTC1JkG4/Z1eR3cs2FaDzLcWKnxO6s6W3D0OgT/b8+/u
pYP9vjlH6rFCdNjL5EoI7wTox8tO/b4+AoG2zjy8O/pQa9tum5KvNMAndMmc
SBlFyoSX48N7+1HqDUyOHD9rPjfkZTZKk5HSeHw2ebEFbdA4nKlwlgiyiTd2
vf0+i068ViU1vU5Gj1J2Jv/hIcC4eTvnbv1ZFJ9ByjizoRjSOv/y2JcTQEFk
344oxhTS5LpyS0BjBNYLUI4iln78KDhyz4Ebj14Em4Zk/+uGnSaDhr2hs5BV
Quyh7a2E0meJs+z7k6LaoSfY9yepZ2157VVpkBQq3rL3UDHKTWyce17BmmeG
PRcVuvrh7J/S5dXePlQ25n5etYEOpi7XBy8njiAHEAvOte5HlRaNA8/0aTAi
ryC5/BuPEpwcHWV7S0BfgtBpMTQLuBcSr7w7mpEVKtBOdJoAx+xOzN4YGohx
5G/UlZkCKVNa3pdhIoytqUvKfp+Cl8dv7jjXSIEV6y6RHxHf0ExayDO/1hkw
4X3248axLti+v+rabzssKsmTz5V/z4C+XUUz/8KH0Qmh4/avnvYjmpz7u+QA
Gjjf5g1a9B5GW9/e9J5oq4A449/nfPYwIMZsplSd5YdddAI+KNqUoeJn9tbH
tVg62PrTjqEJBG0DGtG/a7CozezeFYu9TAhpaqjXCBhCOgnZL61ZPkXHfYF8
tph1HU+XD4kMEMCpfu4EV0IlOpSrleW8cRY2pYujB3WRYPP8nxmViEXm5aU9
w65MsLcK/LfNcRDV750LX+7rR7561EX3WRqIRtHTelNLke3P32f6MVi0lSfx
UPJpJnBfmAvl0e9FW4VeUHhO4NCTT8ez/Oh0SBp/KT/QFge0p8eC8qx60J78
DrMM7jkoviCvR5ntAK9rguUGbRTQ0b/6XClpGireyui0pE0Dl+2fDwhDAtWa
tCrH8lEYlnD1En04AIJia4aBuWRYngxyrr88A0sPW7a0ts2Ai19LrIcjER6X
+JROa42DfR99xabtI/qTufB4wogANrafFSXLZ4HPw2lj6BBLlwscPODI0hmH
L19xW9GlQuOic9bpgD7YbjA9MuKFB4Ht1EF9lv8I/OCTvJKDRT/sk/4kW/XB
W8N9QT/5GDDd5iEq+qgF/d0uv/PkUhuYxFgUurYwYf1XFLPoHoK0zzT84NTH
wkY/v5onQUyQNct5NxYxho4yU67tT81EVlJmpQcT6OB/0c1HamMXuOy6nsr5
rQ513FwX92iYCXEr0a+dzpYiHhm7ZC3DNvTz26r1wrE52FgYd+LY3kL48ypR
J8W2GP3e00DgGJiDPL7Bd49MvqK9XgPSZXL1KKP5WpJr9Bz4XxvZ0ZJah/rE
70edTUuEUNvMrL68Ofj2oKwfdyke9k6tMbUPVEPA0Rx+r9Y5eKNIOqgQxYRT
+14oFAamIy6riZrosj44OrU5af8bOox/XRZaD1VI23TpyZ+FUcAHuvL9Em+A
gQI7zdN9OPSoL6v1dTEDooySH13Dz6K64TO6pertSCo/yCmGGw8IfkhhbWbR
czPBiA5WH3fzWMRfHsDC7R/rnuvixlCQ6Jvg9c1UEGdYem+bwwLf4bbSlT80
kNG2kZZ0qUHKsDz9YNsEpD6676ngWQlR7pn+y99xSOGDp/v5cQYkDdTIzinN
osyT2zleXexAOXdOhCgN44Hvsr3PBi4CKj2W13maSYSrqoabrKYHQWn+9Y+W
EzRQ2+9fdcCzFt3ZU8RfojsFrbPzYZrPCkAtonpfGc8A0jkQMBqxzIDWb+km
r8+RkX6Mb7fH606k5HH3hR2rv1FPWJu4sz7XjWspg885J+Eb8TO6z9Lr6d8b
O+XOU+HA4TPeU7116FPm3JWO1GnIflNBowrFgdyvfdl7hQeQz/nBg53rWfvO
fXnJ7SoJ3bKR5HiN6UJrZwakc9KIcAdryeXH0g9t5t6PYkV6oSrYQ+zv8gQ8
NGpKWt5BAV2MuWiccwOSKqu57n4ID9QgjQ+uwnEoyZuQyD6+sqK6HPv4wc93
Blw+RUSqv/MK9eV70MsEEUNsAgkunQ/msY0jw2SoR6bmvia0475mye1FAkwS
FJsvPCtAvf+GuNjr8D4lLIm9DqaRGlpMPgI6SSyLdQYMqu1oTsex/n9MY5eC
QxQR9AREs+8ptSCZ780lCVQSLKjbm+p6ViLh3SGH2ddrkx+Bh329BEVTt31Y
j4HRxLz+rjAilAZYHqw6QQKBsJ362xWG4f5hs65Klu9fNn5Usi0MD0cPB5nj
fswA01FK7o5uGzqHJdfJr6PA7T3pOlzbGpDSUZk+Q1YdztzH6bDrEOOmktYZ
mYqcBno3XdQcBt8v/gq4awz4dD71SJJYA+x6PZwUEzoBu+wbhVNLaBBf9mB4
t9wk3JCMeC3r2IFw6ifyjKVpQNu85Y6rXSu6bjlC356DQ8+0bF4QAxjgPn7m
0KXiPrRsdyQut+AdPOQ3zIuOZ4L8V2bCg32NSNZobLWovwpO/XjLW+c0B0ev
e+1szhiAZuuIpHPnupD/az6rp9wMCD3npRjF0vkC148XyvvhUP6cgrLGUQYE
DE204BXbwOoyj/mFym5kFalzctyDCR/zTgfXiI3C48teqTwts3CC3K5fITUB
V57kZzSw/LWxL6N8/joZrDuPhP1emoT9r9duEyQGwCnxeugQgQDb7fYam7Cu
k9un2krt4UK44tcZf0F1GFb27GByXmDA0xeFeztaOtCSXnXNXp1EuBskkNig
NQdeny+mbMqLgDdbMidvOrQhpz1TrhevzsExg5ZvrztGAU2fRvI3o2tSonZf
ksDSQcys6MtT63bYn1Yt6rFWhAirB4ODWMcRdrDsdoRM8FX+0h+1ux75Bl9G
0WlzUPml+EzpeAXatwP52dGnYeBGsn+9MRVMeY8NyTp8hVxB6Y3Txwnw5tKF
EsGsWVhq7YsRmh1ATwUyBZU+t4Krr/DSh+MMOOer5HDCvgMlDP2t3tvXB2sz
0V0aPQy4dQOXsiQ4hSxUNrzoWe5CBwytkEo6FWrWkryTH42j1T3jZabBjcjg
0GkvKyYNEs8//aCvP456Ys+O34isRNut+Z0KgA47eSvWy19kwqEDZ4L6ZTLR
HaWDp0QV+sEKGzqW+ZsICa/eWhz52Ynmuq2fO8qSYPRWfYUTbRJVEw6J0B2x
aB/+nsKTvxSQq/Je3bGJCV885LNT/mWh7VMqDL4mHKgLVI2ffkKAlzycTQ/C
u5FJ4NUx10us6znp21XIOYnGthznHX6DRTKvC+5vOkqFyrSoD315DCi/7Kdw
d89nZHnCy2gpZxA+KEUr97bPQEGB6t9IKQzqHe57R/owC23rbx5/tWUCfSmx
/QgIi6RWESLepcKtcLd7PocYsLp+0Se1PBf9rcff7CcMQ510oE1d+xT8utia
1f0dg95sm9jajqcAZsuln2SZccSbKFe8gY5Fv63uk6lFVHgkyv/yfhQdjAq3
Hsm3K0Bcd7vv40LGILr9qXT7rzEYGT56wwr1opS7aonucjRo8RfUaNgxhoo0
zohJb+tHdnYDMX8ZVFhVvNRuVUoDY6+gvgLVInTpzTMuzpxJkDjzxSYndxAe
8Ptt2RbYh4xCXqR7nKSD7tR1IRm5UZSWHV5vr9ePzJIsDy/vooFj6mDar+dU
mOKxa4q2/IoS94Us1H2bBq29kZ65zb1g2CdAV5DFomoV16JQTQY8dDEYODsy
C6Kg208gl6CFWzInt/3CQxBlq3VWbjMkcfy5vxaLRe4+zsalTAY8ujLp8ugm
CVrXDrnUMMtR2b2En5vjSWDownGeR7oIIn8kx+CGsci4ys3E8QITkniHmoqo
M/A7+FOpqGU1wlyvzbv6mgLjxT6FG3GjYJ242K9hV4sI9TYVXCF0aNn27Nbf
sDSgeHqPpYfF1vg6N1pfX2btO651OlfcJ+DbuTPy0rl9qOcWZ1FnBBUoNH9L
sadE5JxhXtK2B4MaT4n2hxiQgD8qYWR1fgSa3KUvxZ7Aote2fjtDHWgw9+VS
k14LAX39Oj7C/x6Dvk/u8ZWfIsFcsdA5172DoDorx5Rtw6IryvtI5Qp0SE6X
dyT/xaO157LogGAvOrK4tHAhkAyOUkH9DAkshM0E1pzV7Uf1GYczRDF0wK//
48/YgUcHhgOJaU96Uewbstol6Vnw73qhWvKkCwqNU/8mZfYjQoJ7zR57Bojj
Fygmh2eQ9vWPaoULvYhu7LmsWjULT6+FhH6ITINNV69zT+qQwGhnqPmrRRK8
5nh0cmtUD3JZKZ144DsE821fMegRHWi//GMM7jejodRu2UUqETj0Lk1Sk0lw
+27GuadLWCSc+ZFwX24avi80RijKUaA4RWs1WHcUBRYU/a7vHwDc6ewNZxKp
4HD3GDmAPgy15j1xJw63oMpimoNMLh1+teNeK77rBLwb8QqpuhVJBP+eOcXS
T1+UMAGnWbqSox/3ije9EbW5raCwV9PwU5xf+/efTtRxMDxSehyHOmwmsq0P
MKDO2212Sw8FpuRN9nBfaULeUT6JR5RmQEIT1E+Vj8Ht9U0G84t9yNvznI72
ChWSbGIMfMxYvvyrzMA5yWbE7fSprJPlO27dDXpwM6kLpdb6mbsN4JCDlgNy
3sWA58kLM6+ViOhq8oPHGY4Y1BaX+O5uFAkaji79MTvRjWzykrRie3Aoft3k
ymlZBhQ11Z0cqpsFh6v3bsjhm1Fh2J4Ld3zw0HBd812i5DBMMHdKB4ZgkaLU
DcJCIw1MPpzyDVacBavkiONPvrWgt5YKu08qEeDrOorN2+lulGtplJ/cikOx
XCJTa6IM4GFcVd3mRECOQSsO1H4MyupZPXRnHxkYBXMKBk97EPfEmODrOhyy
zRpeesXPgH05tad33aZDAE/3vym9UvRzfhvfATQG5pykt6/vkEGJ04zn0ptW
pIXBWopPE8CAwM1HV8XB7stmHdT1/Yi/M8OaL5AOgqh1truIBK+eObUY3W1D
2zN6s7NTiUBM7vqzW4S1LpbfWy5WsOZ7WWYHYx0DakN/PfydTwOjOiURMd9y
dPB3dIWjzyQU/z13/P4CBgoeCtWX3+tHL3ashW2SZsDyiMCGolkCzK0mGlyy
7kAWfo3u1tpk0DqobG5YgEHmC+qjbz7jUOWZje2HmHSwqi8aLy6gQsTz3Y2x
66rQu8u6CTdNp2HlTL/bhT+tIMa1oOfX24+0xSmYwkQGvNi+qvmkaAYE76Zo
fmbpBzdbS+ZPyizYtgT7qFa2Q8W1pPYmRzJkRK7S77YT4AFhyrH6EgVs0i0/
KPypQdvnBU4yFPDguCGN75sJgmcabucPieCQ7tOqu1a/GeB08KHz/pVJeGOL
jbIx6kE68cd+lsVTIWrIQ4tnuRAFzA/FBfRMwMwxXPHuBRrEuhZE7A4hg+9s
S8T5w3UIzUgYm+gRoeJx371Dx7Ig1ldYfuYgDoX47M7N3MWEyjrltSN3h8HY
xFt9fRQGxR+vfmOsQgcPzntpvFxElrOgim/b2YBC7EQipzLJ0M9PxN6S+ICS
F1alWjRxaNfR2ng1ls/9EdOpITvSC4rPrFtUrXtRRPhPfXF/BnC1CoQbvpmG
czJ7M9w1m5D6tkaFXZpUOFfuEfgwtAKNNRx5VCCNQ4L1Yxs+8zLhfJNl09o/
1nkTGvKbJFj1yhAVOxM4CxNVC/mtdXXgulIkMD6CQ8x189SjiAEVzaJ+tG9l
cH3bln9Sizg0su3Y+lwiA1radzg9fPUZJs4dIp3lG0BbqEkW3qsM2HW8+HPE
dyZct7+oxeiLRk8M5YSijTAQXvxRxyeHCs3nzpZvWmpANMHtImFLU2C+K9vm
M9cUuK6GG4fZ96HY+tYOqjwVdp/t6qFYd6LuT9joPDwONYhs15DVYkDCr+J+
1fWd6Kzocw4aCYeofgcO3NJm9c8vD9oyPT7Ciql8UDnHHEht4L1NutMDHPOr
+r9OD0LOwMjVTScYMF+wXTpsrhl2b1v3dnFHDSg/OpGpSWX5KcwIeXs/y+cG
N/McPVkMr79wFAWsG0DOOSMSXfMMWOCJF5KOoYLzvsgRe986ZO7MH65tOA2j
fy5ebQpNhgTZFKtQwQGEJ1+6/YaH9flbWqo4Rlj63nVJPsuxHd2ONvvt6EkC
AuWiWapICAr213PdLTKAbl+gDsnzMYFrLLZ5b9MU+nDXzVDi9wwsXxAaexKN
B25J/VibMTxwRYcv1Vt0ovvVl8J2b56F1Yp9ZlJne1HMKQ5Vi/c45Pas6ujw
MB1ybAKOG6k3wcwpCU3ZH6x5E3fZM8UKD7f8S0TrXKfh2M2H6+TMutHiGyxJ
vZ4C4nLnXnyg9iI7zQLB969Z/edwZsRkIx1eGZPllMbGoP++YzhZFoNqGpPa
PjjTIKz9x5/QNhzcicPGhfzBoJx3Gp3vx+ng2/1g9K5tBwgnJA/Up/WiM1Hf
Qf8fA/R34/eZPSlB7nw3br9zYoJ5dIf/xSNYiD+eFnX7WDuQpvtDBFm+iOPY
mbqPM30Qvvi8UPlQH8qWLf1QwkOH40Vqt38sDYHo3T1ng8SyofPXt88dagzI
T9a7b8M9AnobZ0Xm+afQAYdeptQYCR5lM2MTj0/CzfRInqO3WX3cSlITuKhw
HWuSUN80DcZ7e/StlTEQ8il+6kk+HbiGKTmC5wbhOv8FiHw8CDd7jxT/3U8D
TaeCOw+ODsFZ8nvfS9ZfYdvR5ttMXRrMj2LWH42cgj05f+4EJPZCXJDDUpPu
EAStiGX2GdBBY53h6WYqGVziPMZss1/XFD5JKr6vSwRq2PE3f8vwEJBOpFyK
zkNwJc/02XYKPO1rN1uvMQfWuTLGkRt9at6Mc3peg07wSPi4sM9lCogfZSub
tPrQmeSotw001rxe0R00p7DqKCFP/lRbB7r5uTLK/xgRfiRJYThHiEiGvvKX
h9KD3ByOVV9fJsKosJbtqNEUwtz4Frb/JBZpcpzPmO+iQEpBnv/WhyR0e6Ho
ZACrb55OycKoP+8DfbXZcKzxNPoSm4yPjJ8Fi8+F/HZUHDyWUbO9X9uLprd3
2AqKMaC/Lr8TS8NCHKlFwaajBRk/58tMVGVCWfIR0be5vWCWoTtV09oBao9C
MxMfMiE+Bv8wWrQDTM1O3u5kUNByE4/GpqUJOHjsmG+qMg7myo4Wy7mR0MF9
dpKnxmYgUTx+MK5pGCKxJ+3k1g0h7E166Fl/Gvj2bzOOtRoA3gNSF9c7TaC/
P6R61Q0pgCwoK6r9QxBwenjlr94MCjiwLeepL0vPEflunz0zCsdUnl3fvEZA
fQPlZXNb8ZC1tSP9T9w4ZJ894XC9g4IeBLyVLV4/BE+c6xWHTo3Dr199Eyur
VWi+KiqZR5UGL7ZYlJx9OsXSgX9sZMKbQWZbxfONp+jQ9lfbyrFpFEQtaG37
EwfRk9BA0XeFBBiMu+XpZEMEM3fPCiPtNLTlRX+OtwEFtgSauXPE4yHU4tHO
V9MYILZx/VZ0oELBkRkD/vVT4H7yjB/BagJk7vyUSzKiAMPkbsWLwSGgjZlM
EgWY8MHurJFYVmBNZ7qdtOsaDsDpRKb/bgYodsUnRCx9RKWWAjabT41A0mx9
WE84A0TmqF6fnz+uadrdVJsZPAQdtKIqPxc6mODuDdVNp6A16zlzDqdx4B7O
StRg7eOMWKHkbclPa6otarpupYzC03tOMh/P02D0iGIe76E0VJZ/lmr7bgou
+wtVnB2hgfRrWn2MdnDNn8s0nqSnk2Bxm6Jnjiggb/gy67RgJgrbs0P60c8Z
2N6k1+9oweqf3oWvU1+8qLnjeQyfpj4DebWXrDhsybCy2XTXUEgOCqAuqpR2
EoHWt8qd8jIVRfbycuNnsMiZy2bhCKt/GIbtnssWR2DpcyNNUr0NXcwouza2
Yw4++3g8TU6uQ5vSKu6l4nuRKOm3oqIrE/Jtyg7d1EOgGOR09LoWFTabn7tX
R50GU9vK7u2lWDhq6T+/VYHCqo/NcYmq0zB/Xuyiy6Yp9Ivafi1vpBl4NJJU
FMRosJom6etwHgclq2eO9JgWofRPBmFvtzLBf9tbtd4nTVCmr11xkF6HsnQk
IjJZfr+qo0BWWJwOwhEhBafMy5DmTP0JIYEJEDnvLz2/iQrXLp5uuKZejy7a
r0lYcs3AGgifmrbHoJdHPuhwF+NQ1YnFmZ1LdKB6Zanc16KxdPepHxp5FSiW
PCfZ6D8Fcd+tHyS0zgLauXahANuANvIVhrgn48HM9izvlTUMGhJu412XhkMW
HPs2SRHo8HuJivZvpkKKv1fChlvV6LXOLYTdPwM7Sjs5/uwgg8454ZV/mU3o
zaFwuX9eRHCYU457dKURXMjLxd2/+pEtxsT7ZxcDTsXYKz9/34vcdVS+Bcfg
0D/HjCmvHjpELvh9sXk6C3d1Z4T/mNeiqKiu6msqBDjbIlJ6Y4UAk/rn++dz
WlBaUa4h8iSDEWX51e/ab5AmPHTJXAmHQHgt8aooEwjLldOnbUnw0bwxdV6p
Hq0XjKgeYc3NYZdSDFKdAbM9DneoHW1IQO/Px0MvKXCDOOaT6RIEzg2b71Vo
4ZB+YGLb4n4mnJ3QEBl5WY/SPPKFfy4OgcmLbs9f2xiwPfXea8kbeNiqlSzu
qtqIHpkcFTrGmAVp/4F7aSrjEC9/Io2H1IEMX5WcnPpAgzMnHp3CD0xAW9IR
d16dZjSs+WvuE6sPvX8Wma6QWQ9GEnOTVhO9yOqfdeJ2O1b/6yEJmzr1Q+V2
db2XQq0o6+BcUH8FA15/r/npr9iBqFlH6PT301CW3ih+cJACHw1Ezfew5m8o
UjeYzRiHE/DZg3+WCqriwt7pp+/DWEukQBPPDBycOqLCc5sK1SJfDwitMCE9
pD8R8yAaKdp/3qDCiYHKili/1hHWnLsd/mwwrQHV9P3ZiiucgpJn1s0PbzQC
aXz3lFQby+8gv5vCmQwY1pcpCH37CV19+viB1hoTuC3mKu19e2DiScdzpNAP
dGGFy/HdDCBkSFab27WAQMNd17UyffQuTdtZopwOBg4OWc4aY4AxmxSq6+tD
+077r3koUEFcS2R1a8MkbM2R//WvoR7tiRJ8taGLBjqzN0qyDCbAeEDgauUd
ClgeHs8p+FuPusP4h+I6ZkCz42lOXlE3+id83C8sbBbqRgfX+WzAQxLft21y
CsNId6PkP/Z90bbilSn2fdGmy9YP9BJxsCUuqtmJjwYbRKU9bMNH4E8/jBZI
dkKrl0bfIQ8aaJVaT8uPjsO4rHeAHtcsLHNs5n5R2ojIFd5rv54QQC7DmrP6
1Wd0x2ellq1jyd/m5dg6tvzQvRnjrS90piQifrLnudWNTb/useb45dIxo4jt
JDiWKMJ9Nq0ZRTZLf6l1I0HeVRn/jSVlqLhHuJytkwvHDuV+Yelk8wKPM3U5
eHj90Vnfo7wVLQoxDf39ZqH8rP2Hla0jKF0zZqDKsx+Jr6EdNfY0SM9Y42wO
7kPbbel47wAc+uyy09iEpVPcoxLnB+vqkMTFJ7ljLH0uq5DuztbnnV8v3eQP
mAK3TkSSG29HG/jTX2Wy/MupllNqu5lDQBzUvIsf70Q/bDaLa0fT4U/q8XrM
+WLw8/l68hFnH1oR00qNf8+ESbcKH9fb3WCNoxTcvN2NLGqza77KM0EX63d/
PqMe7d57PlyzAIs4v9+SbxNjAsZ8v3Hx0UIksrsy7zBPH7Kvnlo+mMLKG1sn
tQkWQsiRJkv276vJC4ckF38xIWdS+crj5TKw/eS3QSGSCYIHPN6Tyb3AEdn/
6dq9GOjsjBl6p88EAefHwF/ZD5ddAl87WBehqG2p3wfeMED90NbTa6z5vF1M
vDjlWzN6KzJW6q1PB84Ovqa+hlG4ES2jO+TajsRdNUVv1VPBgvhOS1l3CubD
38Ve9R9BXw/d+6LDS4YilG0gMzwN1rKRRSI1JTD1uIFj/Xs6FEotvxqSGIO6
ltLXAwfqYGlveLbalgHIn3VuUGLt3ywOq99Z3CQkfSnBQrOoB5kGpY1nYong
tSc3o/zfDJKkvSuwGCND79uUSC0nLOR4H9OzcCKisar3tz5cJQKYXMtwYxWn
R3A++dVuDLrbvRreV8K6fiff2Ma59sL5T6+vJas0wtrS048uw0zo/FgpePh6
B5hEVk4VPCGjQzr3iu3CZ0Axh/ulx+sBGJHbZ85VTEeCX3NLKAu9sPLUmdg9
jYOAny2vqxVpiEoPlHhoNQy2+k3j088G4Pp6STUaUBBjdt00ZfMkREUIyT8V
Y+nqwFkLf3UyWnFngtCXCRjYpBGdnzMJ2UZh7elZqcA3sLf93lY6VCZWw4uY
CcBqLKburmxHFY8syWzfXb8WxHuPpR8/neE5qmkzBCPvUjTW/6PAotX5XFeT
MchqQAddNrWAyJq5oXhjL6p3+9T7TJ0Jslv0Fvnb41C2n8kD9vek/sz7p9jf
k0qrny6W3zGMnnQcu3SgrBf2RCs8iROmg/NNUoATPwE4Sq7veI6JrFnlNvKs
Zvkbogu5+8edMcAm3v1q71iIprKni07H0GESTcbuke8DrqporTSvOpRYVv0i
zZ71voOm7ZnCIXDBs9qL7b9qPMXxbP+12qKuwf0qGdkzDgPbx7kcHbBg+7it
Um0HL50sRnLFPgFsPxgcEoTtZPnBzePf/WyO9CHfEJu02GesfVqVOahcweqL
UeaOYvI1qO1F8QW2r1x3XfMB21detfN55sw7jB61hqOt8f2Ifi6jbNdbGsiO
XT06wOqfz059OXrIF4c0tYUCjNJYc3+XmQst3wxmjh9ZHZIeg0KOrQlXEB3y
9MLO8xv0w/A25JBU0YV2ZLapV3syYKTbMu4f5RbUn2uzzRTqQ2fHOp79KmLC
86Qn0yLfGmDrLUoz+/eND3hqB9i/b0w2f7h11bYQ3UnD7rZTxgNFVjdGNpQC
mr/Pcykq1yPZq0HntROmIEL4l3zxChW495S1LGZPo1Rffp1qMSJcspgeWHdp
CrT9rEnPskaRIs9JrWYsGfSfnm8LMpyCNNLpXaU7h+FAzBPu7yzfdPj7wZSm
XQOQ7qSSuDLaBzil9ZgQJg04nnZ8MSQMwTvpocpLXPXITyrFgMiFQwUej6dc
8AzAbFPP32Udgkg+zSbGJCzqPvxlw003JhitP6556UsfmrYM5bl4H4e0Pzdy
YrLpkBCVFSE+P4MedPImLdM70G6eId/0vlnw0bWWOScwjdqPHmV0fepFj+gn
OPrfUeCie6vw/eVx1PATHaYaY9GcmnzU42gq2KgdUNbaOYnO5WxYNBfFIq3N
39TmTlFhHekJc1KfiLiv3rcMJbSx6urdez5uMnDner7oViWg+YQt61xJ7Sh7
Qd3nBIUMqnearbXrZ1B50LIRxboHzYR3vT9fMgsc/+/vcZceJpXNVX8TdMi1
b+z4L19pVcS5QW4OjsmSb0e0d/2XT+969JHNs47+7EpvEML8l0cqJSJt7UzQ
bOKTZHOa/5f30rJrY3OKHpI7nyhwYf/LzzQ9UWFze7N3Dh7GzPb/lw9/Z32b
zbdNWfkTzdUH/8s/e+xXyObDcr/fM1FdHf7/71tOVg5wpUNNf5XOwJ3x//Lb
dDVK2JzTrh+3PYfJU//lxy9dDWbzRhmlf8ac0/H/5Z/qNZWweaDqY5l/f28g
/5fHkxNrZkynITl4Vp3N7/xffhdx2/HMWCwcstycweZxOgMNn2pG/apJhx3v
9iVyo9nr/v/L3Sy1enya1atENnp6TmxO3VJrQ5zLvxHguVpWZGFUjXR7Hsay
ueq4eknx2NUxqIogRWbEIdS/wghj88Hz8cJpi/qTYBj/r7lHog5F14SpHuql
wsMWF7t4xhSMFdyQW4ytR6hU5Qeb+9QVKykkX5+BUvtPtzn0G1GwhiOezUEy
namcbP5R6L2nZJViM0pO1Eh5k06C6buxYX401hw5P9niotaKKn6/2ixuTQDB
3vgnQz9Z/TXqfNRmq3a0vNH17crlafjxyUaKza8dVIoj5Dl1oi1cto/PSI7C
9EyRFJsXs5vc6nRTqhvtTO7sc2zvhe3qS0JsbsuDwnfkhlIPqm09EH3fvAoS
f08Gsrmqoj3CQjjWnNbC5yj3CRai6k8/pdjz+qNe4Nlo727kq9zYsuDTjYyr
Bjj9WHqgPOA9nc3LCbqbPrRGTfBmOSGJzc2lb7+AZ3OAHP6lcdvdayFZ72Ay
mwcs5VU3ZnOPu6T9R979/QbO9yM92fyjRmNSMZv/DDjEZXFMIAO6btkosTnQ
nf0n9dh87DYP3K4N3o9qHi5O7GZzso+09fPYrydU75HUE8hAR1+l7GC//sf3
Cwbs4+cvnuhM+vsNmZgLOLKPH37r2BD7fHQ29LyQd69FgwJib9jnk+ivMME+
/1hZteuXURO6tokcyj7/q7yEYjZfd+ZW2AvbxXY0pfN0G4cNA/ztL+ezObeU
E82zyrwYxONxpIPNuyltM7Zgc2hWQ6prsQF9iNzHW8Pm0ax9eiM4xvsRt3O7
kQorbog+3uR3nQ7SfnZCLhltqD52LIb9/IOMN6Od7OceDBc/2yHZ0I4eRk95
s3l9+e89T9mc/i1H4w1c3zuQmsw8/TAio2vr/hWwefOToqCVrdqFDp17nMzm
qiV/3Bxg89ROTf0tbH74Stt1bzZP/MhLYZLNETfLWqWxedoAvbElzVwCUkHJ
eWyudnFTBNdcPAbZjTfrsznUHX+ed7P508zSvK2bjXqRtOzTM2yOU6006xub
39Rxc5RJWelFjGGrIZt9U8hlzmrdBUkq7HonxiGW3ocG/87YsnnEiDAHEzaH
6LhB1IbNAaZ4vn3K5gJTjuh9ZvOAYU+nzodhsEiibGfuEVYcJR4f39xEh2S+
EL/4V4Uoo+BMAfs5EL34BFX28x/eWpcR2c8pMPN80MZ+bsEOo0w19vMKjKPv
XfnR9hWZr89nsPn7Em49FzZ37/Lr7AYDXAnCiA7tZ/PlAvVq1WyuHGd4umbw
eDna/W6vAZur3p8X7sDmqX2npR/nCFehprGhl2zOuM56vx+bL5bY8iR0+QpC
PYIOKmwe98PERAKbw90/k5zI5leXoupC2Dzr/3B133E1v/Hj/5NKZUWUaGlJ
SxqU6KmpVBqS0ZB2IiNChIyIjIYkKSWUhkp7Xe299967c0qkQep7nu+fz+d3
u33+et283u8b3u9zzvW6rs51f1yEa8wPHWsBX+0Hs6cFZGV2LdM0Vx+JqxX/
hD7U8sKbSwNORYTJcTkHXea5fLFr6DE9LGM040kx4ShPTBrNLiYHyyUubqON
6836CsWuL8Mg9OQaWexePClJO4K9iwN9u6Nagz6ASPaR79hpYFG7rYN9hpOc
F7pfCn4CXpOOV9gbuB8ZcRM7A/313RFrTkSBXVfhInr65y78NejoI8IlVauu
xULe2/Lz6Mi56xeN0Y/PXZXv7XdMAMOJM/Xoqi9zuDxHT30k16+AvjUJ9vNv
4kN/fMr70Wd0x6f4eS15OtNAViNoGv2uzLH44/i6a9tpRt+gjS9UnoeZTrTx
hjEl1QPHGeFjgRYhq7JhKmvH93Nrs+Hm5NmMgVdTMHSJO8lOvgB62GuDsefR
Eq+1CTseuWHPT2NvIknocQ72J568jTiG3YnNucP22E0wmmBNwI7CxkG22YZL
LbAje3rmCKUaPklvscBOQJRDJj/2AUbSd79HDy+fF1KCPn6FSJ4dunhLiYuk
JbAFTvVS4tGLN87F2KETz6m+qIOOOuSOo7BuXwu5vZA5hp76h0D4GnTILH3x
5pv9IsD+o+Nx9MhG1aMMJXUdsEvmutHphg6YsjA6Obp/DHaeU1yL/ZHj2R7r
oxSpRGXH7zfYISn8mGeIvQyfWL4O7Gf4bo/Rwm7GXG3vZuw+JGzQ+IUdiPAf
z9uj2lshXFPbH7sGypm2X7BzsF80s/peZDcM7T8chZ7nhqlBF/p+hgsWNeh6
HnQG/MD9o2yvDo6MSGYSn8+O2riPVH/teXbcX/sQJj3Rhaepp0jiPlsfhRVr
1GjzP8/I08d+0K4jlsYWWUx9EHbwawh2UjTEnFKwm6JmuvUJ9lJqrj7tm/k7
AKPCWhew89GbpNnYX9gEf3ikF3mnR2ivyxNb7FVUHdP0wk7FTakfuthf+FSl
vHHN2mpS/WHGBjsMpS5KXdgdmAob7+xPzYUwD1Fn7A/ceRauig4/xfHeO3T5
xlGN/Ojx7+pteRHHMwSvlkdVlXmHQD0s+L7f32aovOc2p7swCjf+3lvtlNpH
zDXWu2K/ZYwpYi92Roy+sn3B7ohPpCcz9kbsI7nmsJdR++WH3o03gcRqYnzC
yqgZtGfZJbAHcSAoqPH5rnpY13LLArsQM8OlWdhBqN9KFcUuQtW6s+zYQ9DX
bAt+00f7+zxrsNvQPwQr4zlfqh2uBZuxbf3Yi9E2T1rEfszC4w/rsRtzVDX9
MvZNgsSCH4U35cJ1y1xW7JysPmozip0OpztnXLHbIdVW/xl7HVqMyk7YoaDS
axpjl0JjRc8V7FFsj7sdxKAwDCOqmYNnadfoXzlHd+0uhYLF0T3Yo+Hm/Di6
s6UaJoST7mKXxgrCObGf8pB5YCX2VJYTVpdhR+Uvy8pP2AHx3kG/H7sgYjdM
GLEHQjnfddzHahi64+QfjdOuI9dMK5Mi8+F+mYY4dm1iZpl2Y+dm+LtPy1ul
fCjha1+LHRZOqkUbdll05h9Rn97LhRlNsyMuN4ahSc/wdD7t+sbF3Ph0VDYU
VUwzYQfn3rTlQeziuKZu2489nDuDtzqx23IybnIQOy4ZDM89TETSQO/7qef5
z2n3Hbib+2nXM4fOp/KuTYJVWZVlCyvySY7XE+ZftHVDqjoX7w6zqf+dH2YN
fs1+oV8Ipl9ZBuQDp0Dg7hrpWvNv5E72cs8Zq29E84as0/faKdA+bBGBfvhC
neJ/nriOmhqFjthwr+519MMn7RXc0RMHJZ0wR0fMqi9kfpM9nzwsGY0ovJEJ
Z+dU1qFbNLibZ79EW19JWjmHciQXEK0y4SxcZw2+DRFGP/asrfY4ejK2rj4D
dGQbBR350U9qX22t0D5aRq653lNHR7lLpn4yYLmRjDz6/QId204NpaPo15jz
ZXahW/s20/8SHdtWs6md6Ne+0G2KRs/JvC1IGn3nyVn5u+g6GRp4d9A/ayA/
44Mz0M/ZnU7pQjd3aDm5AL1ca8D1KPRz42zr36KbezSsFoS+9Mf3nnfoTUEg
7hw6UzUF5duju4rJ+h/Hs9HtDS+sdkGvl5fWxylVkEOYMzdYrCQ5RMg34+fI
4ymIZc33np+MJF/s4zQr+JqIwb4yY3Svai4Jldn82SBxv9qI1S2BnGEO4UQn
uN4rfLy9twy2UP9yoxfcLbWvE52gX/L5DFahBlC6+4w9USmbrDDa1okOV+Lo
yOJkXxfkPtYQQKfoUZm2D31ihbeiMrrErVrzx9ApNihxmKNPPLj6MaAHVlxK
+PthsQTcZNIvogu+5rzsh+PntzgWLfSRRONSFo6fnmD9Hj0kk6XdRfSRouZU
CXSRyjWhauiTr7PEW6NXPrrudxQ65YBvq0+jw7zRGTuBLjNWWrgNPebKq25a
6DAPB01oo8vkdZS7jh4zRlXSEL207KDZevTTGxI/7Uc3PS1ooIn+M+aMxwH0
oKrtSRfQgT4pTV6L/vPusc4Z9KCmJU8N0IEW5oifQb+tpZmtgJ67NyXPDx33
4+XizehOS1RMj6JDdZ9vrUJ/uukwnxa6002yzj/RoW4W74tGf8rkpSqNnlxo
7uAL9OXqjhVb0ZUT86kP6F0f+9H9518rzsbLo3vd7q/0Ar1r0e3Lv9G/Kt3J
eoHuteK2nAv69jZ3zkfo3RUUM3v8ffJBLeDyFDrbqVaR/9xtzY2T8U/0CVQI
vQ1CZ3sp+cVtdLf7Hw1Yobct52fYhd5eNuCKKPr74+buF9Hdez3fo4e+N1r7
wTx6Xw/p/cHofOVPCB1H3/ui0DQEve90h/1zdL7b+30L4iXzCYUr+OdzFx/C
CT5G6IhP+a/eVD5cSpQ2tXZeGy0lrVOf36Ej/pvS/hjdcphr/AaL8hrCXO+1
4ftVKjAcc7yKbvm9WeUudMwia5y3oV/2Xtxqi1660i6AD/304LkX29FNq69c
Po1euuwy9ypR2vWn2elBdNPh7y/nodO+lJGpi267IpqBD7326ufrjQ2yKkl0
dcs8um1BLrEP6LVP10QM1gxFkfTwE9yfJMvIxh1O69CJm1w4mOzw/S2c3iU9
lcoYDLWijL7oxNn1kmXQpTObvN85nJoKXh1bv/3n09Vc36NLv2R7ZAU6dYm5
RxLo09em14yih2eRU1FAH//ecpMiuviO0SRb9PClj57uRR/vZuLWjy7+up1W
ATr8VO5VcejyZRK+X0GPv20L+0d0+HoKSj7o8hmvri5Fj3/7255f6P89jlLS
sQeg/jJfHjsAOh8KeNH/vzc5LYs9gAy6w3N7Yurgp7iWJnYHAt/Y6GKHwKe8
4Sb2Bx5T+cexO2C66TMXdgiubBNRw/7Aquztqdg7uGU8aIH9gxCDmCDsHkyO
X5zE3sHmgdIN2D/4KvidD7sH14+HymNnYeD2L3fsLvjzPVHC3sIvadFV2Fk4
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
HQO+LLu1hSJ4s+tMTsqCM2sqeksZfNm8v2k14M3uouVnAWd2E/OWvyb3qN8L
XGUKrmzzz7Xz4MmuDYiVgzfcrsI8Cv6wd6+kGbjDvzkFroPfnCU0NQGe83rG
uX+Os/X3mX9u96PfIj98R16jnHXG//zu/9u/+0rs370k9u+aiP4rhui/Qoj+
i8WtogVczy3JNr2SBXWIsebeV3DG114KJ4KLLJxxQw6c5HNpr6PAR+aiqJqA
Ax3dVjVT9KwV//xwZXyN1IpC3zlsBQdaIeuBxfmATyj6YHE6eND4qLlqddIc
Krq5x0DvdxIK2Wrfybk0jEjE/uNdYv9xHbH/KED0j1VE/8hJ9I8lodOqZ2/O
ovXBE9Eh99qxbMrom/NmQ6iK3P4B3FwZLsmN7QstWP3ydWbwc9mDKcHg5m45
nhSw3q0KY8eTM+DnXj1T8xpc7fI+kguayUeSGuZ0lSXDyOJeOt3BfRQkJxdV
etypEr3deCh9eaIbdTnuyTNUoSDysfs0n8jl+Jb4YPzYYDe6Yr/4DbxY+hu8
f82NMjBXya7d4MZaEvX7Nv//+tTcNyd0fxZ9rx+WlEweQH9ELHs/ZHWiDZ2n
KeB/c7vObQYP3Ns75xU44PRE/SBR9yDqjegNOymKgkJv7xi4PdeMROI+nHrG
14Y+/DLfsP71PNr7LrTpM00kdt7OKC+S1IZ+b3tWCQ5up8slzqhue3TFV+Of
h3vphMafFNyBa1cshjwDy/Aj3je3G0kU5PCCkgcueArdaRZwwrlYD/GBDx5L
PMc7SjzHkyee430paHDvr5tC/CcX948oj+HHNP4L+jv7UFXQEXfwvDsvbC4H
31vuU5UCuN483Ckkv1MziHZpcRB8b/rEwkhwvSnE58Gc+Dww/Gc/OvQ/+9GS
a41/MpNnkW976KQPpR8HuwlkqKd0ol8Cf16DyyshpdgGTu+lsK2XwOelE/xf
XZCoWxJ1a5tzCbVzY+gz3xFDO5tp/IPveJFcaieyYksZE1AbR1L2DDHg+l4r
TIwHz1cvttYMHF+v9qhv4PpufL6iD56vj0erE7jmX3R31IJ/flSsUAB8cz+i
3kbUTxD13x82bwdvvmcp69uJ6m609d5mU3DnNYnnq1eI56vWxPNVDaJuRdSv
EvVsYh+HjdjHGSb2cfTiinPA2e1qfrYP3N2F2lUR8HZF1TRnjRw78KZ32gUX
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
n1CpOXSu4UGG1Z4OLOok/ljLsxcrNHd7+VH7xXrCpVX9j0vrd+na6Sv89di8
k1ZvA3XdaHVEeXhsmoRS/6ZPsrc14FU26/RlkwHse8b5qHTFHMqnfaDDJxOO
aQdWm5r7KFg1dofX5R9dyCb/0+69jO/xHqNdzk/NKFjD9Xp6oVovqrxecLv0
8Qf8Jz0hj76QjNs+sWju4h5Aw+PbGg+7R+I7r6dbGtrmcMlk/+0kn2FUld+i
aJyQjl5ciT4XcX0ee/U6m7FbtKMjQRaZR40yUeBL4yWTJQr232bQkjnfiS67
mP0QJeUg4UDjY1iJgq3eXy7zP9iLknUX5LI+VqHQ7W47PfbP47mQ3mMKQ61I
7eO1HXspJDR3e/+yPc8wvst24OuXXx3Ifqn1p4fWPOpKPeHFwlaGvXxssxse
tKHPp6vJ4Rrz6FaysEz5/jK0K8GhxsC9DW0n9nei/7O/85nYx7lI7OPYE/s4
tES+RZLItygQ+RY69y3yBec68H3yk1Nle5vxX93Pe/R1KSiI8CKPEl7kAuFF
Mq/+VtRzIqHBbWaX3c6MoETXv7p/uzrQesIlpCNcwnLCJeRV8+580dCFRh/t
8+oumcaGxVMT6uJjKPWjZFLFwQHUIcA1fat2FB+8vmGy5sUUCiRcKhbCpTpB
uFSCbPeZnlL/HH++37LdOVqLthjbDrBT/zy535cCNRWLUWzE5SrW2lncIZnh
q8cziuwWd5S4bmhF0bzX62++msMfPcp0opL7Ue1/8reviP1BmtuXS0lqDXjd
rHz4l/p0bFl5LkpCaAFpE/s14cR+TSaxX5MpI7Jh78YZ5PkuS69qcBiZiXo/
21rcj4Q5twit+1iKL9qprp46QkK5yXwfj+wbR1mE1/CW8BqiCa/hNDHnv4aY
879EzPn/v7n3LJr/m3u/TMy9/008V48nnqsvE8/VG4h+P5/o94OIft+E2FdK
JvZbrxH7SjcsxRjjLzegL4G39c6vkTF3SzL9e7bu/3fdVf2fecsG9qeKzl6Y
w9sXO4T+kEvxtwHjO7d/DiNdo66qvFgKTgs4cbKF7wP+MZA1dp2mBx0UFLDb
JT2PH9xg8FnWyEDtfNZopaoDPf2tkeJcR8E7Q/XXX6qpQWK7Y39ca25Hy8xX
e4foWhHlSSfL1TUKqr79KF2+rwFNbk9/cvzmMNLj+DbpeWkO9a8M2Bxkq0SM
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
+g0c2Wxo+fYTtw+LjQsFPwdPLk3f93FiSw+S1ZVpenXxLbYwyz8uBZ5MHCgy
I3Op0/KMeWROLckp55L5VID2T6/S/unvtH86bPNBoprThVR0TEok0jqxcI6e
yLxF/+uH3pvVD53Z84zT9w3H6J7nSVpYzRn3ClRgaCGYl8XCh5ydahqFuEiN
7meK6X4mnu5nZt4pXkLfKW6k7xQrfOeu9709W8SJ80+Jv1mhn32Jxx2GspKJ
w5fR/fAruh8WoPvhAJZk1Ctw4cHEkJvG4ERFho2BB/jwxx2RHhngOTWl/GCZ
CT+0+UDMB3dw3cw+OXXWPnkHzct5zMrLnbJY+oh4LqUlc9p3d2Pb/Ynrgml+
TJXmx9xpfmwmxzU+K8dlJ/bkhpg3G4+InKpvB68Zi3wNDQen2dH3VTfQ91VH
6fuqIe2GVrfBZ+uvMzxPg9dK+BJXdYHTZuc5mTTPOZNv9JuVb/yV5oIe01yQ
Cs0Fpa1cGMiRAxdfY7jGVJciMznXrGrnWtT6aITF9+cg+nSbsTc3OROHh60V
tYmrRa58c2MOW/QiuVzbnxafbsG1rS8M4sB1u+j+kEX3h6N0fzipxJ8WOFyH
N/58zFxx/jtsz9dqe3hjHxKn76H7zHoPfeZ+veqBydP/v19fj9tm+xkcluYq
XFMALjNvWv/He/DYQWXTabeJGt6adtyujG3TfvvenvO/BIoNOw==
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {All, All, All}, 
     PlotRangePadding -> {Automatic, Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["f", "4"], "(", 
         RowBox[{"x", ",", "y"}], ")"}], 
       RowBox[{
         SubscriptBox["f", "7"], "(", 
         RowBox[{"x", ",", "y"}], ")"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6771689891586637`*^9, 3.6772187295766287`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6771670609267683`*^9, 3.677169238561728*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6771692367427397`*^9, 3.6771692367576714`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["f", "5"], "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{
      SubscriptBox["f", "6"], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      RowBox[{
       RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
       RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}], "&&", 
       RowBox[{"y", "\[LessEqual]", 
        RowBox[{"1", "-", "x"}]}]}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677166984902882*^9, 3.677166987278654*^9}, {
  3.6771688717772217`*^9, 3.6771688720807867`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJx0nQVYVM3XwLG7uwu7sLAZAxWwu1tREbAVFVGxsCixGxFURCmXZumuXZpd
ZelG7Jbvzr33nOvd9/v7vM+zLz+GuWfOnDlzZu7M2T5b9izZXldDQ2NtMw2N
eszn41WuPlbDDujAp6Ukb5NVdpcgoxE6t/vrexLgkiszEx9uWBr8sjS7VlM/
DPmg1s/WXRq2LljTv/0YH5N45JtaR80N3bUmOClyoJemvhx5RNfJ4y4Omxd8
aURkgokiA7n7B0eTzLvTdWbf3FIsMVEg7316ZtqOPtt16mjQfyrkgeGPkrrY
H9LZ6J10RVM/H3mW1635GXdP6wTtvN9F374Q+dSMsoGSkIs63XoYO5soipFb
FvaZnHHXTueobNIYe80y5N1nL723TuOmTua5JiESkwrkJa0ujq9ucV9n3KSs
eQpJFfLPjzafn5X/WEfZq+sbyZ/3gt7erOw2w/op6hf0Kj3R6OsP51XB8DN8
Fk8JdSk3s5eCnoEbtBzkvPvdHSnoGfiFdk7nzmrdloKegU+/bXTF6N0lKegZ
+Nsrelr1408R0DPwhCXecSkDnAjoGbjO5+3zDOy9CegZeIuJN3rUiw8hoGfg
Z2QZnRfYxBDQM/DAzT+b1YtPIaBn4OaNzK5ef59OQM/Af68utN3wRkFAzxHX
zw41MPAkK8z/VpFWeahf0JPPpMkDfzjvRH0CN9dJaF5u5oj6hM9tAeERRu9e
oD6BD2qywvOM1nPUJ/CbCxu67mL0D/oEvle260m9eFvUJ/DB7Z/3SRngjfoE
HtM//aG+fQTqE/jD8z62dRn9gD6Bz+gtM5hvk4X6BJ7/utvJuvEq1Cfw230P
pTu8L0J9ru7+R8+H2lHpmqWTJYIdQ7v11vo9n3RiP+oN+Ll3PpEb3rii3oDL
fCYqkgd4o97gc079KtsthZ6oN+TPKxolD3BCvQHfv+71iHNat1FvwKv+fns7
flIw6g3LLz7SxVSRhHoD7l/zxP6MVjbqDXjB7rsRR3fno96Al46YZHZGqwz1
Jqsab65vGk/O3Nih1ehgDeoH2jG2S7r0u7MZ6gf4HOliaZmZJ+oH+Ee7NsuM
3vmjfoD/qPda74yWH+oHPsOGLJu0i7FD0A9w/wM/19WLf4T6AZ59sF9i8oAI
1A9wm+Ar+vr2aagf9AfD9QyonYB+gDvNSSqYZ1OK+nHa6JdpwvDyXt7bZsUL
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
MkuiL9ufjcN6gJubpRqtfxOP9QDvszxmqF1FNNYDdrJmdJNfJgGJWA/wK9uJ
y5A2yVgPcNnkiQYyWRzWA3a1R6f/G82jQlwNfMHz9A/HtWVSxYzps31Mwkn9
Z2kREpMy0nnWw7nrK+TSid9apSokkaT78saltbVlxOdvt507LVIxrqj++eix
iaKUbPy1WVG7WigPvLNVq/vNnwgc6t8Rft3Sv7VQD3Dd3ILs2ki59IT1fj97
zVAytu6UZvr25WT6rqpT7walopzAw4790GoWmYrrfZiv+ps8mTxHe5UO2A3Y
Ycgg7WOHFaY4foA/cPTsmbT5pBDX8vV06h5sEXZ0jw7YDZT3dTEMX19lRSzN
Bn7UZORfaXWneRONcjLvxbflv0elSqNaXcpSMHJeyK+z9K5mBWnla7e6alSa
VDNi1XYNn0iyZ1zSyCWM/KXvJ7brWinMs1B/WStZ0l/nCcFg/zAfnep6PmPX
iBTsd+BDX+9b/UE3Ae0f+OQ+/pMMPYQ4E+K91nZfbBWzBX8C/JpTzbQ9LYT1
HfT7lHv7fC4YpqK/gvK7AtMTzpYlYH/Ne71nhD3TXklFgfNq+1Th/ADPK1dX
ebb9kIryrGXPG6WTblFRzftfDEb5kWv1XJQ6U5i/oN+sEg+fqewQjv4HuN/0
PrPedRXOsYAemr3yd7TamIJyQrvii7+u2SqVo10Br9o4T2fsqlTp4V16xpqK
92TFnlEGTzX3k/NTGpm3HulEwG4z5ptYaOqXErNOKmVtlQztHHjMvIs+G8bJ
0R9CP3e0HVi3dNn4YIjTYB3j8fnNn47VPqh/4E1ubgsr0A9A/fzpZfNDYpJK
gmzstrfsFoT6BH7r+Ln7+kuEc1bAj1nN+bjoSiByGB/zPGzefHkcivEkxNuX
v3RtppD4ob1B+e4zKh493iesZ4Enhmp1yrggnIOCcbP+wa8PYX+E813AnUPb
HCh2E/oR/OrJ0I9JX1OF+Qv85KrQ1CGNfgrrQfB7o0K9z3fqLcRvEKdt8n/7
V+Imw34HP7Nsm8a40uXCOgt4gzzdwKevBPsHP9ai18d7E64IHMo7vR01ZNMP
oR7wSwbKjc1unxP2K8AOe01/6k3jdqyH51tnLX3c8HEK9i/E7QbHW8340VPY
nwEeEClv9fhWCvpP508NJthrlhDXhcrc2g6CHQIfmGFeWXeNsO4DPqtg9JdQ
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
6Af4ohbHZ1/9kov6AV5vusaGSQ+KUT/3Ixb+1mZ4cvQY7R0dqlEPcM9xrfZ3
S52x3qgH4COON16XIpWiHoCvlH9ZOt4/BNsLvOFDLyU9JwPtBf7g88oAoyPe
2F7gafX2qwabJWB7gW/g8/BDe4H32z13stmPAmxvw82tN9ozfIhx6+Oxw4T+
hTwnhQ92rPPQ8cV2AW/R3G6Ye/NwbBfwpVOrpM/aRmC7gL9YkG7rZP4Q2wXc
OL1dKn0vBu0C3vzNmYKi9jJsF/BRfL59aNeePymhVQy/8aluV1JWgvJDfpU9
jTLH0ffaID/wMzk9hppNjEL5gS98Vji06+5olB/z8J887th0gyPKD3yCJLl8
hEsgygn586/w+fNBHsjT8mv8kwv0XhXIA/zHsxeD6X0okAe4QTvlTeH9hfD9
Er9XXPkd9scJ53HI3zK9cs3n+iPDsH7gpkfGD2p8LQHrBz7bIrXen25JWA/c
Dz33qO1mnbERWA/wwlkRA1KkyVge7snGL4tLPIL6dMc8MC2bWE6i77+AD3S8
5P9VUkU+t1yUUzc6Djl8ZvVcXdxhuTU+ty/rl1yJS8O6vvR9Pcg/8+BgQ1OF
M+l14l//qSJb+PlulNr8vv9yzOg6TP2Gs+5kf7WC/iok9WU0sYUreSXvdfvd
TvCrxaT/ZZro15mUdrDL3j41HP3hrFnJfwfqO5Jp38+vG6QPvJzE/o3eGmxy
lyT0i/3TNCYC23OE1U8okTte8/vg9BDbBZ+Dxry8VHnIGdvVZv2l2wpJEGk1
eGRbj6dPsV3PIJ+Z2jyo1elhAq1fVzXecMS4JGyX76xtt2n9WROWFZn9SMV2
nS5dkkDvg1bvjzqx/HkWtstu1tvtvkx8uMLp6TXfKiXK/97xkKEmE193X/uH
WQsJ86AZ265YsjTu+8ukqx4oP3xaGDXcHHDGA+XvLcqjJsxTXLviSOUC2eua
tsI8xbUrlqy16mxhqZOL8nPtiiGHhm9p9Du7AOU/23SMIb0ffMjQxty0WynK
P5bNby0jf+aOu//vPMXJLyNkR9sXG0p8UP5AdlykkEPTvkx4MNYX5U/g5wUr
tXmkNdtfMiJxOz/MoJkwjyz7XHmS1l+927RZ1PQilH/HpSOv1zL1r3tUUWS6
sQLlrGH1nEFmjB99psksb5SHkzOd7O5Y2Pp0UTDPlcSK9edyMjrW4sDLVqB3
Fc8zyDo1/8/Jn0EmqPK7j3QR/P8Vm/Sh9Lzu+kjjr8cLy1Gel83anTJR5JDu
v+PHPtkKegB7ySJOuYNO6f6WoN/WZf1zJjk8sv2aBaGJKI8u5MNW89seDmOe
OTH1V+XUftKyEPz2zoPutyUmueRryPbiKZaB+FyuX5Rkb0jhzQHtA7D+Ct7f
Xlbzt/bs90TkkdKw2rm7F4G/BT0XkuVPEzR9N4YhX7BS95OefTEJu3D7T/09
Ecg5PZQSLSPDjMUWgn9rGpLXnO7f3J035vWDq4J/W6Pc0khuUkU691gztdF9
8G/VJL158rmTzLp24Z2rR+xj4N5ZJVlX+n3z2xwJ2RMYN9HdHOQvJ6sNgy6a
SiLJQb1CnTS3SuTeNL0BYxed+ja/1PAU7J+WknOrLLaY1iaTQM8469DcGuQ5
t+3Y9eWoq422z1XVoB0qWJ5Guuff/GVlXIP2oGR5Fknurzqy3qoK+3e41eZd
3fRVpGvxlRFnZ6ShHfhG2G1cq8gnLW+PuDT8CPi1NDKzTtjyuyZF5FZA3Xm3
7IS4t5rtr2LyzvrImESfVxgHThh3bpGCWf+eHFs4wLJWeF9fxZZn4tBUx7a5
yJlxYUjPaZeTJJ1zyiajYR87hNywmGdAz+2Pkj4MaugOvJI0O8AmjCBKt86T
wtOCUf+6/PzibTfpkNImHTmsm/Ybu69qNust6v+x447aa5p+pGuMUUad5yrk
fXi/Hb2vw8FPhgXIYX2RdSlq5pOmpdgvtuw4jSIH65yOMOkm8MHHhkZ03xtP
JpZ836pTU4n8tzLqJPWfze9PsRHi8GK+niSy2vyjS+WsMuRfSM9P1D90PW7/
+2OT99i/eux4TCXn/d603ywvQW7M5u3IIgEDOlo3w37P58tnEvvxTr2rVxYi
5+xHSY6566X2W1OKdgKfNR3jbYJMhfhNj/cDo0V+QMnzXKK68aLF5iWpyCG+
2vrrZfX+uFSsp4of71dF4x38g4oMWXo+6vTfQORcPp488lNxqcnoZsHIIY7S
z503wMlcinbL+dsCMr6htcTw2HO0W66eAjIpzO3m/EGuyCGOGmvwKfDFW1e0
W27eKSL27Qe60PtKwLl6isipn/GZ/3KIr6bkJU+j9y84HsOXLyFVbp9qad5F
jocQxfZjUbW1FWTH6JGPfr4GO3fny1eQ5Vq9yq7nCX6J01s12bbw+KHAmfHo
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
tKgzevdg4dwL3Hfh8r2cwDgZ+CSWX8V5DbgxpzecT8Uc9ueVyJeyCoG4TqX2
XDcC7QJux+mZQLu4/H4ZZC3z626bhH1CuGdvyOkH5RdzD5Qf+G1ObxhPisvD
+5o05Ce5fOPYXnE9cdhe4J7sh3Cejc03yHDzOz4N+2SmovyQD+An++mB8ot5
KMoP/Dv7GYfyi8vLUH7gP+jHyQyUX1xPDsoDeQiWcfaD8gBfyo0jlAe4Basf
4d6UuPxblAe4Ay2+QXhvBXkOurBmGInPFfN0fC7wa7Senip8rrh8EdYvzi+a
iPWL+VusH/gJtl3FWA/c03pGzWSUcD9NzAuwHmP2vnIZyT2u/dghTjhHDfkG
mrF+NUvU3liG+zBOoECnVFSeno9tVe1ytF/2W+Tw6Sv74PTv+Vg2P6eJK6lP
8+qsgv15Zp3ItsuZTHlAE/AJ+awc2H5x5POZwPuvfNKUr78nzRuA5+UKySe+
/uHsxWk4x15M5Hz9HwPHNb42FeLGUuLJ13+JzxcHcsO9NnX/D5/sPe5/zsHu
Yf1IEPnAWM+C6YIfXsjXk0DTFhbEopyN+Xoa0A9c54IfjvuP/9fn78GdZO/r
Cc+Fzx40PdsZYd65xdfD3u8+KDx3EV/PVz6vBTyXu38nI83otem5F9WeKyPr
2PyB9/C5/dlfpHB5k5Y8w+fu5ev5HcHUEx+Ez53H15OjP/SFrnkY9ss+Bc0v
mkI6M799fjZKTQ8ZxCGHJqI6gnqHe6s2bP6Bw9h+Ts50ojWN5rHRR3kc+Hru
snmPn6Lfrks/fNKJ0YDj97uFXUd75dxkDpfnquIhPhfulV9iv5bhJT6Xkyeb
6NF8ApvB/wvnTgtoe/85d8rZfyb5RcOiDC/0w9eY+un50poXb08Hy2UoD+e3
c0kMzT9Q5Y7yQJ6Aw6w9SFEeTs53JPv038TPMeCvIE/aWzKbypmXjPJp8vdE
x9N7+oOF53L3JPNIFq0Hz5+D/vNIPk2DlBaHz+XkzCMfGg+bGZcpx+dy+lSR
VW8mp0hvC+c3ODkLyWAXJpL6HYH1c88tIPo0DsRz4DH8PcQCLn/afqEezq8W
k5E071Biglp/FZMyNn2RAuvh5pciEqBx+9yvbOH+1Bv+XvKfUYw6lXKspx9/
P97lcKOf48fkYz20/HBmvUPzRV9eIJxDnsPfk1b3n/S5NC+uUYuwbaRviag8
PX872vi564i94D8ryUSfPycVORKyrcHXux1nwzqunBzi7+NX8PkZOF5K7jps
U5jUJpNeyoWfMjTikffm72taH5w59MtfiD+LeZ5GJg0xm1jkAedaC3meRQ4x
8UPnfPB3Kt5uFcSU/x4HsOfB+gpTes72suaEtco6wrmUQkntHnrONidxt7Ty
dinaw0NNzX30nO0z3Zc2Ay9WI+fuvxaTRPsT2nfwfG8KWWOvt5+es408MX1s
RK7A4b6sT/jP/Jl4Xi6G5+VkP7NKCT35HvXP8UoyiYneVv1zri+fv0dexuZb
A79dSbz4eaQrtasWUchh3cHZVwL2yyr2F36k+/K+FnWGCP21gZ8XYmmeqCcy
5BD/R/H34qG/XvH3mrvx+eeBK75ycfu4C1z+eeAFfDz/0ONfXkxe83HeEpqn
aLXQ7wEslxOV3NJkfaoQn2fx96rnUfvp7YW8Pt+fY7+e8BHO76mILx8P71aL
k7N4/5bA5vX1wfJZvP1sFNmPSi2+lWE9nB0qiRN1GwOFc4nwKaV50U0FO8zi
/eRumldt6lvkEE9+ZePMXLRPuAffhF4gny5wyLNi5DxnUxfPAuTieLIY7Zbz
qwVEh86DlkXIwV+x+cAPlCCHOPAhXUAqy9FuufIlpBdNn7CpFDncp18Sfrms
XXAV2jOXl72MvZc9mBQi59pbQQLzk6+3QDt358tXECWNZxyzkHPjopoc0n7c
ebW5cG6WLU7zxDPqvD4B9nuriQUtX8edvFDOal+qK5zLVfHxVclal5BtMbDe
F+5xs/HCEjnyrmz/hpCphxUdev5z7r0p3472GmtThXPCQr537tewni0Vc/R7
Qr73V+y4gHhSyOs+ns0PINy7hPvy8Xz+duBsvzOfbUTf8wL5Ot6SVFF5Jd6v
z6S/PlGInNNzPjFuvHGJ3T/nz2HebJKt7f49rgjtDe7jL6DLkepy5Fw9zLhs
t6mBG557h3VTAenmnrlZOA8v3N/3phsQj96jXcH9fXZdtlD4vgPgv9lhU4N2
Bff6X1J1OgvrF7jXH8rmb8lB+xnNdrglWZ9M87c7op1cZtt1l0hongdd8D+8
HTLlz7P5LuAcLzzXnuixeRpPYvyZwddzhc1rcQ3rkfD+TZN+7UPnc1gP5I14
xgZktlgPF2+kkhls/GOH9eTwfsyKXQ9aqsUnmbxfv4365MZ1FtnO7rc8Q/1w
+lSQoS2po3HEeiA/xxt2ffQG65nDx2nvaf6T7FCsh/M/KjKTy3uvVo+KpNLl
0ZIIrAfirjiaznZHCtbDlWfseLNnpt/iYKznDZ//YwQN5zulYD3g32JoHjmr
bKyHK19I+uV6NYlsHIX1cPIXEW2aN6ZXJtbD6bOIHGF6xW+QsL7mypcQa5oH
u24S1sOtQ0tIQ5F/hvhX/V8aPw/eJY8W0QSXwnlgT94vabH5Hl8gn8vP1zT8
75Hsi9yYn6+5PDCwHswijrwdHhStg7K4PO9MnMDlz/dE7s8FyqQvn2cPODuu
aqWcHeH7NSUJ4+0/nk0QY4f8M1vwNXlD8//gOS4Vt37ReDRlE90wneARyPF8
MoOvZ4JoXKjYfBw0bqnHf08ilGf9sL03+Xu9T9Hxw/B+pJBs4dury+Zpd0b+
gm/XQGYVYdEV3qMVkye8/quXMfGPpyfyybyeLWkiuQ5CXLof1vWidXcpiefn
i5Z8nnawnzl8PR9o2td1bsiN+Xi4lF2PeGA/mvI8hf0amSDk3HiMJg1HMguP
g0HYLwP4vDTRfB4q4LP59fI2Po8TtGs7X/+ESQ+8HfcL56Agvw379QIvXJCb
8PltWHtb6ITyS/g4bQObX124d+bLc/ugpKvWLsK5HU1+3Z1Fv0jJxxvl3MvX
/4LP/wNcj193z+Dz4YBdGfPr9BSaxtLMB/WfyseTLh7iOFO8zwzcnZcngfiz
X39xHeWEz4d0O+efc5h6/Dr9Gc37ZLwP5VTy/tmd5nv88xS5Mb/eN2C/kOMc
zpu+vJ8vZr/3wR3bZcuv95fSfQ8n4XyyA7//nMrnK+Z4PpdvhqlnPpWn8g2O
F28+vm0nim/dMa7g8qsbqfVLFqkdwdiVwxtsvzG/P7CdpqeyDsJ6xN/fAXnO
Q9S4E5YXfx/HCywv5rBvLOTFZd8v1BPWEXf4dYcRn/8f5BS/rxHsSvyexRf1
LF4HBaLegDcV+RkhL/Qq0f5/FvKdfP4rKA/2tk3kH7LU7FC9fjlZy/WXWv3w
nsJDTX45P+691eSH9x3CuIP9/7NsPOCIeu7nw/m9iTuO1RfOXTPrO37eaUsd
wYtQgfP6SeG+VwV5e94PF9H9kx0Jau0NIOy28U4pyg+crW5JGMoPPJDPYwx2
DnwZFd8a/LaQx5jN9zhMWCcCZ/ch4wR5JKL1aSjKA9yAXd5EoDzAj/J5jEEe
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
IT2fNoLPhwJ8an95RpdmiVLIGwi8+M/TmpnmYdLwvJRmPmg/hUQ7rOOjnV7X
idvOvb3G2wt5HQ5esbgy71yUlMv3VIn2YK974QQ9p8Fx4T25709pdtDJ96Ry
edXuf/Olz5jR/b2+qgbzrwF3NOsw2oDhq5cGD5ebCO/nex9dJGlxqRrzuwF/
/NBa+75xDYleZPP+pEKYL1TSh9k2d0rJ2AWbPIbrC/6zT9GA4OF18zAPHbS3
+fnylfT8jJLPWwftlbSx/L/Crjy+xiNqq7WKtLVTStVa1L5VOWrfRRqtUkvV
VtIg9lJU7cQutlpCGjs3EQlB3puEuIJI5OKWm7huroiIWBq7ynfP+86ZuTPf
5/fln/zyGPPOzDvvzJkzz3lOvXFhhzXSuTNw97m5zNZm1reJ2pQtRZuhboWB
Z0OzE7UC8NxKunsGngOdmu2fUaFrskY6fQaeCwcbZq60RwUr614uuDIL3nve
en0M6SgZuAnMX7/wwntbin+j8d9eLXoH3vOSnheNf/pWr5bIT6A4T8JHzR5+
Du+RSUeMxr/A+926ftjnHtcRI/yLoBtRiE9YfeLSs0jxXjZ1bzw9ZedDrmtG
eFm/UrWQX0G6ZoTPCqjXEPkVbTv+UOX8r4Kv0SM/9EJkbjbXpSI89HZOIbw3
J/01wr0zVgzGe0bSXyM8ouQH05AHUjTvxbitPJ+sHaqPWV4n43cX188i/FXT
XTVXDcri+lmED1zTfzne75N+HOFpCQe8ka9CccgG7oDUmjUaI6+A4qIN3Alj
Is0vkLdAcTU033yfP32euninRnHjNN9GTPxxab5m0Ui/j+bbzVtthuA5MYTp
y9B8+zcwtkbBL5K1T5k+IOETv3Kte3o0RaP4eZqHzdp7z0ReR5o+n80cX+eV
/jnyOkg3jfCCRXz7vT6SqpG+IeGm641+6TbapHVk+oaEbyvT8g3yr0j3jebz
3R+mfLuxdaw2lum+ER6273pmlS4XNNJ9Izxi0FWvsZYzWgt9for9ce69DqHJ
tjT2HoVO9tDq2Xd6zk5XzmVm+Ew/l2WBfJ6ygLXongMBiTlQjcUBEt52YcsB
yNuR7S4HO3c4uT4g4ds6+OXtcuOy/eaEpMVdxzW/lsrWEzvHM52t/l1V55pi
H7rYuSCc6yQSbi5y4GQth9A9p3nSJuL9xuiPJR1Gwts/tTUZnBqt2LFZzG5P
1kjnkfDmJwqnXXXjpMtG47l/54rjGf/5aqRLQvidXs/OHkjbxXVACA86GxaD
PAfS3SD8bejMb6L7x3BdDMIrjdrXAnkIpFtB+NqNn25HXkFvab7h/uLz3rHZ
czXSbSF83vKPktMjN3OdFMLXLGm3o/yAY1yXhPDs4739Zvqc4ToghO99XqTi
txWSuU4H4bHN/C8hL4J0NAiP/mjYNVx/Psg3dJlp/oSW6TM059A6jfRxCF9Y
6mmF4vXWaKQvQ/hh39TQ+At7uZ4L4aYvCz5GPgnppxAecGzKTOSHkF4J4bc6
H5uOfA/SEyH8yojgNsjfIP0aA08G+7dVhrRvHsH1awh/U2Jjrvv8y3VkCK/i
/O9odqdEriNDuM/Uaqfuu3HScyH8gZclvtL461zPhfDKecvGVHbjpKtCeI9W
/ce1z7vNdVUI3xdV4iLi8vw3wWbdflusnL9M8JVuv/2urLcmqP7koZYTME6T
v1MTO2cFK+u2CWrsKlAemq9X1gETWwfClfXfBFf09X+/cm41Mb/EaeWcbmJ+
ibOKX8IEv+t+iUtcJ4vm27nHYZOQnyCPg5n5VTYq42CGr/VxCFTWJTPrb5jS
XzPrb4jSXzPrb5zSXzPb76KV/pphpd7fS0p/zRCg9/eq0l8z88Okcd00mrde
/zz7O/DHQxrpghGenNRoM/JG5HGwMP9DsDIOFuZ/CFLGwQKndf9DtNJfC/M/
XFD6ZQE/3f9wTemXBcqvXTQQ44ZI383Ak2FO7SNHv30UoZG+G+FL6nxX1deN
L5H292RYeyWj0h5HlEa6ZoT3HxVXGHHS/yL87dZ7/VAfjPS2CG904NFyzCNP
eluEz/5x6LO7bpx0Ng3cCoH9U59WjQzWSGeT8O+7fX573ZP9WlOm80j4rJWl
vvjEdVxbzXQqCa9ftkss8q9Iz5HwYqH26sjnIT0ywhel3KmDfBjS+SJ84iPf
O7X8Jmmkn0W4/6Cau5CnQfpZhA+aveZw7srT0IvF5xu4Ddac7vnykftcXIPp
hBKe9GhEhaS4cG2gdA6ywc64oUtLL4vUSEeM8BUnA+svbbYQyrO4fQO3w84q
cQ9a6Lwv0hulebRa9y8FKOfWw+zcWlY699mhzwTfKUtmRGnJ0rnPDmOq1Wr6
LGQH1yc1cCc827/14CP3/kJ6nYRfH9Xnt9nT4rVl0ji4oOfeA767+4RqpONJ
+MG6Bb6fW/mc1lOaD5kwOudyo0Lh4do30nvPhIaOSQWulrugVZLebyYcun76
KPKpZHsjEyoHvDg1pG+SRrqoBp4FfzTbcPKjwJNaE+l7yYLDf4Ytxnsx2S+X
xfyQKVpv/fsVdkvVBTF10Z5ZUGJF71oe5f+s2hfP6Up7zMwvHarUb2H1hynl
LcxeMin3Cw7mJ1f9nw62Dkcp5Z2wIzHkOcZfy+WdsCL81qiHAdFKeRfzP59R
8ExY2rht6ZltEpT2Z8Inuxf8g/dNcvks5u+1aAlFuoYKP0AWjPx04Gq8N7zw
1tNuyYZwS1zG1uBIbSTLe0G4/6CA7ciH2at/vxEcL3V3wHzkvcjnCxs0WbU0
D3kvpLdFeO9qP32P/BO5vB2a6ueROKW8Hf4M6doWeSny+cgOrXu890v+XE2p
xwEXIwa/wPtBuR4HnKrXoBre78v1OGDlxqh9eJ8u1+OE0fXHTEe+jVyPE/49
/HEh5L3I9Thh3rLc7flwRqnHBfnBAc+QnyPX44Ivmj/PRJ6MXI8LAn6vtT5/
boJSTyZsqjhn6uTEi9rsJqUL1fI4l9V9cHsy8j0MfQ1ht5w8tNfcznsj0yFK
5/jrkkWCU3seBJe+j1h4+0uuvpqG/Ja7Oi78SId2tWyEfqSh+jop/EgdLkx8
i36kITou8plUDvwqAfkzfZuXmCzqyYawKuubI7/lg217Vwh7JhuaXBz4Bvkt
HaV1yQZf9Vt0HvkqH0QH5nviv7Z93XakG/eR1j07dF2yd75rX4xG+j6EV9rc
bGDG8FjNJPnf7NA2++qVDSnxml0aBzvk1dpQEnkpJsWvWJf5FUe+Y17VVfyN
C5m/sR7TC6Zxfp0X/lGhiETt/tyvM8X66YS3vo8Tka8SzPR5Ca8cW7gR8kZ+
VvKZvCjTwf7jwrPaLqY7TO/l43ntAXkpAYffO+qJHylYvxvilZnOL+FNF1zy
Q35Itt4ega88trsc4vL7yoL0jPLDkJ9w8B3jU1MZhyVsHOTyTmhQo+Us1FWQ
yzvheMpLL9Q9kMu7oElEtQqdf76klHfBPf3e7YJmlvyfNmh8Y/fXyGewS/PZ
BvNrpVZFfJM0bjb4sGnQD8hzmC2Nmw18av03BPHWkh/VBp/PLT4feQW+0ndh
g159Sm5CvLXkB7ZD+KVNe5EvUV2aD3Zol1doK/Ii8qT5YIfTWUm1kRexSZoP
dvi0/fMDyFvwU/Se6105dPDnBLO2T7fPhR+yd8+5M9APma77HywcH1y/6XHk
t9T9Hu/aBR4dtK0c8lso/42BZ8KjqfFTkM9zVd+/Ejlev0KRDOTzTNbH7SLH
/3ja3Af5PK91P0M8xzPWrT6EvCOrXo/Yrzv1CNB5RGV6rPL4vrJh9MC+55Gv
cm12uP+v6QIvvmTyy/9GpWqVp+xqWttjv8vpH1/3qHu/K/VV/0rr+PhnQ9/K
fZchL+iBft4RuF/58M6I99LtCpFn6YNJq9siL2h8brXQKA+80YTmgxHP1esR
++mmUm1CcD91aoP+8fxedn/VcTh+L/L6b4V6+vp/Wiuc5jk+VtifcTEd+Ru+
0rpqhWEZt/og30P+LqzQVP8uTiv7iA0G/LxuDuZL/Uj63m3wY+64cORj5Enf
uw1aXl7TH3G5nZkQ9qP/HeQ1yftRFjTT93fVTsuG6i38p2JcpFxPFvTR9/0U
ZV9w9ystw7tA9VNa5QoVNwt9eisEhN/1aXrlmPJcK9tPoxU8GzLnJ7bpXChF
G1qiSKU0D//nh51n5KP/k/i7Bm5S9ILoR8SpEG9GLr9TIx4M4aQLRPxjubxJ
yf9r4jxtip8kvBTjaVPcI+GrGU+b4hgJf5/xMCkukfBEpvNDehOEL2d6PnJe
YBP0Zro9pB9BeEnGW5PHzQwl6mHg0CZl3MzvGDcqv1cZNzMg3Q/zWsr1W6Ao
8rJ4/lb6sbyjfiq/T6nfArocwpCjSv3J8KKIpYGd53uln+R31E/ldyv1J0Me
8r2fH1TeO5VXn2sFL30cZijPtb7juVZYqcfTLVCeawVfPZ5ulfJcKr9emW/u
7wjDL9ptUeYb1bNDmW9W2Grw5JX5ZoUVev0hynyzQgM9Pu6A0l8bi/tbBXK/
CN8Bcr9sYEO5iFV7Qe6XDdrqecyFrhDhy+KDojFPpdwvquc4yP2yQW2d4HsK
5H7ZoJveHg3k9tuh77OvWn21PVRpP+GRSvvtRlxS2Vil/XaIQB5mQoLSfjvo
8V8zLirtp3pSlPbbDd5dYir43TfiRgzcAb+68G+H0n4H4+VFKLgT5uiEXY3P
Oypf4P/8cb5jfjo470/Gqf7Lyvg4WNxhkoI7QV/GXlxXxs3B43VknOq/pYyn
g/PuZdxp6JK9zFDG2QFH9T/TlfFxQU/9/SYo4+F6xzhQ+WtKv1xG3vNnDqX9
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
pIJboAjzT/4PXhr92Q==
     "], {{{
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.880722, 0.611041, 0.142051], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1:eJxNmnn8F9Max2eYMccgS2Rfouy7UgiVooVSqZDITpJrDSFLlJD20o6U0ipF
kkpCSIqipLJlKWtkvdzP+/c593XvH+f3e545M/OdmXPO83w+n+dUveS6lp23
SJJkg/5k+n9IniRlmiQnyT5eBx4qkqSu7G6y3y+T5LWQJG3Uf7DadbKb6th0
9S9S/2zZV+j6euo7Tcfu0bFeuv5U2XfJfk/9DdS/t/pb61hzHWuue9SQ3UX2
O+pvJv84+bfIXyx/L53/j/x91fbRsTfV31bXH652g+yL1X+y7Kr0y+6t1kX+
Evnb4OucfeUPlv297jdF/6+Rv5/aGbIf1POdonPv1L2Xqr+b/MPl3yD/Lfln
65wDde5lOnaejr2k/r1k7yH7UfX3k3+y/PvkD5F/qc4/VeefqGN36NiD+v09
5dfV8Z/VX0f/d5XfQv1N1N9T1x8j+2/Zy9R/mc4/U/4Z8qfI7yL/CPk3yv9Q
/lnyj5V/s/y35S/S9W3itxwqv7Xuf5ju31HHLtCxNrxD/K1psofr/EbyH5T/
mPzF8s+X31L+MPnn6vqjdP21OjZfxy6Uf5L8yvJ3lN1Hv3+A/Mdk/6DzT1Q7
TH0H6dynZN+j+9WUf6v8JfIv0Xmn6PwTdKyrju0vP5NfTf5m+bfJbyH/PPmN
ZS/R9RfKbq2+kbq+nfqWq/28pb4T81K/v5v6L1f/a+pvqmv21/H28Zor5Z8m
v6H8e5lTOv99+UerDZd9gtqu6rtMfd/p+nd1/gb1TdCx52UvV/9a+afLv0T2
mzq2Qn4Nte6y5+r59lfffrq+n65/ufDc21d+X/n/1v/PEs+J2rLf0DXv6trm
vJ/8H9Q+Yv6o7SZ7ga4/RPaBsgfy/fSbF+j8hTp2k+x56j9AdlX19+d5dewD
9ddUmyz7W+ZF4nfaSfYrOv9g2dVlD9D53+v/Kvm7q1WR3UHHxvNt9Fxfy/5O
x1Ym/qY7y/5D7ROeR60aY6jzvtFvXag2k7Wjdrrss9TfgzWt37tE9rmyR+t+
L6h/lvqf0bHzZc9RmxfX49ayp6tNk3+l/Idyr8dn5J/LnJT9ItfIf0d+Ifui
0mu9rexPS6//t+T/S/13y56m45Pld5DfK7ffWX51tWayd2Dd8W3USmKY/B/V
dyRzTvZrau/IbqD+U9Vfp3Q8OEn2eNkfBse6uTrvF/l99b511F9D/sel3+9b
nlXtJeZ66bXdVNc/K3umOnaWvy2xoPQz8+z9+M6l33eD/K3UZsm+S/3XyO6r
/rXq34rvL1//ko8zj//Q1GP4t+69nneSvQP3kP1c4XcNsnvo+p114a/yd1H7
mvWg/nayW8kerv4+6r9C99tZ7VHWju5fXf3XMnfVf5yO7Uis1LF6Ona6+g+S
fR2xWP0P6H5HyT9U562WX1P/d0odY+rrnIbBc6mz7EXqf1z9vzEX1UbLrqy2
OfE3+lLntCodO8k942R/pP4tlJvO0z3vieuzCvGE91L/OaXXKs82SfbC/z6P
/MHEJp23Teoxq6Vje/Mhif9xze7H/VOv6Z/ier1S/i5qr8tep9/L9PurZX9V
er5cpr5KrFHZPfR7R+vavxgb9c+Wv2dc273lX1j6+zaSv0l218K5rKP81+XP
KBxbmZs9S8fX63T+5TrWSfZMtSfl12KdqL996fzFWvlJ9u+6bl3iMTtA9iM6
v1PqGNpR9hesUXIhMUL2n2qfJh5DYsQ4nXOtzr9I/ljZP+rYanKp2t6yX9Sx
p9RfW783Ub83Rn5H1qP6n5Q9QO0m+TfL30L2cp23Sf6hau/JvjP4XfroXmt0
fQ8du1R9E3WsnewH1DrIv0l+/5gvr0qds66U3Uvt6tQ57grZq3R+qvGoRYyQ
3V/Hbki9ZjrLfob1Jf8K+RNkr9Q5f8lfqfaW7L46Vk32MOJAzN/MVebsReob
qePdZHfSsfasYfUvkv2R7IU6/yhisPztcuefTep/TP409c9kLoID5A9We0D2
VbrnXrpf/dz5t6H+75P6nSaDXXROPZ07SG0K6ys3XuEbP8Va0vXz1fchsV3X
7xqcG1bJf1X+MWofMLa51+uxpfPB7rnX23s6727589SWyz6udLzfI/f6rVF6
vH+MeGcX3X+B/JXkJvlHl44v6+N8PTN3/meOTZXdM3i9PCl7amkcAZ6omjqf
70Uckn+b2kDZE8BNsrvyjZh/ag/Lvp1vIHujvmdfzpc9o/R78r5gksfBLJnx
RT+1iZm/30DZA8gHslvoNw9KvYaezZ2XyE9PEp9lj9D9W5ErZE8uHQeJh6OJ
v7K/L3w/xmKC+gfIbyL//pgPzso9f1gz42TfHxwPJsT1uYP8ufFbzyc+Mv/J
h3H9XBqM/07KHa/G6/5zdP4ynT9P/kj5s+UvlT+XfKr/o+SPVDuH+BW8nq+K
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
EvM77s+3fDwxX/oPTlMq5w==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1XeMlUUYxeEL7HqviCWQKEVBUFB6WxCEpStF6U3aUgRBFJaiNJVEgagU
kSICURApLlKiBEhABEVUQND4h6vGgD0xWIKARtQYnzezyZ7snN+cmfm++d6Z
W3tc8YCp5TOZzGTKp/nZTKaG/yV5mcx26lYxk9mGbaUO2suwl/yvkstkvtAu
pSflv9M/j67W3opto65yn2JjsKH8Wgu8aFxzfApfh/7R1w0bhW3R35lqlMtk
lmIV6D2ZZdgj2Gp+F5XwS2iisTv5vdYYJ5elCthsfh/dz19J/jJz+NJsGjMi
3sH4dca+Spu1e2J99W3iD8k9yFfLS+8T77Ud3ya3OD+9Twnfkf7UroL9JNvH
O3wm+wA2nF+Pr5VZTNU8/wp+JQ2TO5xL6z3D76Ij/Gj8qHYpXZL/EltGNbVf
wNbQCJm95r6XetM+umzNg3I79Hfi7zLvAf5O7bZ56cP+4N8T2odlH/Z/FNbO
vLPkTmBLsWlYL2wuNsg67fji2BtsfTbtYUyXh+VTX5lPsOXgo3wfuceMHYJ3
iW9GvbEtMp2w5+WG0XhzPCS3hKrrXyW3mobL7Mde1+4YtSe3j++Mr+BH5qU6
nYK9T/WNHST7Dt4rnpcWxriovag3vpAWl+1V7Nk6fgydMO5z+sscX8Ue0DF+
s8xCaxznS3NpL0/hpyPPdzF2pUwRFeubjh2lw/H8tAN7l28vtyi+BfXEVtmD
kdjLMhtoRry33Bwq1B6L1aL+Mk/l0tyxxiJsAT+U7sBaYo2x++JsmHM6fz4v
ndk4u4PxBvobYs2wIfxb+CT+R6qEzeWbWmcCX5luwKpHvdB57UrGfxv1zy+X
7er5JmJNaUDUKDYt1uT/k+9etn8n5VqXS3vxvVwj7F+5RtRcrjHfCp/J3x4c
64FtzKa6i/orpMEy99BHMiepgdxVcgfj/PLXylzECrFmcpOxm6gmVhM7G+vG
+ZFrEt+FP23sjdikXLrL4k6LellQdkbirJTwm/BXaLxcVfkJsc90xDwD81PN
Hculunq2rM6i3nZHzeOXPcP1cuewWnwRFfBt+EJ9o+PekH2OH0QbsL+tdyDu
Df4a2QtYe7k2crPjO1JLrAH2DZ2R2Ug7sQzfVm5O7DEVQA3jW2Lz8lK9RN0s
MP9xmsufinsjvnPUlNwsvim1wOpjj1P/uAfiPohak2mRS88Qz1Ieaxl7n0tj
Ymw5rDn/azY9QzzLbvqNLzJ+p/4O+ekefFpuTJwluQ4yrfGx/AfZVLNRuxep
Xi7dT3FPFclUpn7mKpF7LZvuwf3UHSugGdq3UUNz1DXubuzNuOtpPnYh7i98
ZnwH7Bjl8x9mU31Gnf4Rc8S5j2fW3kWr9J2ROU8d49tgb9DvfL9cquOo53px
fmOfjC3mbw2mr078bsmO1T6EvR13QuwpTdW+herqqy03L5fuzLg7u9LQiun3
MX4nq/K/yN7MD6DG8b3ieaM2+Y+z6fd5T8W0P7FPBfg5uStkzsYdqK8Jjde+
Li+d9zUyl7Lpnor7ak/sAz9Qrplxk/LTHRB3QSvZn+Wy2Ndxr8rswIfHbw5/
kHpg/wMf0fZm
           "]], 
          
          Polygon3DBox[{{2094, 1278, 1069, 1070, 1279, 2095}, {2614, 1141, 
           1070, 1069, 1272, 2088}}]}]}, {
        EdgeForm[], 
        Directive[
         Specularity[
          GrayLevel[1], 3], 
         RGBColor[0.368417, 0.506779, 0.709798], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}], 
        GraphicsGroup3DBox[{
          Polygon3DBox[CompressedData["
1:eJxNmnXYVcUWxj/O5pt95mwBQaVUpEREMMDCRsVOTGxQEBCxFfWqYHd3d8e1
u0XF7k4MFBUDA1Dgvj/e5fPcP+astWfPnrP3zMp3Tbfh+w0ZV2tqaurcsqmp
EP1RPz+oraBWK5uaFtPNt5P6mpuaFhf/Drzo6oXvfa+2mvhFRY9uNDW9oftb
VE1Nf+l6kPqX4hnRS9TWVWuptonaiur/R3MOEP06+f6eajN1/bf6+4t+pf4p
hedinlfEv6y2odpAvdveop1FR5eeuxD9Sc920dj39OzP4pcQ/4H4Zr3b9hqz
Rm5qWkDj2qr/t2a/D+8yu97UVKl/U/HTNf4wtZPEzxGdqGdb6d6W+q7jNX4v
tVm6t7PoDmrdxB/As+KbRe8QXUVtZd5d/9FL9z/RPFvp3trq+1V93zJWbSXd
O0rzv6L7m2v+PTRmM/Un0UGlv3WE6BWip6ltwH/qej3WUrSv6BeaYx+1XTXH
AaJLii6j/s/Fj1HbRdf7i/YU7af+L8Xvp/aY+CvVGmoXx/78qvWZrHGddH+e
6AW6vk+0hd5tou6vqfaz7n1X9/6vqvvT6l7zgeL31/3Bar+LXyFZZpCdl8VX
4qeK/0D3b1cbqra7+g9hf0W/0zPfil9Z9EXdeyHmukztBLX11b5RmxT8pYX3
g7V4SW1yrM/laifHs3to3kM1Z+/kOUaozdb1C/qPV0TPFX1B9xriv9W7Paj7
F/I/un5e/aXoXaIPqO8ita90vazolJrXdCXtwUhddyotD7sUlhvkYufg7whZ
QU6a9X8biV4c/9+p8PWrap3Fbyz6U91jkdUfxXdF38Q3J4+9X/TXuuVqLfXP
0PV64ht6h9tEj1dbSK2V7g0R7SD5eke0F+8neo9oF7Wtxb+s1hGdQu8055qx
Jhtpzi3FV6KH6/lH+W/JQDt0HR3WvZT8vg+I3qq+Z9RWZU/1/Knqb6/n9ta9
2exJ8tqwDqzHh6J3hp7sqjaV71c7VM88qLHr67+WKm2Hxsf8zN1f7T8a86L6
NtOYI8U/Ln4T8YuK7qk5nkBuNW5A4fd4OPh+4t8KuWOeA0Je/tD7rqxn2uv+
l5KBt9Eh3lX0etGzC+vkNLXT1bYsvNas+ZqiN+n6/OjfqbI9+lL8d2onqm2u
lrFR2Ev9zw26Pif6b1Q7V20LbAHPo+cat2LwqyEPhe3y0LAZm4bdqLFOor+L
fq++U2Ke1vqebdR/pegfddvYNZBlvcM6yLn48Vq3R0Q31Pu2SpaTh0S/0PN/
1qz/b6n14D1Ej9D4x9hvjf+hbru6muY/SHMO0Zi6aMqWh0tFD9P4hzV+g8o2
diu1tXXv1+R1YD3Y84GF9/0j0f/GHr+h626Fv+F1ta6F32+C6BpqP4l/U/O0
Yj21X9/r/74Tv4roP9n63bbhfX9IbW7NsjevZn1cPdm/4Ge+1rd0ZL313LNq
c9AfPfuexl+rhlM8KWzJ37p3asjMP+Iv0vjXWCfsVt3fge1aXvNn/JrmP6Ow
DWfeudnPLaL552TPt5D4qXX7T97/U419JP53bvK7r196T3jPbzTn7Gw/OUh0
P937SmPHiM7K9pXrZPteeGzEOsg4Mq12TczNWvyd7ccW1zu0Rsb0f/+I30h8
TW0FbGDYWtb0K71nB9EBem4Vjf1d/MeixxX2azN0XRT253M1zy/Z77226Jd1
61c/3ZuUrftdNeYr8Z+pf7T46fq2BcW/rzGvqh2tMcvou6apvzXrTOyBTRQ/
TOO76Hqk+E/VftSYNqLvqu9qjXmXPZXsddT1rjVf36z+D/FZ6r8l+IHivxD/
kfhRmnN/8VeJP0D0juy519CYBTXPtsgd36DrfXS9ne4fqHat+g4SPUXtcWRE
dIDu/xLfsqLab9g80eXUXhJ/d/JavBj+5Ze69wc71F9tenzLCvqvYaL76t2+
qVsvV9L8y6pvsvj/ip6m6yfFny76dQ6/r/F3Z/v6fcTfk+2zxjZsz0arJWyp
+m9R/9E8p+unwiZjL7AbxGiDknW3Bb40fMe/cg+9UHTDZJ9Q8k3Z/ux80Q3C
R+Artk72P+1F387WbfzgkNijDqJDk2OWrqIf6d57yGzs52417+cnuv5A/A2i
S+tdPhG/l1pv8R/X7AOWKrynw2uWZWLJOfr2D7N9IbZxs9jTNqLTiGNqjmde
1/UC4r/Tt48rHF/8lr0m6BGx3H6hFzPUf0zheJi4eNNku9VatE8Rsq32TrZd
wzZ2bNimfYCdLGxjsbVLN7y272fL2XY1y927cX1ZyOOImmV/HbW1xDeJfqx7
74u/TvRnXQ+q2Sb/lGzzsf34bfw3Me68bH5y9r6yv8R5TTHnvci37i+E79P1
xoV1u3/oeNvC41qJLsD312xD2iA76HxyLDFPa3h6jGPMD8n+bVryPcbck7xH
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
nCfFGM7MTIoY5n/Awf5g
           "]], 
          Polygon3DBox[CompressedData["
1:eJw1mnWgVlUWxR/38s73zv1QShBEpUFAlFIEaaRRWsoAJAVpA8fuZmwdc3Ts
1nHsbsfuURwsFAvBBKlZP9aZP857e91z++6z99prf02nLRg9P6uoqLhQf6rr
f8dYUfGc7DtDRUWdckXFW8L184qK34QbCQ8tVVTcIdxRo7XsDpp/Rvvfofna
mh+sbbdrrpPGbrLnaXwjey/tE2QfpPGi8J/CO8o+raio2Cx7hOwDdfw0/X9D
8yWNRrKbaP5u2fdon5N1rRbCjwsXGo1lV9e2BzR3ja6f6/gg3JjzC1cKVwrv
IrxBuLpwHeEp2n+scBSuLXyo8BjhKuHZOufHwk8Kl4ULze8vfIDwzsIzhC8W
PlV4F+GvqnQe4Q7CdYVb6fjX0/PWkF1D+z8o+1rNB83/KLxWuLNwb+H62ucc
rq9nHSt8uP5/ybvVtlx2de03UPZyjRNkn6vxN9lbtc8RsufqfFtkz5PdVMfP
0v+9hM/VPn8J/gZ8izs1hsv+Vve7i+Y6am69rn2B/l+DA+jjz5e9RvMthPeS
vUHz86Ovx3Vb6/w1gn3lrxpDZM/R/CWyd5DdUvNn6v9lwpdrnCV7QfT5uc5u
mm+s/7OEr9Y4T/YRmr9S9tmyW5X9Xnm/nPM03rHuuUr3fpFGD9mHaP/TNXeU
5ppp/9OFHxH+h/CewsuFXxXeU7iz8AXCrwjvIdxJ+NfKioqThF/QuEvbjte4
Tee+T/gq2Wdq/8dk3yK7g/afInxBevfNhY/QO7lB+Dbhjvib/jfU8a9p28Dg
78X+52vsJ3tX3XPU/CUafWR/r23byT5P88fJ/i74Wx2rbW00/4vury7PrrFU
c0t1/Rt537Lb6Hob9X121L6/C2/VvUzX/EWaP0m4Bf6u/w00/29tG8Ca0Ngv
8z30l12f7yT7XW0bJXtH3rvwe8KjZf+g862R3Ul2L51vte5nO+HvNN7Utpr4
mfZ/S3i47G80X0P2ao1/C8/UM3yY+50Okv2pzveB5sbhlzrff4U/FD5QeG/h
rTq+pvbdXqO3tn2u+U80P0l2d81/IbxCeLLwvsIrhT8SHi/ctez3VyP3O+Xd
4of4Dj40QnamMTa3D/WTfa+O/0xzh8jumdZbP82t0VgguxpxTHau0Vd2hUYt
2Rnfj3epfa6XvbfGFuGSxk6yX9c5BwXHu+HCP2kslL2HrrdMc9M4j643Vd/s
B+F30vr7SfO/CncV7s/30zHDdGylxiptu0fjZc1/pfGi7K/1vsqyv9Z4KXgd
sB4qtX5nyD5P53tK+HbZTXS+NcI/C3cR7iv8hnA9nftn7lu4jf4fzfpJPna0
5m+WfZHstprfOa2/izV6lRzfDpNdX3Z9zY/U/ndr/79p/3rCTbR9Ec9PTCg5
XxwjfBbxgvij/frJnpPiez2db5PwTrLHpPyxTHMnattM7fu4zn8G+Ubbd9T8
9jyX8JuaHya7nbafILwTMUz2nhonCf8oXEd2e40T8Q3h2rLP0fmekH2rjm1M
PNK2hWn/uik/TWct4nM8r8bRwu8Ib9QxxwTnvg4am4N9Bt9Zr/lPhW8IjseP
pph0ncZm4YeF/y57dz3vWuEuwu0K+wi+EjS+0fylGieQf4mhrFXNH6W5NzLn
sNd0/zsIryXulP2M3PtL2naI7Nkan8luqG2vaJ9XWVO5tzH3hvBzsg/WqFXy
O+HdvCA8iWfXeDOtF779bO1/f+b4eLXscdHPw3O11/Vr6hn20VxP4dFlv+9D
+LbatjvfRvvfhs230vyJwnekZ9td+EriNrlKx7TV/o3ISbK7aVst4ptGNeEv
tN9G2afq+IfSu9xDx++kbeflvgfu5WfFx46yu2v+z8LX5fq3akwP9jP87Vyu
Ifu94Hw4Jff3b6ixkdxFDpf9ATFceGpuf24XvD5u0jhM9kf4Eetb8/U0X3BN
4W7aPkr3113blhMrMseLzsJn5r5Gg5Lz29zcMbpfmp/BuyAGkzt0vnay99Hc
yLL9+1C+DTlN9jTN15O9stL5mnwzT/MDMsf7htp2NvFK28eV/X0PF+7K/ZfM
t1iLe/OMsn/V++ske9/0vn8X7pk5Nm8S3lnj0tyc5VB9iw2a7505Vm7R3Hrh
Xplj5WZihUZz4d8q/T22ans3fD35Z6W2jSf+69ojdH9zhP+ruWeI68L7lR1j
h5LzNTcwxYAxwkcLDyo7J40VPkZ4SNk57iByqvBg4XrCk4WXCQ8tO+cdjM8V
vibXbiJ8cmEfbi48M7c/9RPuX/L3ezr6mxLj8Ae+NTGrhfCRuWPZkYVjIb6M
T8Ppxpac3+F65HDiLPF2ks53gHC1ktfLCZrfv+w4Rjw7vjCnhlvjb0dFc3K4
Of78F+Gawi8ILxJuH81xiRPEi8ujOTBcmHh5ZbQPEfPwd3xre+HnNb+QeBT9
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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt1FlsVkUYh/GRptvX1rYq2CIihFYEAxQRUTBcEJUi0MRCCcheQAQruKAi
KiCL8UIvQI3hwgt2vGNXMAYiRkggyhIthISQUCBSDGnQYCwJ/t4cLp6c+T/z
znwzc+Z8vZsXNy7qklIag3zcn0upk6guTKkPHpAXYFpBSjUYkJfSpeKU1nDP
638BJdwR7lNsV7MVd7hJcj0my7mSlB7R7oVFxjZz/bHUbw3iVnODzVWHp7gy
+TRfZZ58dfvwtTwa5/Tv8HwYPTEWU/Ufxjx9tfI84yfI1ZjBVXDvY738OJZx
S+V3Au3HuHV4V15WnK0r1vcFPpBHoUG7GA36SuRmvzFU/sfB9eFuFKWUx020
5i783zilrgmvaa/Bl+rmy2+qWykvxG31c7jXudlyP2xW9zZ3L2r03+YO4D01
rbFvrkz+Ht/cPYc4j/m57Lx7Ou92+dlYizM9w+2RF+tv0d4U8/mN3twrsWa5
O2ZyldwArsPYt4y9wK+Qq/gHsRF/qNvk2R3V2Iqz3DbPHngo7sLdd/WtZzd0
xWa0cls8n8Qgc++Kc+XanF9J3JU4U3Tz+/Wea/3209o/xZ2ynrH2diVqjTmu
/wQ+UnOVK+V+k09iOXeZy3FH5WP4kHs09sx9Jn+OJdwxrtL898h78ZV8FBVc
irOLuyCf9rxu7CnPP733ayjnp3ON3MG40+Y7yd2MvRRm9yHuxa9cR+yVmxDv
JZftrUEej53muBr3DDPUHUFL3EP5k1y29yas4F7ihqJOTVt+tsfY6+z4jrj2
/Ozdxx2o5oYZV1WYfds/coWYqD1O7Xdx79Wc4G5oF6lrjLPg5mIE12m+eu6W
ml9Qrn2H2x3fjTwi3qf2OVSa97q1dHLj1M0y30X+B3mO+YZr/2dsnbqb6l7k
X+YOYS5XI7eom1WQfZfxfe6Ob4ibKfeNd8bt4l7lpsi94v/Eb13kFnLT5VoM
5NriPXLPGDMy/sesZ1V8a/xzXF7cbzTLP6PUmH7x3lCby/YSeyqVy/AxN0Td
QGN2xnnpu6RmJX9L/hdNXJGakRgmn0cV16HuL9ynvST2hjdibeqe0P4d5fqu
qTkT785aCrj92CAPxxDtVlSoa1f3P+hiqcY=
           "]], 
          
          Polygon3DBox[{{2405, 1665, 1546, 1547, 1666, 2406}, {2372, 1621, 
           1723, 2681, 2325, 2326}, {2373, 1622, 1724, 2682, 2329, 2330}, {
           2374, 1623, 1725, 2683, 2331, 2332}, {2336, 2335, 2674, 1673, 1674,
            2675}}]}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0ktIFVEcx/G/z5vvLhESpuC2Vm1qbdtaha3SjbXJhUKh5aOnWSkUQWAP
A0srQqU3EhmVlhW1NYxCAhNyH3Zt1+eAcL/z/c3vnDlzz8zUt7Tva8uLiPv4
JqT83mGFOzMRG7mX6/g0b+c+3sWXeTdf4718m+9gvzzOzTzJh/ght/Ijbucn
fJSfcSev8CB/QYf7H+e1gogcVnHe+WPMFUZkNkQckz+jH3d1f83J13c4n3X9
J37H53jM+Iw8Y3zC+T9zj/AHjBpbdu8++QHa0v7TXvS/9GfleziMBd0sL+nP
pGtxEPP6rLXfpmeEEbzQNXGV/jWfwq20X33O9Y3yK5xMve4G/9Hv4Zc4gWH9
T92Q3JDWxE1dLy/qr/JOTOG6/oeuR76Cben56J7zd303X0ItPupL/a+nchcu
Yofn8xVVco4PYEC+gK3mV3INV/AWLudqLuPNaT3exCWcZcvHdFHEm7Rmemdp
v3KlXCxXsOEoY78ocfBaIsP5XGDw9/o3+R8DU1Xm
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0stLVVEYhvHP4+WoZWYXcppOGgSK0xrXSLCCMqGB4kCFPJSC4iXtJghC
ENqFIEqjICK0LEUkIqLG0T8QpVkRFRUEapffosHL865n7bX32mvvnS25g515
ETEpr/MjijIRc7iMb4sjtuNXrMYfWIu/cC+u436sKo2YseaAXq0/1Jv0HSUR
ldKSPLbjLszhbuzGGuzFOuzHY3gGX8px9xnEV1gjZ/WCgoi7OF5kzrUD+nPJ
57u4O3ov34fPJMOf5Ju4W8Y98lROcI1cnvmbxl3yRHL8ET7468adcptbxMP8
X/u4prfJFD/CLeh/+CvYLDf4c/y8/pufwPNcG3dUf5zOju/gLuqtfAPOyhrf
zh/iLhjvkwfpedyquTF9j0xLfTbiUTp31w6l9fooTqbzwqvW3McG84XeZyR9
K7nED3P39FNyWi5bsy3tDd/hsPwsjNiavjtuwe9Ygd9wM37BcvyMm/ATfpQy
/QNuxBXcgO+xFJewJP1bWIxvMIsv7Gkp8/8f/AdTllYO
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{1910, 2072, 1121, 1909, 2695, 1972, 1911, 2696, 1973, 1912,
          2639, 2697, 1974, 2100, 2636, 2698, 2102, 1975, 2101, 2637, 2699, 
         2104, 2197, 1976, 2103, 2773, 2073, 2106, 2198, 2606, 2798, 2105, 
         2074, 2607, 2758, 2107, 2075, 2700, 1977, 2108, 2076, 2701, 1978, 
         2109, 2077, 2702, 1979, 1913, 2703, 1980, 1914, 2627, 2704, 2025, 
         1981, 2057, 2746, 2058}], 
        Line3DBox[{1916, 2078, 2608, 2759, 1915, 1131, 1917, 2110, 2705, 1982,
          2166, 2640, 2706, 1983, 2111, 2638, 2707, 1984, 2112, 2774, 2079, 
         2114, 1985, 2113, 2775, 2080, 2116, 2609, 2760, 2115, 2081, 2610, 
         2761, 2117, 2082, 2611, 2762, 2118, 2083, 2708, 1986, 2119, 2084, 
         2709, 1987, 1918, 2628, 2710, 2026, 1988, 2059, 2635, 2747, 2010}], 
        Line3DBox[{1920, 2085, 2612, 2763, 1919, 2120, 2613, 2776, 2167, 2121,
          1140, 2168, 2641, 2711, 1989, 2122, 2777, 2086, 1990, 2123, 2778, 
         2087, 1991, 2124, 2779, 2088, 2614, 2764, 2125, 2089, 2615, 2765, 
         2126, 2090, 2616, 2766, 2127, 2091, 2617, 2767, 1921, 2027, 2028, 
         2741, 1992, 2060, 2061, 2748, 2011}], 
        Line3DBox[{1923, 2618, 2725, 1922, 2128, 2129, 2788, 1924, 2130, 2131,
          2789, 1925, 1320, 2132, 1926, 2780, 2133, 2134, 1927, 2768, 2092, 
         2093, 1928, 2770, 2094, 2095, 2769, 1929, 2096, 2097, 2771, 1930, 
         2098, 2099, 2772, 1931, 2029, 2030, 2749, 1932, 2740, 2012, 2629, 
         2013}], 
        Line3DBox[{1934, 2135, 2136, 2790, 1933, 2269, 2137, 2270, 2138, 2806,
          2268, 2259, 2260, 2258, 2139, 2257, 2726, 2642, 1935, 2643, 2727, 
         2140, 1936, 1330, 2141, 1937, 2781, 2142, 2143, 1938, 2712, 2619, 
         2728, 1939, 2620, 2729, 1940, 2032, 2033, 2750, 1941, 2014, 2031, 
         2730, 2015}], 
        Line3DBox[{1943, 2144, 2145, 2791, 1942, 2205, 2206, 2181, 2731, 2230,
          2229, 1944, 2231, 2232, 2182, 2732, 2234, 2233, 1945, 2262, 2263, 
         2807, 2261, 2146, 1946, 2644, 2733, 2147, 1947, 1160, 1948, 2713, 
         2621, 2734, 1949, 2036, 2037, 2751, 1950, 2016, 2034, 2630, 2742, 
         2035}], 
        Line3DBox[{1953, 2149, 2714, 1993, 2169, 2150, 2186, 2649, 2795, 1994,
          2223, 2211, 2212, 2187, 2650, 2796, 1995, 2224, 2213, 2802, 2653, 
         2188, 1996, 2170, 2647, 2715, 1997, 1958, 2716, 1998, 1960, 2631, 
         2717, 2042, 2623, 2744, 2062, 2063}], 
        Line3DBox[{1962, 2153, 2718, 1999, 2171, 2154, 2189, 2651, 2797, 2000,
          2225, 2214, 2215, 2190, 2799, 2199, 2001, 2226, 2216, 2217, 2719, 
         2191, 2002, 2172, 2648, 2720, 2003, 1963, 2632, 2721, 2043, 2004, 
         2064, 2753, 2065}], 
        Line3DBox[{1964, 2155, 2624, 2782, 2173, 2156, 2192, 2800, 2200, 2005,
          2227, 2218, 2219, 2193, 2801, 2201, 2006, 2228, 2220, 2221, 2722, 
         2194, 2007, 1965, 2633, 2723, 2044, 2008, 2066, 2754, 2067, 2018}], 
        Line3DBox[{1966, 2157, 2625, 2783, 2174, 2158, 2195, 2652, 2784, 2202,
          2175, 2246, 2159, 2264, 2805, 2243, 2244, 2160, 2245, 2634, 2724, 
         2045, 2009, 2068, 2069, 2755, 2019}], 
        Line3DBox[{1967, 2161, 2626, 2785, 2176, 2250, 2162, 2265, 2655, 2786,
          2247, 2163, 2165, 2222, 2256, 2046, 2267, 2656, 2793, 2255, 2177, 
         2164, 2070, 2071, 2756, 2020}], 
        Line3DBox[{1969, 2178, 2179, 2794, 1968, 2180, 2047, 2271, 2048, 2272,
          2792, 2203, 2252, 2251, 2266, 2253, 2254, 2204, 2240, 2021, 2248, 
         2249, 2787, 2242, 2241}], 
        Line3DBox[{1971, 2052, 2053, 2757, 1970, 2022, 2049, 2739, 2051, 2196,
          2050}], 
        Line3DBox[{2024, 2023, 2054, 2056, 2745, 2055}], 
        Line3DBox[{2039, 2743, 2040, 2038, 2017, 1961, 2752, 2041, 1204, 1959,
          2738, 2622, 1957, 2152, 2737, 2646, 1956, 2151, 2185, 2804, 2239, 
         2238, 1955, 2209, 2210, 2736, 2184, 2237, 2236, 1954, 2235, 2803, 
         2654, 2183, 2208, 2207, 1951, 2645, 2735, 2148, 1952}], 
        Line3DBox[{2274, 2445, 1581, 2273, 2446, 2866, 2355, 2275, 2447, 2867,
          2356, 2276, 2835, 2357, 2277, 2684, 2892, 2536, 2358, 2278, 2685, 
         2893, 2537, 2359, 2279, 2686, 2894, 2538, 2360, 2280, 2836, 2483, 
         2539, 2657, 2808, 2281, 2484, 2540, 2878, 2361, 2282, 2485, 2541, 
         2879, 2362, 2283, 2486, 2542, 2881, 2363, 2284, 2689, 2895, 2565, 
         2364, 2285, 2672, 2850, 2398, 2365, 2431, 2860, 2432}], 
        Line3DBox[{2287, 2658, 2809, 2286, 1590, 2288, 2487, 2543, 2883, 2366,
          2289, 2489, 2544, 2367, 2602, 993, 2906, 2545, 920, 2566, 963, 2903,
          2546, 878, 2567, 2904, 965, 2547, 879, 2568, 2905, 967, 2548, 880, 
         2896, 2569, 969, 2549, 881, 2897, 2570, 971, 2550, 2880, 882, 2571, 
         952, 2496, 2882, 927, 1003, 817, 1831, 888, 767, 891, 2677, 2837, 
         2384}], 
        Line3DBox[CompressedData["
1:eJwNzMkug2EYBeDXRoxVU5u2qCbYVO+gC9YWjU4bC4lacwmi1DWJoYK6FLU3
pCjiWTw57znfn79wcFw9GomICm9jEa2JiG9e3ffjEQMO9SHvtkv9k/JoxId+
5f5ii6JvNilxwt6kf9m3mdI3SNmu9SHL+grTnJH2dmP/YVafI0HDnpG39l/m
3QtU7TMyS9f+x6K7Zm/LJDnu7I+cu5ve1mSeB9szS+59mZJ17+uyp/d5YlU/
lQXZli903Du+vZC7+j9tIimo
         "]], 
        Line3DBox[{2295, 782, 2812, 2294, 770, 2813, 2296, 771, 2814, 2297, 
         772, 2298, 2840, 773, 998, 1011, 1908, 774, 873, 1819, 775, 874, 
         1820, 776, 1821, 875, 777, 1822, 876, 653, 1691, 689, 1692, 1018}], 
        Line3DBox[{2300, 2448, 2502, 2449, 2815, 2299, 2450, 2503, 2451, 2816,
          2301, 2452, 2504, 2453, 2817, 2302, 2505, 2559, 2506, 2303, 1773, 
         2560, 2507, 2304, 2841, 2508, 2561, 2509, 2305, 2842, 2510, 2562, 
         2511, 2306, 2843, 2512, 2563, 2513, 2818, 2307, 2401, 2402, 2819, 
         2308, 2386, 2400, 2851, 2387}], 
        Line3DBox[{2328, 2466, 2525, 2869, 2372, 2326, 2468, 2526, 2870, 2373,
          2330, 2470, 2527, 2871, 2374, 2332, 2473, 2873, 2375, 2334, 2846, 
         2376, 2336, 2675, 2855, 2414, 2377, 2437, 2863, 2438}], 
        Line3DBox[{2339, 2474, 2528, 2664, 2827, 2338, 2475, 2529, 2874, 2378,
          2340, 2476, 2530, 2875, 2379, 2341, 2477, 2876, 2380, 2342, 2676, 
         2856, 2415, 2381, 2439, 2864, 2440, 2390}], 
        Line3DBox[{2344, 2478, 2531, 2665, 2828, 2343, 2479, 2532, 2666, 2829,
          2345, 2480, 2877, 2382, 2346, 2416, 2417, 2383, 2441, 2442, 2847, 
         2391}], 
        Line3DBox[{2348, 2481, 2667, 2830, 2347, 2482, 2668, 2831, 2349, 2418,
          2419, 2669, 2865, 2443, 2444, 2848, 2392}], 
        Line3DBox[{2351, 2670, 2832, 2350, 2421, 2422, 2833, 2352, 2393, 2420,
          2857, 2394}], 
        Line3DBox[{2354, 2426, 2427, 2834, 2353, 2395, 2423, 2858, 2425, 
         2424}], 
        Line3DBox[{2397, 2396, 2428, 2430, 2859, 2429}], 
        Line3DBox[{2404, 2852, 2673, 2403, 2388, 2316, 2822, 2406, 2405, 2845,
          2315, 2370, 2844, 2314, 1613, 2313, 2518, 2564, 2885, 2688, 2312, 
         2460, 2517, 2459, 2311, 2678, 2884, 2516, 2458, 2310, 2821, 2457, 
         2515, 2456, 2309, 2820, 2455, 2514, 2454, 2599, 2594}], 
        Line3DBox[{2408, 2853, 2409, 2407, 2389, 2861, 2323, 2410, 1670, 2322,
          2825, 2662, 2321, 2824, 2661, 2320, 2464, 2868, 2463, 2319, 2680, 
         2887, 2521, 2462, 2318, 2679, 2886, 2520, 2584, 2583, 2317, 2823, 
         2461, 2519, 2601, 2600, 2595}], 
        Line3DBox[{2436, 2862, 2435, 2371, 2324, 2412, 2411, 2849, 2671, 2337,
          2413, 2854, 2674, 2335, 2826, 2663, 2333, 2472, 2872, 2471, 2331, 
         2683, 2890, 2524, 2469, 2329, 2682, 2889, 2523, 2467, 2325, 2681, 
         2888, 2522, 2465, 2327}]}, {
        GrayLevel[0.2], 
        Line3DBox[CompressedData["
1:eJwVzs8rgwEYB/BH0eRvkHJZTk6r3TgpBwempoZW75VIysVBTjvJj6IodnEy
abG/YOKiHDUbknZQWqmVs88On77P83zf9+0dTdZza30RMU+qPyKhNBQxKFcY
YXggokjDfdM+Rtretidy257hyfzKOH+6hnzgkUn9lay4Z+Uq+xwwreu6X5sn
2OCQI37cZ/U35im2OOaEji6vq5pnev/BKb/uZ7Kgu5Vz7PDpfi4vWNbVZJ4F
vnR1+cI9zzRpscsHb3x77l2WWaTEEnu993zzTn8p/wF40zI/
         "]], 
        Line3DBox[CompressedData["
1:eJwVzb0rxAEYB/BHMbjp/gHJJJNJ3cakDAZHyUldd4PFS0lZTMdguOWiKLbL
6XKDxbkJSXlZcE7+gMugrnSD3cfw6fs8z/f3MpRbT6/1RMQc/b0RefYSEQmZ
7ItYYsVcchuUA/Ysm+YRhs1furzcto9RsY/alynYJzg319xTcpUHHpnSleWF
blxusM8BHbcZ/al5ki0O+XE/kvO6Mzn9/2+O6epO5KKuKtPMcsOv7k3e0uSd
D1ossMOd9wry27NP8pNndqnzwiVFrnilQYZr2t67l2Xf+QMPzDHb
         "]], 
        Line3DBox[{1035, 1284, 1285, 2697, 1036, 1297, 1374, 1298, 2706, 1056,
          1310, 1377, 1311, 2711, 1066, 1320, 1380, 1321, 1078, 2727, 1328, 
         1384, 1329, 1484, 1485, 2807, 1337, 1390, 1338, 1442, 1416, 1453, 
         2804, 1344, 1395, 1345, 1444, 2802, 1417, 1455, 1351, 1400, 1352, 
         2719, 1446, 1418, 1457, 1358, 1405, 1359, 2722, 1448, 1419, 1459, 
         1215, 1364, 1216, 2724, 1473, 1217, 1368, 1185, 1242, 2756, 1186}], 
        Line3DBox[{1037, 1245, 1286, 1246, 2698, 1288, 1255, 1299, 1256, 2707,
          1057, 1266, 1312, 2777, 1267, 1067, 1322, 2780, 1381, 1323, 1079, 
         1330, 1385, 1331, 1089, 2733, 1339, 1391, 1340, 1098, 2737, 1346, 
         1396, 1347, 2715, 1106, 1353, 1401, 1354, 2720, 1112, 1212, 1213, 
         2723, 1214, 1183, 1241, 2755, 1184}], 
        Line3DBox[{1038, 1465, 1466, 1287, 1247, 2699, 1290, 1257, 1300, 2774,
          1258, 1302, 1268, 1313, 2778, 1269, 1068, 1276, 2768, 1324, 1277, 
         1080, 1332, 2781, 1386, 1333, 1090, 1160, 1099, 2738, 1165, 2716, 
         1107, 1209, 1210, 2721, 1211, 1182, 1238, 1240, 2754, 1239}], 
        Line3DBox[{1039, 1468, 1469, 1289, 2773, 1249, 1292, 1440, 1441, 1301,
          2775, 1260, 1304, 1270, 1314, 2779, 1272, 1069, 1278, 2770, 1280, 
         1081, 1155, 2712, 1091, 1161, 2713, 1100, 1204, 1206, 2717, 1207, 
         1181, 1235, 1237, 2753, 1236}], 
        Line3DBox[{1041, 1250, 1293, 2758, 1125, 1042, 1261, 1305, 2761, 1134,
          1059, 1273, 1316, 2765, 1142, 1071, 1281, 2771, 1150, 1083, 2729, 
         1157, 1093, 1202, 2751, 1233, 1163, 1102, 2743, 1203}], 
        Line3DBox[{1043, 1251, 1294, 1126, 2700, 1044, 1262, 1306, 2762, 1135,
          1060, 1274, 1317, 2766, 1143, 1072, 1282, 2772, 1151, 1084, 1200, 
         2750, 1232, 1158, 1094, 2742, 1201, 1180}], 
        Line3DBox[{1045, 1252, 1295, 1127, 2701, 1046, 1263, 1307, 1136, 2708,
          1061, 1275, 2767, 1144, 1073, 1198, 2749, 1230, 1152, 1085, 1199, 
         2730, 1179}], 
        Line3DBox[{1047, 1253, 1128, 2702, 1048, 1264, 1137, 2709, 1062, 1195,
          1228, 1145, 2741, 1074, 1197, 1196, 1177, 2740, 1231, 1178}], 
        Line3DBox[{1049, 1129, 2703, 1050, 1192, 1193, 2710, 1194, 1175, 1229,
          2748, 1176}], 
        Line3DBox[{1051, 1189, 1190, 2704, 1191, 1174, 1225, 2747, 1227, 
         1226}], 
        Line3DBox[{1052, 1173, 1222, 1224, 2746, 1223}], 
        Line3DBox[{1208, 1108, 1166, 2744, 1234, 2752, 1205, 1101, 1162, 2734,
          1092, 1156, 2728, 1082, 1149, 2769, 1279, 1070, 1141, 2764, 1315, 
         1271, 1058, 1133, 2760, 1303, 1259, 1040, 1124, 2798, 1422, 1291, 
         1248, 1467}], 
        Line3DBox[{1283, 1244, 1121, 1030, 1254, 2759, 1130, 1053, 1265, 2763,
          1138, 1063, 2725, 1146, 1075, 1325, 2790, 1382, 1153, 1086, 1334, 
         2791, 1387, 1159, 1095, 2735, 1341, 1392, 1164, 2714, 1103, 1348, 
         1397, 1167, 2718, 1109, 1355, 1402, 2782, 1168, 1113, 1360, 1406, 
         2783, 1169, 1116, 1365, 1408, 2785, 1170, 1118, 1413, 2794, 1414, 
         1171, 1119, 1220, 2757, 1243, 1172, 1120, 2745, 1221}], 
        Line3DBox[{1504, 1712, 1582, 2866, 1505, 1590, 1526, 1762, 2811, 1595,
          1531, 1763, 2813, 1600, 1536, 1715, 2816, 1606, 1542, 1718, 2821, 
         1786, 1611, 1550, 2886, 1721, 1788, 1617, 1558, 2889, 1724, 1622, 
         2870, 1564, 1727, 1626, 2874, 1569, 1730, 2829, 1629, 1573, 1733, 
         2831, 1632, 1576, 1681, 2833, 1707, 1635, 1579, 1682, 2858, 1651}], 
        Line3DBox[{1506, 1713, 1583, 2867, 1507, 1755, 1591, 2883, 1527, 1756,
          1596, 1532, 1764, 2814, 1601, 1537, 1716, 2817, 1607, 1543, 2884, 
         1719, 1612, 1551, 2887, 1722, 1618, 1559, 2890, 1725, 1623, 2871, 
         1565, 1728, 1627, 2875, 1570, 1731, 1630, 2877, 1574, 1679, 1705, 
         2865, 1633, 1577, 1680, 2857, 1650}], 
        Line3DBox[{1508, 1584, 2835, 1509, 758, 2544, 833, 759, 2553, 842, 
         772, 848, 2559, 786, 795, 2517, 721, 1552, 2868, 725, 1560, 2872, 
         729, 2873, 1566, 733, 2876, 1571, 671, 2417, 672, 1648, 1706, 2848, 
         1649}], 
        Line3DBox[{1510, 1735, 1736, 2892, 1791, 1737, 1896, 1738, 2906, 1897,
          1795, 1898, 1903, 1757, 1906, 1758, 2907, 1905, 1797, 1765, 2840, 
         1766, 1799, 1773, 1774, 1803, 2885, 1783, 1784, 1553, 2824, 1619, 
         1561, 2826, 1624, 2846, 1567, 1676, 1677, 2856, 1678, 1646, 1704, 
         2847, 1647}], 
        Line3DBox[{1511, 1739, 1740, 2893, 1792, 1835, 1741, 1808, 1742, 2903,
          1879, 1796, 1880, 1759, 1814, 2838, 1760, 1888, 1798, 1900, 1904, 
         1767, 1908, 1768, 1907, 1800, 1775, 2841, 1776, 1544, 1613, 1554, 
         2825, 1620, 1562, 2854, 1673, 1674, 2855, 1675, 1645, 1701, 1703, 
         2864, 1702}], 
        Line3DBox[{1512, 1743, 1744, 2894, 1793, 1836, 1837, 1809, 1882, 2904,
          1881, 1899, 1883, 1884, 1815, 2839, 1841, 1840, 1901, 1889, 1890, 
         1819, 1769, 1801, 1777, 2842, 1778, 1545, 1614, 2844, 1555, 1670, 
         1671, 1672, 2849, 1644, 1698, 1700, 2863, 1699}], 
        Line3DBox[{1513, 1745, 2836, 1747, 1794, 1838, 1839, 1810, 1886, 2905,
          1885, 1887, 1842, 1843, 1816, 1847, 2901, 1846, 1902, 1891, 1892, 
         1820, 1854, 1853, 1802, 1779, 2843, 1781, 1546, 1665, 2845, 1667, 
         1668, 1643, 2861, 1695, 1697, 2862, 1696}], 
        Line3DBox[{1516, 1749, 1586, 2878, 1517, 1750, 1812, 1824, 2897, 1593,
          1529, 1848, 1849, 1818, 2899, 1828, 1598, 1534, 1855, 1856, 1822, 
         1603, 1539, 1663, 2819, 1693, 1609, 1548, 2852, 1664, 1642}], 
        Line3DBox[{1518, 1751, 1587, 2879, 1519, 1752, 1813, 1825, 2880, 1826,
          1893, 1857, 1761, 1871, 2902, 1861, 1862, 1894, 1863, 1661, 1691, 
         1604, 1540, 1662, 2851, 1641}], 
        Line3DBox[{1520, 1753, 1588, 2881, 1521, 1872, 1754, 1873, 1858, 2882,
          1859, 1860, 1790, 1850, 1874, 1658, 1895, 1875, 2900, 1876, 1833, 
         1770, 1771, 1660, 1659, 1639, 1692, 1640}], 
        Line3DBox[{1522, 1804, 1805, 2895, 1806, 1807, 1655, 1789, 1656, 1831,
          1866, 1865, 1657, 1867, 1868, 1832, 1864, 1638, 1877, 1878, 2891, 
         1870, 1869}], 
        Line3DBox[{1523, 1652, 1653, 2850, 1654, 1637, 1688, 2837, 1690, 1834,
          1689}], 
        Line3DBox[{1524, 1709, 1710, 1685, 1687, 2860, 1686}], 
        Line3DBox[{1734, 1711, 1581, 1503, 2809, 1589, 1525, 2810, 1594, 1530,
          1772, 2812, 1599, 1535, 1714, 2815, 1782, 1605, 1541, 1717, 2820, 
         1785, 1829, 1610, 1549, 1720, 2823, 1787, 1830, 1616, 1557, 2888, 
         1723, 1621, 2869, 1563, 1726, 2827, 1625, 1568, 1729, 2828, 1628, 
         1572, 1732, 2830, 1631, 1575, 2832, 1634, 1578, 1683, 2834, 1708, 
         1636, 1580, 2859, 1684}], 
        Line3DBox[{1514, 1746, 2808, 1585, 1515, 1748, 1811, 1823, 2896, 1592,
          1528, 1844, 1845, 1817, 1827, 2898, 1597, 1533, 1851, 1852, 1821, 
         1602, 1538, 1780, 2818, 1608, 1547, 1666, 2822, 1694, 1615, 1556, 
         2853, 1669}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
+w88TZhFuo+PCD7pLEeTiQfNF2TbIP03+fdWfP2iEnh52KpQoMwk1wmrZlgv
Pek59mAWOTk/TrGmxCGxiMgK3uedYBF4IuJ64SySz7yqyOnxBdVeWa7qdmkH
+3dFtVQGGpLc37zI/jobWJJi066+64VyzzsFpfT5ns3C9aOqYclgNar9xnJ3
F+xle3r5fAAZbdtSvzWrqQXEKn4sZhtNwN8o5YlTutPIn5jwFj7WwgTjUwhP
HoUfVjfvadn1w6WDiyr11Z2gqzXMmzJNgWOCQl2vmMvg4xalBYkzJIjM+6Nw
tIgGo7GBpZEHaAB7pMMmM76BWFTFfhf7Hhjr2JpvykmF62Id8wFG5aCgbfXs
uvsADDqPXWZWnIM1Ue3tgVscVcMuvZO4AU2weds5nXtlCGQ4lK44bKkApZJT
yZfvzEEI07WrZwYr0BPNbfu2iH4GOxYH/oLIOXB8yL5QxtmA3J2Omiz1dyCC
R9K7c8M0+EiVu/6moBElGEt5be4YQ/JCDplDklOw62/fYKp8PTJnMvqWMzmN
tr0Q91n4OgL6u958nG2uRoy5nim29M9/G5n75PTnHohiqle71lWBFqF/a+W+
WeS9eY/cJ95O+GdNjHHBuQz5rVouDg3PolkCm87fs83w5WRMTtQjEgjGCayy
bS4H+dmf9mkfaUD+cfK0vUgvGmMMWvkj9BEkOz4NB9OvAy9q1vU+zw+j51VK
3O6Gbei5yMmVoLFpCDHckPO+kH4ck2G+aWIY6Y7Wu7iHj0P6sSU9h+fDKKDb
95F2/ATa2+CrGkMbBKUa4zBG5wG0Ua5of8R3+vuiPpOJF+kCftWw1FP8vWjZ
kf/9xf4Z5JmX+Ms0ph1O7nPiSlbsQu6B7+wvMNHQ9w0MdeIvGiFzMv5y3NIw
fJE3tx8jlkIiLfLSvX4KmG/N+zstPIZ8N2g/ZZNLgqgE30Km2GlwCbjO+ptz
ErFEdUVfzW1AXBcc/GJ3k0Egh1tHq2oSZQ6u3nU40Ice/DTh5wkcBj7Kc3Wv
1Al06IxcyEDSKKJYBR9Vde2BxCRhB3baOHLynnIQ2DmB9PgNnyzm0Pez6Ydn
2tvH0Lcw7kJrlyl0T/vKWvBSC9y5/S00xZyCOo4Ybptsq0bHxMa1G86OQAyj
mYz1JAWVH+eK+btGRLfUn3k01vVCzd/BsBAuClrcW8J/K2EQJbs5v2qaJcCj
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
/IvRQ7+8jWrjRDgZdELs7iT1v3NkJtf2KdraPpXySZtlIWwWscl8zzteMIHe
VssRQlKJcPzH5pG7r6eR1uGHBk/Hp5H5ufbcjrlOOM+74Vyc3STSY6qU2KxB
Qr3ZN1Ooma0QOSWgjue314ZoCWNeuHVjMBPmhG/ZeU9845wET7Wnp++a1oFy
xg+n6e1zEKb8davGQgeoMjwZ8aPXB4m/7xdNH6JCkuLjR9Wdlaiw+UCjRRMR
WP5xl3+qpELs2j7Sv7aPvFrbR25WcR9icppHrhcjVv34R1GUE8/JExu6IDDP
2TpwmYSOh2VW7PKbQFynV41NrrbBuo4/kVnys0id5nwudOM0Sk0+dcMNe9Gb
vM84rU7D1vfV6p0RNbD1oeKyYPoMyN3xWo6TqEPS8f4ZfWlEWGwv/Bf/lgqK
lx4+8WGmoOHY/NjLBe1oRWW80+XhwH/nsPxf/tdcy/+X9PtyrwtRUGbR8eAh
xQFU5tvcX5jRBvcfhG6zZyIjcTuvm2qZo4hpiDdIZq4RbpBNi5yYSECLLz6p
WVsFr6bO34l8NwUB668ExiRS0PjSAm2dRx4KfJkeuXN1EEotj0UnKFHRvKNG
dFR8E/LYYrmoJNzzX94eWMvbNmt5+3nS6uLmk1QkWdTPtDm+B2mZ+aZ4iTRB
SIEdt0noHOiLPz1+jq8SplIIYW/LJ2DQfM+nFh8qmp59F7ftUza6+XlXXPyx
vv/yLazl26y1fHthjMhwmZ5vs/axLp/WQ7Bf7EUS4huH0X8Ffd7xZPgboK18
urUUBk6/f27ycBTUHuluqL9KgYih38VPworhQ2VuO+/KEHibf+a9Ts+7x5TV
zyTGF4IU0XNuPXEATER81HN1qOA2GVCot5gPiuiO7OhyH2xQua+fnE4FjpP7
4kys8qB0a+wdAc1eKF4wYS4seosM0mqkHAsXkBOz+bPcyApo8NhwSEKqA93x
biw6GEZD7y5q308TrYYo6l8795kR9P3Ppr7aF2QknxEfCOtrIVwg4+b7jDHk
LTgattA1j26Yzhn2P6iB2vUv9sjS+8aFku0PWLfNIkLJuh/7B2tBwfFgVBo9
fl1N1Did3l/ylF3WLqT3ldX114a9T8yh0lOyKGNoAmVJ/w26/bUO7Dwfbc6v
pa8HvY/58o+GkXvD9tLlhXooG5Qb8HlGQ+drNuZKc9UgzqyVoR7nDlDR2Xvc
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
9g+Vc5tG5dyOUHUbql5J1a1Wuj/aZ1ILPN7NDLcVm4jAMc3Qev8RuHcwPQy5
K9ftf64jhzU0Mz+LvNPlozntawfroOzZSTHLiSLiI+BuWUu/Dk9TnIMrxTmk
UpzDG+p7lqK+Zzvqe26irp8b3f9cP9eo6yeKeq8oZ/7Pe8XP1HvFBmod0KDW
gTZqHWCnclzrqRzXaCrH1Uzhn/oDuc9/6+zfI//WWam+Ro7qa6b+k+8aTe2r
D1L7aitmGQGfE7WQwMuRUFtRB69+rl37U3cUpOZZPP2nquD7UoH1ETod4DV1
1d3gwjA8yoNVtXN1MP/84PAa81x4XSsSqRNMA+sd+W+X0vf5W680GPOdCCFf
tar6KqdoQKPWgZPUOsBPrQMj1DrDRq0zodQ686/3fN9/vOcLqf1/939yXHNH
ZoofMVeByCoBy18cXeT153x/zfdDEBU+7ca2vRSGdzWq33btJbPBj+zO2Q/A
PmrdyKLWDUZq3dCj7keg7scP1P2YdWZHrLppLSiXqKSucm6EZRUWem8yRkBl
g3aSzs8KkE+I/bPJqZcUjvYonZIbgHjq942j3htnUr9vZ5KB7tLpKjiizLVc
+UkL6BpPH2K5MgIZ2V2DX2drIVyrX2SmvQLu5HqeYRejwaY8f0cDvno4PsB2
IEI7A8o/P93iT3++OxvLrDemX+d8JfUv/xypBP0wR6V2VhospvqOLqrvsKX6
jrrOqwq656rB+smhHSVL28nlRc5X3n76P0/65/940kW9hWuY6Pdpc+lhuTb2
KLC6ZR6/cZz2/5tr+uyZe1eIOf3+SkrXdmuqJk+MjTfz1o7C73Db9S1q9SBk
G+hh9SuZjMsobrtO339NUbmgm6g+aBHVBwlSuaCbqVzQtVQu6AF/U7CMyYH+
PcrzJ2bLQeztHV7kwfy+/r6K7x3qFBubTPN8lT/qSy3XqxyDiMjKARntcKCt
2CKM3NBHx4wZ5IWsz39TfGP6gWy3tHVDrkfxjdIh5HlMP/4Yx3N6x3FLezy3
n/eWqMHz+rZL5zlkigqI7/R4BZ7D5wZy+uD5u6bllpG7U9XwoOXQjMt4GeSM
GH1H3qwow+J78NIOeG273j2p9amyQJEX+/GfIxD+nDW8Fj7AZOfPRQ8W1EPE
3ueqyCmNPmBbixzAj/DFLMgFaCTcG0ceYIVO45MHs80QtzvC8Jx1KegtunoV
+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
/wEXfkL3
      "]], {
    DisplayFunction -> Identity, Axes -> True, 
     AxesLabel -> {None, None, None}, BoxRatios -> {1, 1, 0.4}, 
     DisplayFunction :> Identity, FaceGridsStyle -> Automatic, 
     Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
     PlotRange -> {All, All, All}, 
     PlotRangePadding -> {Automatic, Automatic, Automatic}, 
     Ticks -> {Automatic, Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SubscriptBox["f", "5"], "(", 
         RowBox[{"x", ",", "y"}], ")"}], 
       RowBox[{
         SubscriptBox["f", "6"], "(", 
         RowBox[{"x", ",", "y"}], ")"}]}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.677168989410822*^9, 3.6772187300513*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Shifted", " ", "geometry", " ", "test"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.67723109515385*^9, 3.677231102067917*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"z", "=", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["x", "1"], "+=", " ", "z"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "2"], "+=", "z"}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "3"], "+=", "z"}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    SubscriptBox["x", "4"], "+=", "z"}], ";"}]}]}], "Input",
 CellChangeTimes->{{3.6772311199555197`*^9, 3.67723116007732*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Element", " ", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"C1", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["f", "k"], "[", 
          RowBox[{"x", ",", "y"}], "]"}], "*", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"x", ",", "y", ",", " ", 
            SubscriptBox["x", "2"], ",", 
            SubscriptBox["x", "3"], ",", " ", 
            SubscriptBox["x", "1"]}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             SubscriptBox["J", 
              RowBox[{"1", ",", "inv"}]], "]"}], ".", 
            RowBox[{
             SubscriptBox["df", "j"], "[", 
             RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.676801180119191*^9, 3.6768012318806877`*^9}, {
  3.676801304482424*^9, 3.676801317690495*^9}, {3.676801365274522*^9, 
  3.676801367410934*^9}, {3.677231320912232*^9, 3.677231321768941*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Element", " ", "2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.676801346553103*^9, 3.676801350314348*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"C2", "=", 
   RowBox[{"ParallelTable", "[", 
    RowBox[{
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["f", "k"], "[", 
         RowBox[{"x", ",", "y"}], "]"}], "*", 
        RowBox[{
         RowBox[{"g", "[", 
          RowBox[{"x", ",", "y", ",", " ", 
           SubscriptBox["x", "3"], ",", 
           SubscriptBox["x", "4"], ",", " ", 
           SubscriptBox["x", "1"]}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            SubscriptBox["J", 
             RowBox[{"2", ",", "inv"}]], "]"}], ".", 
           RowBox[{
            SubscriptBox["df", "j"], "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "9"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676801373754784*^9, 3.676801373946609*^9}, {
  3.676801416523119*^9, 3.6768014172375097`*^9}, {3.677168690629199*^9, 
  3.6771686916774817`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Cmat1", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "6"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "7"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "8"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "9"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "15"}], "}"}], "->", 
       SubscriptBox["C1", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", "0"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"15", ",", "16"}], "}"}], "\[Rule]", "0"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cmat2", " ", "=", " ", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "4"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "7"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"3", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "7"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"2", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "7"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "9"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"9", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "8"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "8"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "11"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"8", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "11"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "4"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "12"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"4", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "12"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "5"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "13"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"12", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"5", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "13"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "6"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "14"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"13", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"6", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "14"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "7"}], "\[RightDoubleBracket]"}]]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"14", ",", "16"}], "}"}], "->", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"7", ",", "10"}], "\[RightDoubleBracket]"}]]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"16", ",", "16"}], "}"}], "\[Rule]", 
       SubscriptBox["C2", 
        RowBox[{"\[LeftDoubleBracket]", 
         RowBox[{"10", ",", "10"}], "\[RightDoubleBracket]"}]]}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CmatShft", " ", "=", " ", 
   RowBox[{"Cmat1", "-", 
    RowBox[{"Transpose", "[", "Cmat1", "]"}], "+", 
    RowBox[{"(", 
     RowBox[{"Cmat2", "-", 
      RowBox[{"Transpose", "[", "Cmat2", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Transpose", "[", "CmatShft", "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"-", "1"}], "*", "CmatShft"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.677231235686779*^9, 3.677231248150844*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "CmatShft", "]"}]], "Input",
 CellChangeTimes->{{3.67723126258883*^9, 3.677231266126995*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       FractionBox["1607", "13440"]}], "0", 
      FractionBox["1607", "13440"], 
      RowBox[{"-", 
       FractionBox["159", "2240"]}], 
      RowBox[{"-", 
       FractionBox["351", "4480"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["39", "64"]}], 
      FractionBox["1257", "4480"], 
      FractionBox["351", "4480"], 
      FractionBox["159", "2240"], 
      RowBox[{"-", 
       FractionBox["1257", "4480"]}], 
      FractionBox["39", "64"], 
      FractionBox["201", "2240"], 
      RowBox[{"-", 
       FractionBox["201", "2240"]}]},
     {
      FractionBox["1607", "13440"], "0", 
      FractionBox["901", "13440"], "0", 
      FractionBox["123", "320"], 
      RowBox[{"-", 
       FractionBox["639", "2240"]}], 
      FractionBox["99", "640"], 
      FractionBox["627", "4480"], 
      RowBox[{"-", 
       FractionBox["549", "2240"]}], 
      FractionBox["723", "2240"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["99", "560"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["901", "13440"]}], "0", 
      FractionBox["579", "4480"], 
      FractionBox["303", "896"], 
      RowBox[{"-", 
       FractionBox["321", "448"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["309", "4480"]}], 
      RowBox[{"-", 
       FractionBox["171", "2240"]}], 
      FractionBox["321", "448"], 
      RowBox[{"-", 
       FractionBox["303", "896"]}], 
      FractionBox["171", "2240"], 
      FractionBox["309", "4480"], 
      FractionBox["39", "448"], 
      RowBox[{"-", 
       FractionBox["39", "448"]}]},
     {
      RowBox[{"-", 
       FractionBox["1607", "13440"]}], "0", 
      RowBox[{"-", 
       FractionBox["579", "4480"]}], "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["99", "640"]}], 
      RowBox[{"-", 
       FractionBox["627", "4480"]}], "0", "0", 
      FractionBox["639", "2240"], 
      RowBox[{"-", 
       FractionBox["123", "320"]}], 
      RowBox[{"-", 
       FractionBox["723", "2240"]}], 
      FractionBox["549", "2240"], "0", 
      FractionBox["99", "560"]},
     {
      FractionBox["159", "2240"], 
      RowBox[{"-", 
       FractionBox["123", "320"]}], 
      RowBox[{"-", 
       FractionBox["303", "896"]}], "0", "0", 
      FractionBox["4401", "4480"], 
      RowBox[{"-", 
       FractionBox["153", "224"]}], 
      RowBox[{"-", 
       FractionBox["1737", "4480"]}], 
      RowBox[{"-", 
       FractionBox["549", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "160"]}], "0", "0", "0", "0", 
      FractionBox["135", "64"], "0"},
     {
      FractionBox["351", "4480"], 
      FractionBox["639", "2240"], 
      FractionBox["321", "448"], "0", 
      RowBox[{"-", 
       FractionBox["4401", "4480"]}], "0", 
      FractionBox["927", "560"], 
      RowBox[{"-", 
       FractionBox["2439", "4480"]}], 
      FractionBox["9", "2240"], 
      FractionBox["639", "4480"], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["621", "2240"]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["99", "640"]}], "0", 
      FractionBox["99", "640"], 
      FractionBox["153", "224"], 
      RowBox[{"-", 
       FractionBox["927", "560"]}], "0", "0", 
      FractionBox["2313", "4480"], 
      FractionBox["261", "640"], 
      FractionBox["927", "560"], 
      RowBox[{"-", 
       FractionBox["153", "224"]}], 
      RowBox[{"-", 
       FractionBox["261", "640"]}], 
      RowBox[{"-", 
       FractionBox["2313", "4480"]}], 
      RowBox[{"-", 
       FractionBox["27", "14"]}], 
      FractionBox["27", "14"]},
     {"0", 
      RowBox[{"-", 
       FractionBox["627", "4480"]}], "0", 
      FractionBox["627", "4480"], 
      FractionBox["1737", "4480"], 
      FractionBox["2439", "4480"], "0", "0", 
      RowBox[{"-", 
       FractionBox["171", "112"]}], 
      FractionBox["9", "14"], 
      RowBox[{"-", 
       FractionBox["2439", "4480"]}], 
      RowBox[{"-", 
       FractionBox["1737", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "14"]}], 
      FractionBox["171", "112"], 
      RowBox[{"-", 
       FractionBox["999", "560"]}], 
      FractionBox["999", "560"]},
     {
      FractionBox["39", "64"], 
      FractionBox["549", "2240"], 
      FractionBox["309", "4480"], "0", 
      FractionBox["549", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], 
      RowBox[{"-", 
       FractionBox["2313", "4480"]}], 
      FractionBox["171", "112"], "0", 
      RowBox[{"-", 
       FractionBox["2727", "4480"]}], "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox["81", "320"]}], "0"},
     {
      RowBox[{"-", 
       FractionBox["1257", "4480"]}], 
      RowBox[{"-", 
       FractionBox["723", "2240"]}], 
      FractionBox["171", "2240"], "0", 
      FractionBox["9", "160"], 
      RowBox[{"-", 
       FractionBox["639", "4480"]}], 
      RowBox[{"-", 
       FractionBox["261", "640"]}], 
      RowBox[{"-", 
       FractionBox["9", "14"]}], 
      FractionBox["2727", "4480"], "0", "0", "0", "0", "0", 
      FractionBox["4779", "2240"], "0"},
     {
      RowBox[{"-", 
       FractionBox["351", "4480"]}], "0", 
      RowBox[{"-", 
       FractionBox["321", "448"]}], 
      RowBox[{"-", 
       FractionBox["639", "2240"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["927", "560"]}], 
      FractionBox["2439", "4480"], "0", "0", "0", 
      FractionBox["459", "640"], 
      RowBox[{"-", 
       FractionBox["639", "4480"]}], 
      RowBox[{"-", 
       FractionBox["9", "2240"]}], "0", 
      FractionBox["621", "2240"]},
     {
      RowBox[{"-", 
       FractionBox["159", "2240"]}], "0", 
      FractionBox["303", "896"], 
      FractionBox["123", "320"], "0", "0", 
      FractionBox["153", "224"], 
      FractionBox["1737", "4480"], "0", "0", 
      RowBox[{"-", 
       FractionBox["459", "640"]}], "0", 
      FractionBox["9", "160"], 
      FractionBox["549", "4480"], "0", 
      RowBox[{"-", 
       FractionBox["135", "64"]}]},
     {
      FractionBox["1257", "4480"], "0", 
      RowBox[{"-", 
       FractionBox["171", "2240"]}], 
      FractionBox["723", "2240"], "0", "0", 
      FractionBox["261", "640"], 
      FractionBox["9", "14"], "0", "0", 
      FractionBox["639", "4480"], 
      RowBox[{"-", 
       FractionBox["9", "160"]}], "0", 
      RowBox[{"-", 
       FractionBox["783", "896"]}], "0", 
      RowBox[{"-", 
       FractionBox["4779", "2240"]}]},
     {
      RowBox[{"-", 
       FractionBox["39", "64"]}], "0", 
      RowBox[{"-", 
       FractionBox["309", "4480"]}], 
      RowBox[{"-", 
       FractionBox["549", "2240"]}], "0", "0", 
      FractionBox["2313", "4480"], 
      RowBox[{"-", 
       FractionBox["171", "112"]}], "0", "0", 
      FractionBox["9", "2240"], 
      RowBox[{"-", 
       FractionBox["549", "4480"]}], 
      FractionBox["783", "896"], "0", "0", 
      FractionBox["81", "320"]},
     {
      RowBox[{"-", 
       FractionBox["201", "2240"]}], 
      FractionBox["99", "560"], 
      RowBox[{"-", 
       FractionBox["39", "448"]}], "0", 
      RowBox[{"-", 
       FractionBox["135", "64"]}], 
      FractionBox["621", "2240"], 
      FractionBox["27", "14"], 
      FractionBox["999", "560"], 
      FractionBox["81", "320"], 
      RowBox[{"-", 
       FractionBox["4779", "2240"]}], "0", "0", "0", "0", "0", "0"},
     {
      FractionBox["201", "2240"], "0", 
      FractionBox["39", "448"], 
      RowBox[{"-", 
       FractionBox["99", "560"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["27", "14"]}], 
      RowBox[{"-", 
       FractionBox["999", "560"]}], "0", "0", 
      RowBox[{"-", 
       FractionBox["621", "2240"]}], 
      FractionBox["135", "64"], 
      FractionBox["4779", "2240"], 
      RowBox[{"-", 
       FractionBox["81", "320"]}], "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {16, 16}, 0, {
     1, {{0, 16, 26, 42, 52, 62, 72, 88, 104, 114, 124, 134, 144, 154, 164, 
       173, 182}, {{1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {
       2}, {5}, {6}, {9}, {10}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
       9}, {10}, {15}, {1}, {2}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {
       16}, {5}, {6}, {9}, {10}, {15}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {
       1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {2}, {3}, {
       5}, {6}, {7}, {4}, {8}, {11}, {12}, {13}, {14}, {16}, {9}, {10}, {
       15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {4}, {11}, {12}, {13}, {14}, {
       16}, {9}, {10}, {15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {
       15}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {15}, {1}, {3}, {
       4}, {7}, {8}, {11}, {12}, {13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {
       11}, {12}, {13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {
       13}, {14}, {16}, {1}, {3}, {4}, {7}, {8}, {11}, {12}, {13}, {14}, {
       16}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {9}, {10}, {1}, {3}, {4}, {
       7}, {8}, {11}, {12}, {13}, {14}}}, {
      0, 0, Rational[1607, 13440], 0, 0, Rational[351, 4480], Rational[
       159, 2240], Rational[-1257, 4480], Rational[39, 64], 
       Rational[-201, 2240], Rational[-1607, 13440], Rational[-159, 2240], 
       Rational[-351, 4480], Rational[-39, 64], Rational[1257, 4480], 
       Rational[201, 2240], Rational[1607, 13440], 0, Rational[901, 13440], 
       Rational[123, 320], Rational[-639, 2240], Rational[99, 640], Rational[
       627, 4480], Rational[-549, 2240], Rational[723, 2240], 
       Rational[-99, 560], 0, Rational[-901, 13440], 0, Rational[579, 4480], 
       0, 0, Rational[321, 448], Rational[-303, 896], Rational[171, 2240], 
       Rational[309, 4480], Rational[-39, 448], Rational[303, 896], 
       Rational[-321, 448], Rational[-309, 4480], Rational[-171, 2240], 
       Rational[39, 448], Rational[-1607, 13440], Rational[-579, 4480], 0, 
       Rational[-99, 640], Rational[-627, 4480], Rational[639, 2240], 
       Rational[-123, 320], Rational[-723, 2240], Rational[549, 2240], 
       Rational[99, 560], Rational[159, 2240], Rational[-123, 320], 
       Rational[-303, 896], 0, Rational[4401, 4480], Rational[-153, 224], 
       Rational[-1737, 4480], Rational[-549, 4480], Rational[-9, 160], 
       Rational[135, 64], Rational[351, 4480], Rational[639, 2240], Rational[
       321, 448], Rational[-4401, 4480], 0, Rational[927, 560], 
       Rational[-2439, 4480], Rational[9, 2240], Rational[639, 4480], 
       Rational[-621, 2240], 0, Rational[-99, 640], 0, Rational[153, 224], 
       Rational[-927, 560], 0, Rational[99, 640], 0, Rational[927, 560], 
       Rational[-153, 224], Rational[-261, 640], Rational[-2313, 4480], 
       Rational[27, 14], Rational[2313, 4480], Rational[261, 640], 
       Rational[-27, 14], 0, Rational[-627, 4480], 0, Rational[1737, 4480], 
       Rational[2439, 4480], 0, 0, Rational[627, 4480], Rational[-2439, 4480],
        Rational[-1737, 4480], Rational[-9, 14], Rational[171, 112], Rational[
       999, 560], Rational[-171, 112], Rational[9, 14], Rational[-999, 560], 
       Rational[39, 64], Rational[549, 2240], Rational[309, 4480], Rational[
       549, 4480], Rational[-9, 2240], Rational[-2313, 4480], Rational[
       171, 112], 0, Rational[-2727, 4480], Rational[-81, 320], 
       Rational[-1257, 4480], Rational[-723, 2240], Rational[171, 2240], 
       Rational[9, 160], Rational[-639, 4480], Rational[-261, 640], 
       Rational[-9, 14], Rational[2727, 4480], 0, Rational[4779, 2240], 
       Rational[-351, 4480], Rational[-321, 448], Rational[-639, 2240], 
       Rational[-927, 560], Rational[2439, 4480], 0, Rational[459, 640], 
       Rational[-639, 4480], Rational[-9, 2240], Rational[621, 2240], 
       Rational[-159, 2240], Rational[303, 896], Rational[123, 320], Rational[
       153, 224], Rational[1737, 4480], Rational[-459, 640], 0, Rational[
       9, 160], Rational[549, 4480], Rational[-135, 64], Rational[1257, 4480],
        Rational[-171, 2240], Rational[723, 2240], Rational[261, 640], 
       Rational[9, 14], Rational[639, 4480], Rational[-9, 160], 0, 
       Rational[-783, 896], Rational[-4779, 2240], Rational[-39, 64], 
       Rational[-309, 4480], Rational[-549, 2240], Rational[2313, 4480], 
       Rational[-171, 112], Rational[9, 2240], Rational[-549, 4480], Rational[
       783, 896], 0, Rational[81, 320], Rational[-201, 2240], Rational[
       99, 560], Rational[-39, 448], Rational[-135, 64], Rational[621, 2240], 
       Rational[27, 14], Rational[999, 560], Rational[81, 320], 
       Rational[-4779, 2240], Rational[201, 2240], Rational[39, 448], 
       Rational[-99, 560], Rational[-27, 14], Rational[-999, 560], 
       Rational[-621, 2240], Rational[135, 64], Rational[4779, 2240], 
       Rational[-81, 320]}}]]]]], "Output",
 CellChangeTimes->{3.677231872772403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<DampingMatrixAlg_Shifted.csv\>\"", ",", " ", "CmatShft"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677231271231511*^9, 3.677231275249044*^9}}],

Cell[BoxData["\<\"DampingMatrixAlg_Shifted.csv\"\>"], "Output",
 CellChangeTimes->{3.67723187295164*^9}]
}, Open  ]]
},
Evaluator->"Local",
WindowSize->{1920, 1004},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape",
"PaperSize"->{842.25, 594.75},
"PostScriptOutputFile"->"",
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->True,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{54.000000585, 54.000000585}, {72.00000078000001, \
72.00000078000001}}},
CellContext->Notebook,
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4385, 143, 253, "Input"],
Cell[4946, 165, 3927, 134, 253, "Input"],
Cell[8876, 301, 1487, 47, 99, "Input"],
Cell[10366, 350, 743, 25, 121, "Input"],
Cell[11112, 377, 1176, 40, 121, "Input"],
Cell[12291, 419, 1150, 32, 56, "Input"],
Cell[13444, 453, 2659, 75, 79, "Input"],
Cell[16106, 530, 14256, 373, 307, "Input"],
Cell[30365, 905, 12869, 348, 263, "Input"],
Cell[43237, 1255, 524, 11, 32, "Input"],
Cell[CellGroupData[{
Cell[43786, 1270, 234, 5, 32, "Input"],
Cell[44023, 1277, 193, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44253, 1285, 28178, 727, 603, "Input"],
Cell[72434, 2014, 73, 1, 31, "Output"]
}, Open  ]],
Cell[72522, 2018, 27809, 715, 537, "Input"],
Cell[100334, 2735, 579, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[100938, 2751, 252, 5, 32, "Input"],
Cell[101193, 2758, 193, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101423, 2766, 28097, 724, 581, "Input"],
Cell[129523, 3492, 73, 1, 31, "Output"]
}, Open  ]],
Cell[129611, 3496, 490, 12, 55, "Input"],
Cell[130104, 3510, 1434, 40, 56, "Input"],
Cell[131541, 3552, 156, 3, 32, "Input"],
Cell[131700, 3557, 1304, 36, 34, "Input"],
Cell[133007, 3595, 27300, 705, 537, "Input"],
Cell[160310, 4302, 380, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[160715, 4315, 26115, 711, 559, "Input"],
Cell[186833, 5028, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186943, 5034, 271, 6, 32, "Input"],
Cell[187217, 5042, 163, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187417, 5049, 190, 3, 32, "Input"],
Cell[187610, 5054, 12352, 308, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199999, 5367, 191, 3, 32, "Input"],
Cell[200193, 5372, 11798, 318, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212028, 5695, 190, 3, 32, "Input"],
Cell[212221, 5700, 13090, 335, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225348, 6040, 560, 12, 77, "Input"],
Cell[225911, 6054, 147, 2, 31, "Output"],
Cell[226061, 6058, 151, 2, 31, "Output"],
Cell[226215, 6062, 149, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226401, 6069, 134, 2, 32, "Input"],
Cell[226538, 6073, 12284, 307, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238859, 6385, 137, 2, 32, "Input"],
Cell[238999, 6389, 11727, 317, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250763, 6711, 139, 2, 32, "Input"],
Cell[250905, 6715, 13003, 334, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263945, 7054, 441, 10, 77, "Input"],
Cell[264389, 7066, 96, 1, 31, "Output"],
Cell[264488, 7069, 98, 1, 31, "Output"],
Cell[264589, 7072, 97, 1, 31, "Output"]
}, Open  ]],
Cell[264701, 7076, 595, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[265321, 7095, 1209, 31, 32, "Input"],
Cell[266533, 7128, 284213, 4758, 304, "Output"]
}, Open  ]],
Cell[550761, 11889, 90, 1, 32, "Input"],
Cell[550854, 11892, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[550971, 11897, 1062, 29, 32, "Input"],
Cell[552036, 11928, 247659, 4162, 304, "Output"]
}, Open  ]],
Cell[799710, 16093, 92, 1, 32, "Input"],
Cell[799805, 16096, 96, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[799926, 16101, 1065, 29, 32, "Input"],
Cell[800994, 16132, 217232, 3671, 304, "Output"]
}, Open  ]],
Cell[1018241, 19806, 175, 3, 32, "Input"],
Cell[1018419, 19811, 618, 20, 121, "Input"],
Cell[1019040, 19833, 1488, 40, 56, "Input"],
Cell[1020531, 19875, 156, 3, 32, "Input"],
Cell[1020690, 19880, 1304, 36, 34, "Input"],
Cell[1021997, 19918, 25585, 697, 515, "Input"],
Cell[1047585, 20617, 504, 14, 55, "Input"],
Cell[CellGroupData[{
Cell[1048114, 20635, 135, 2, 32, "Input"],
Cell[1048252, 20639, 13329, 336, 426, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061618, 20980, 198, 4, 32, "Input"],
Cell[1061819, 20986, 104, 1, 31, "Output"]
}, Open  ]]
}
]
*)

